{"version":3,"file":"index-xW_uqiHb.js","sources":["../../src/verify.js","../../src/judgement/input/callback.js","../../src/judgement/input/point.js","../../src/judgement/input/index.js","../../src/judgement/score.js","../../src/judgement/point.js","../../src/judgement/index.js","../../src/game/ticker.js","../../src/game/callback.js","../../src/game/index.js","../../src/chart/convert/utils.js","../../src/chart/judgeline.js","../../src/chart/eventlayer.js","../../src/chart/note.js","../../src/chart/convert/official.js","../../src/chart/convert/phiedit.js","../../src/chart/convert/rephiedit.js","../../src/chart/index.js","../../src/audio/unmute.js","../../src/audio/clock.js","../../src/audio/timer.js","../../src/audio/index.js","../../src/effect/reader/prpr.js","../../src/effect/index.js","../../src/effect/shader/presets/chromatic.glsl?raw","../../src/effect/shader/presets/circle_blur.glsl?raw","../../src/effect/shader/presets/fisheye.glsl?raw","../../src/effect/shader/presets/glitch.glsl?raw","../../src/effect/shader/presets/grayscale.glsl?raw","../../src/effect/shader/presets/noise.glsl?raw","../../src/effect/shader/presets/pixel.glsl?raw","../../src/effect/shader/presets/radial_blur.glsl?raw","../../src/effect/shader/presets/shockwave.glsl?raw","../../src/effect/shader/presets/vignette.glsl?raw","../../src/effect/shader/index.js","../../src/phizone/index.js","../../src/index.js"],"sourcesContent":["function bool(bool, defaultValue = false)\n{\n    return (typeof bool === 'boolean') ? !!bool : defaultValue;\n}\n\nfunction number(number, defaultValue = 0, min = -Infinity, max = Infinity)\n{\n    return (!isNaN(number) && min <= parseFloat(number) && parseFloat(number) <= max ? parseFloat(number) : defaultValue);\n}\n\nfunction text(text, defaultValue = '')\n{\n    return ((typeof text === 'string') && text != '') ? text : defaultValue;\n}\n\nexport {\n    bool,\n    number,\n    text\n}","function touchStart(e)\n{\n    e.preventDefault();\n    for (const i of e.changedTouches)\n    {\n        const { clientX, clientY, identifier } = i;\n        this.addInput('touch', identifier, clientX - this.renderSize.widthOffset, clientY);\n    }\n}\n\nfunction touchMove(e)\n{\n    e.preventDefault();\n    for (const i of e.changedTouches)\n    {\n        const { clientX, clientY, identifier } = i;\n        this.moveInput('touch', identifier, clientX - this.renderSize.widthOffset, clientY);\n    }\n}\n\nfunction touchEnd(e)\n{\n    e.preventDefault();\n    for (const i of e.changedTouches)\n    {\n        this.removeInput('touch', i.identifier);\n    }\n}\n\nfunction mouseStart(e)\n{\n    e.preventDefault();\n    const { clientX, clientY, button } = e;\n    this.addInput('mouse', button, clientX - this.renderSize.widthOffset, clientY);\n}\n\nfunction mouseMove(e)\n{\n    const { clientX, clientY, button } = e;\n    this.moveInput('mouse', button, clientX - this.renderSize.widthOffset, clientY);\n}\n\nfunction mouseEnd(e)\n{\n    this.removeInput('mouse', e.button);\n}\n\nexport default {\n    touchStart,\n    touchMove,\n    touchEnd,\n    mouseStart,\n    mouseMove,\n    mouseEnd\n}","export default class InputPoint\n{\n    constructor(type, id, x, y)\n    {\n        this.type = type;\n        this.id = id;\n\n        this.x = x;\n        this.y = y;\n\n        this.isActive = true;\n        this.isTapped = false;\n        this.isMoving = false;\n        this.isFlickable = false;\n        this.isFlicked = false;\n\n        this._deltaX = 0;\n        this._deltaY = 0;\n        this._lastDeltaX = 0;\n        this._lastDeltaY = 0;\n        this._currentTime = performance.now();\n        this._deltaTime = this._currentTime;\n    }\n\n    move(x, y)\n    {\n        this._lastDeltaX = this._deltaX;\n        this._lastDeltaY = this._deltaY;\n\n        this._deltaX = x - this.x;\n        this._deltaY = y - this.y;\n\n        this.x = x;\n        this.y = y;\n\n        this.isMoving = true;\n\n        {\n            let currentTime = performance.now();\n\n            this._deltaTime = currentTime - this._currentTime;\n            this._currentTime = currentTime;\n        }\n\n        {\n            let moveSpeed = (this._deltaX * this._lastDeltaX + this._deltaY * this._lastDeltaY) / Math.sqrt(this._lastDeltaX ** 2 + this._lastDeltaY ** 2) / this._deltaTime;\n\n            if (this.isFlickable && moveSpeed < 0.50)\n            {\n                this.isFlickable = false;\n                this.isFlicked = false;\n            }\n            else if (!this.isFlickable && moveSpeed > 1.00)\n            {\n                this.isFlickable = true;\n            }\n        }\n    }\n}","import ListenerCallback from './callback';\nimport InputPoint from './point';\nimport { Graphics } from 'pixi.js';\n\n\n\nexport default class Input\n{\n    constructor(params = {})\n    {\n        if (!params.canvas) throw new Error('You cannot add inputs without a canvas');\n\n        this.inputs = [];\n\n        for (const name in ListenerCallback)\n        {\n            this['_' + name] = ListenerCallback[name].bind(this);\n        }\n\n        this.addListenerToCanvas(params.canvas);\n        this.reset();\n    }\n\n    addListenerToCanvas(canvas)\n    {\n        if (!(canvas instanceof HTMLCanvasElement)) throw new Error('This is not a canvas');\n\n        const passiveIfSupported = { passive: false };\n\n        canvas.addEventListener('touchstart', this._touchStart, passiveIfSupported);\n        canvas.addEventListener('touchmove', this._touchMove, passiveIfSupported);\n        canvas.addEventListener('touchend', this._touchEnd, passiveIfSupported);\n        canvas.addEventListener('touchcancel', this._touchEnd, passiveIfSupported);\n\n        // 鼠标适配，其实并不打算做\n        canvas.addEventListener('mousedown', this._mouseStart, passiveIfSupported);\n        canvas.addEventListener('mousemove', this._mouseMove);\n        canvas.addEventListener('mouseup', this._mouseEnd);\n        \n        // canvas.addEventListener('contextmenu', this._noCanvasMenu, passiveIfSupported);\n    }\n\n    removeListenerFromCanvas(canvas)\n    {\n        if (!(canvas instanceof HTMLCanvasElement)) throw new Error('This is not a canvas');\n\n        canvas.removeEventListener('touchstart', this._touchStart);\n        canvas.removeEventListener('touchmove', this._touchMove);\n        canvas.removeEventListener('touchend', this._touchEnd);\n        canvas.removeEventListener('touchcancel', this._touchEnd);\n\n        // 鼠标适配，其实并不打算做\n        canvas.removeEventListener('mousedown', this._mouseStart);\n        canvas.removeEventListener('mousemove', this._mouseMove);\n        canvas.removeEventListener('mouseup', this._mouseEnd);\n\n        // canvas.removeEventListener('contextmenu', this._noCanvasMenu);\n    }\n\n    reset()\n    {\n        this.inputs.length = 0;\n    }\n\n    createSprite(stage, showInputPoint = true)\n    {\n        if (showInputPoint)\n        {\n            this.sprite = new Graphics();\n            this.sprite.zIndex = 99999;\n            stage.addChild(this.sprite);\n        }\n    }\n\n    addInput(type, id, x, y)\n    {\n        const { inputs } = this;\n        let idx = inputs.findIndex(point => point.type === type && point.id === id);\n        if (idx !== -1) inputs.splice(idx, 1);\n        inputs.push(new InputPoint(type, id, x, y));\n    }\n\n    moveInput(type, id, x, y)\n    {\n        const { inputs } = this;\n        let point = inputs.find(point => point.type === type && point.id === id);\n        if (point) point.move(x, y);\n    }\n\n    removeInput(type, id)\n    {\n        const { inputs } = this;\n        let point = inputs.find(point => point.type === type && point.id === id);\n        if (point) point.isActive = false;\n    }\n\n    calcTick()\n    {\n        const { inputs } = this;\n\n        if (this.sprite) this.sprite.clear();\n\n        for (let i = 0, length = inputs.length; i < length; i++)\n        {\n            let point = inputs[i];\n\n            if (this.sprite)\n            {\n                this.sprite\n                    .beginFill(!point.isTapped ? 0xFFFF00 : point.isMoving ? 0x00FFFF : 0xFF00FF)\n                    .drawCircle(point.x, point.y, this._inputPointSize)\n                    .endFill();\n            }\n\n            if (point.isActive)\n            {\n                point.isTapped = true;\n                point.isMoving = false;\n            }\n            else\n            {\n                inputs.splice(i--, 1);\n                length -= 1;\n            }\n        }\n    }\n\n    resizeSprites(size)\n    {\n        this.renderSize = size;\n        this._inputPointSize = this.renderSize.heightPercent * 30;\n    }\n\n    destroySprites()\n    {\n        if (this.sprite)\n        {\n            this.sprite.destroy();\n            this.sprite = undefined;\n        }\n    }\n}","import { Text, Container } from 'pixi.js';\n\nexport default class Score\n{\n    constructor(notesCount = 0, showAPStatus = true, isChallengeMode = false, autoPlay = false)\n    {\n        this._notesCount = Number(notesCount);\n        this._showAPStatus = !!showAPStatus;\n        this._autoPlay = !!autoPlay;\n\n        if (isNaN((this._notesCount)) || this._notesCount <= 0)\n        {\n            console.warn('Invaild note count, Won\\'t calculate score.');\n            this._notesCount = 0;\n        }\n\n        this.scorePerNote  = isChallengeMode ? 1000000 / notesCount : 900000 / notesCount;\n        this.scorePerCombo = isChallengeMode ? 0 : 100000 / notesCount;\n\n        this.renderSize = {};\n        \n        this.reset();\n    }\n\n    reset()\n    {\n        this._score   = 0;\n        this.score    = 0;\n        this.acc      = 0;\n        this.combo    = 0;\n        this.maxCombo = 0;\n\n        this.judgedNotes = 0;\n        this.perfect     = 0;\n        this.good        = 0;\n        this.bad         = 0;\n        this.miss        = 0;\n\n        this.judgeLevel  = -1;\n        this.APType      = 2;\n        this.levelPassed = false;\n\n        if (this.sprites)\n        {\n            this.sprites.combo.number.text = '0';\n            this.sprites.acc.text = 'ACCURACY 0.00%';\n            this.sprites.score.text = '0000000';\n\n            this.sprites.combo.text.position.x = this.sprites.combo.number.width + this.renderSize.heightPercent * 6;\n        }\n    }\n\n    createSprites(stage)\n    {\n        if (this.sprites) return;\n\n        this.sprites = {};\n\n        this.sprites.combo = {};\n        this.sprites.combo.container = new Container();\n        this.sprites.combo.container.zIndex = 99999;\n\n        this.sprites.combo.number = new Text('0', {\n            fontFamily: 'A-OTF Shin Go Pr6N H',\n            fill: 0xFFFFFF\n        });\n        this.sprites.combo.number.alpha = 0.81;\n        this.sprites.combo.text = new Text((this._autoPlay ? 'AUT' + 'OPL' + 'AY' : 'COMBO'), {\n            fontFamily: 'MiSans',\n            fill: 0xFFFFFF\n        });\n        this.sprites.combo.text.alpha = 0.55;\n        this.sprites.combo.container.addChild(this.sprites.combo.number, this.sprites.combo.text);\n        stage.addChild(this.sprites.combo.container);\n\n        this.sprites.acc = new Text('ACCURACY 0.00%', {\n            fontFamily: 'MiSans',\n            fill: 0xFFFFFF\n        });\n        this.sprites.acc.alpha = 0.63;\n        this.sprites.acc.zIndex = 99999;\n        stage.addChild(this.sprites.acc);\n\n        this.sprites.score = new Text('0000000', {\n            fontFamily: 'A-OTF Shin Go Pr6N H',\n            fill: 0xFFFFFF\n        });\n        this.sprites.score.alpha = 0.58;\n        this.sprites.score.anchor.set(1, 0);\n        this.sprites.score.zIndex = 99999;\n        stage.addChild(this.sprites.score);\n    }\n\n    resizeSprites(size, isEnded)\n    {\n        this.renderSize = size;\n\n        if (!this.sprites) return;\n\n        this.sprites.combo.number.style.fontSize = size.heightPercent * 60;\n        this.sprites.combo.text.style.fontSize = size.heightPercent * 30;\n\n        this.sprites.acc.style.fontSize = size.heightPercent * 20;\n\n        this.sprites.score.style.fontSize = size.heightPercent * 50;\n\n        if (!isEnded)\n        {\n            this.sprites.combo.container.position.x = size.heightPercent * 72;\n            this.sprites.combo.container.position.y = size.heightPercent * 41;\n            this.sprites.combo.text.position.x = this.sprites.combo.number.width + size.heightPercent * 6;\n            this.sprites.combo.text.position.y = size.heightPercent * 30;\n\n            this.sprites.acc.position.x = size.heightPercent * 72;\n            this.sprites.acc.position.y = size.heightPercent * 113;\n\n            this.sprites.score.position.x = size.width - size.heightPercent * 139;\n            this.sprites.score.position.y = size.heightPercent * 61;\n        }\n        else\n        {\n            this.sprites.combo.container.position.y = size.height;\n            this.sprites.acc.position.y = size.height;\n            this.sprites.score.position.y = size.height;\n        }\n    }\n\n    pushJudge(type = 0, judgelines = [])\n    {\n        if (!this._autoPlay)\n        {\n            if (type > 2)\n            {\n                this.combo += 1;\n                if (this.combo > this.maxCombo) this.maxCombo = this.combo;\n\n                if (type === 4) this.perfect += 1;\n                else {\n                    this.good += 1;\n                    if (this.APType >= 2)\n                    {\n                        this.APType = 1;\n\n                        if (this._showAPStatus)\n                        {\n                            for (const judgeline of judgelines)\n                            {\n                                if (!isNaN(judgeline.color)) return;\n                                if (!judgeline.sprite) return;\n                                judgeline.sprite.tint = 0xB4E1FF;\n                            };\n                        }\n                    }\n                }\n\n                this._score += this.scorePerNote + (this.combo >= this.maxCombo ? this.scorePerCombo * (type === 4 ? 1 : 0.65) : 0); \n            }\n            else\n            {\n                if (type === 2)this.bad += 1;\n                else this.miss += 1;\n\n                if (this.APType >= 1)\n                {\n                    this.APType = 0;\n\n                    if (this._showAPStatus)\n                    {\n                        for (const judgeline of judgelines)\n                        {\n                            if (!isNaN(judgeline.color)) return;\n                            if (!judgeline.sprite) return;\n                            judgeline.sprite.tint = 0xFFFFFF;\n                        };\n                    }\n                }\n                \n                this.combo = 0;\n            }\n        }\n        else\n        {\n            this.perfect += 1;\n            this.combo += 1;\n            this.maxCombo = this.combo;\n            this._score += this.scorePerNote + this.scorePerCombo; \n        }\n        \n        this.judgedNotes++;\n        this.score = Math.round(this._score);\n        this.acc = (this.perfect + this.good * 0.65) / this.judgedNotes;\n\n        if (this.score >= 1000000) this.judgeLevel = 6;\n\t\telse if (this.score >= 960000) this.judgeLevel = 5;\n\t\telse if (this.score >= 920000) this.judgeLevel = 4;\n\t\telse if (this.score >= 880000) this.judgeLevel = 3;\n\t\telse if (this.score >= 820000) this.judgeLevel = 2;\n\t\telse if (this.score >= 700000) this.judgeLevel = 1;\n        else this.judgeLevel = 0;\n\n        if (this.judgeLevel >= 1) this.levelPassed = true;\n\n        if (this.sprites)\n        {\n            this.sprites.combo.number.text = this.combo;\n\n            this.sprites.acc.text = 'ACCURACY ' + (this.acc * 100).toFixed(2) + '%';\n            this.sprites.score.text = fillZero((this.score).toFixed(0), 7);\n\n            this.sprites.combo.text.position.x = this.sprites.combo.number.width + this.renderSize.heightPercent * 6;\n        }\n    }\n\n    destroySprites()\n    {\n        if (!this.sprites) return;\n        \n        this.sprites.combo.number.destroy();\n        this.sprites.combo.text.destroy();\n        this.sprites.combo.container.destroy();\n        this.sprites.combo = undefined;\n\n        this.sprites.acc.destroy();\n        this.sprites.acc = undefined;\n\n        this.sprites.score.destroy();\n        this.sprites.score = undefined;\n\n        this.sprites = undefined;\n    }\n}\n\n\n\nfunction fillZero(num, length = 3)\n{\n    let result = num + '';\n    while (result.length < length)\n    {\n        result = '0' + result;\n    }\n    return result;\n}","export default class JudgePoint\n{\n    constructor(input, type = 1)\n    {\n        this.x = input.x;\n        this.y = input.y;\n        this.input = input;\n        this.type  = type; // 1: tap, 2: flick, 3: hold\n    }\n\n    isInArea(x, y, cosr, sinr, hw)\n    {\n        return Math.abs((this.x - x) * cosr + (this.y - y) * sinr) <= hw;\n    }\n}","import * as verify from '@/verify';\nimport Input from './input';\nimport Score from './score';\nimport InputPoint from './input/point';\nimport JudgePoint from './point';\nimport { ParticleContainer, AnimatedSprite, Texture, Sprite  } from 'pixi.js';\n\nconst particleCountPerClickAnim = 4;\n\nconst AllJudgeTimes = {\n    bad     : 180,\n    good    : 160,\n    perfect : 80,\n\n    badChallenge     : 90,\n    goodChallenge    : 75,\n    perfectChallenge : 40\n};\n\nvar ClickAnimatePointCache;\n(async () =>\n{\n    const pointSize = 26;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d', { alpha: true });\n\n    canvas.width = canvas.height = pointSize * 2;\n    ctx.clearRect(0, 0, pointSize * 2, pointSize * 2);\n    ctx.beginPath();\n    ctx.arc(pointSize, pointSize, pointSize, 0, Math.PI * 2);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fill();\n\n    const result = Texture.from(await createImageBitmap(canvas));\n    result.defaultAnchor.set(0.5);\n\n    Texture.addToCache(result, 'clickAnimatePoint');\n\n    ClickAnimatePointCache = result;\n})();\n\nexport default class Judgement\n{\n    constructor(params = {})\n    {\n        this.chart    = params.chart;\n        this.stage    = params.stage;\n        this.textures = params.assets.textures;\n        this.sounds   = params.assets.sounds;\n        \n        if (!params.stage) throw new Error('You cannot do judgement without a stage');\n        if (!params.chart) throw new Error('You cannot do judgement without a chart');\n\n        this._autoPlay       = verify.bool(params.autoPlay, false);\n        this._hitsound       = verify.bool(params.hitsound, true);\n        this._hitsoundVolume = verify.number(params.hitsoundVolume, 1, 0, 1);\n\n        this.score = new Score(this.chart.totalRealNotes, verify.bool(params.showAPStatus, true), verify.bool(params.challangeMode, false), this._autoPlay);\n        this.input = new Input({ canvas: params.canvas, autoPlay: this._autoPlay });\n\n        /* ===== 判定用时间计算 ===== */\n        this.judgeTimes = {\n            perfect : (!params.challangeMode ? AllJudgeTimes.perfect : AllJudgeTimes.perfectChallenge) / 1000,\n            good    : (!params.challangeMode ? AllJudgeTimes.good : AllJudgeTimes.goodChallenge) / 1000,\n            bad     : (!params.challangeMode ? AllJudgeTimes.bad : AllJudgeTimes.badChallenge) / 1000\n        };\n\n        this.calcTick = this.calcTick.bind(this);\n        this.calcNote = calcNoteJudge.bind(this);\n\n        this.reset();\n    }\n\n    reset()\n    {\n        this.judgePoints = [];\n        this.score.reset();\n        this.input.reset();\n\n        this._holdBetween = 0.15;\n\n        if (this.clickParticleContainer) this.clickParticleContainer.removeChildren();\n    }\n\n    createSprites(showInputPoint = true)\n    {\n        this.clickParticleContainer = new ParticleContainer(1500, {\n            vertices: true,\n            position: true,\n            scale: true,\n            tint: true\n        });\n        this.clickParticleContainer.zIndex = 99999;\n        this.stage.addChild(this.clickParticleContainer);\n\n        this.score.createSprites(this.stage);\n        this.input.createSprite(this.stage, showInputPoint);\n\n        this._clickAnimBaseScale = {\n            normal : 256 / this.textures.normal[0].baseTexture.width,\n            bad    : 256 / this.textures.bad[0].baseTexture.width\n        };\n        // this.stage.addChild(this.input.sprite);\n    }\n\n    resizeSprites(size, isEnded)\n    {\n        this.renderSize = size;\n        this.score.resizeSprites(size, isEnded);\n        this.input.resizeSprites(size, isEnded);\n    }\n\n    calcTick()\n    {\n        this.createJudgePoints();\n\n        this.input.calcTick();\n\n        for (let i = 0, length = this.clickParticleContainer.children.length; i < length; i++)\n        {\n            const particle = this.clickParticleContainer.children[i];\n            if (!particle) break;\n            const currentTimeProgress = (Date.now() - particle.startTime) / 500;\n            \n            if (currentTimeProgress >= 1)\n            {\n                // this.clickParticleContainer.removeChild(particle);\n                particle.destroy(false);\n                continue;\n            }\n\n            particle.alpha = 1 - currentTimeProgress;\n\n            particle.scale.set((((0.2078 * currentTimeProgress - 1.6524) * currentTimeProgress + 1.6399) * currentTimeProgress + 0.4988) * particle.baseScale);\n            particle.distance = particle._distance * (9 * currentTimeProgress / (8 * currentTimeProgress + 1)) * 0.6 * particle.baseScale;\n\n            particle.position.x = particle.distance * particle.cosr - particle.distance * particle.sinr + particle.basePos.x;\n            particle.position.y = particle.distance * particle.cosr + particle.distance * particle.sinr + particle.basePos.y;\n        }\n    }\n\n    createJudgePoints()\n    {\n        this.judgePoints.length = 0;\n\n        if (!this._autoPlay)\n        {\n            for (let i = 0, length = this.input.inputs.length; i < length; i++)\n            {\n                let inputPoint = this.input.inputs[i];\n\n                if (!inputPoint.isTapped) this.judgePoints.push(new JudgePoint(inputPoint, 1));\n                if (inputPoint.isActive) this.judgePoints.push(new JudgePoint(inputPoint, 3));\n                if (inputPoint.isFlickable && !inputPoint.isFlicked) this.judgePoints.push(new JudgePoint(inputPoint, 2));\n            }\n        }\n    }\n\n    pushNoteJudge(note)\n    {\n        this.score.pushJudge(note.score, this.chart.judgelines);\n        if (note.score >= 2)\n        {\n            this.createClickAnimate(note);\n            if (note.score >= 3) this.playHitsound(note);\n        }\n    }\n\n    createClickAnimate(note)\n    {\n        let anim = new AnimatedSprite(note.score >= 3 ? this.textures.normal : this.textures.bad),\n            baseScale = this.renderSize.noteScale * 5.6;\n\n        if (note.score >= 3 && note.type != 3) anim.position.set(note.sprite.judgelineX, note.sprite.judgelineY);\n        else anim.position.copyFrom(note.sprite.position);\n\n        anim.scale.set((note.score >= 3 ? this._clickAnimBaseScale.normal : this._clickAnimBaseScale.bad) * baseScale);\n        anim.tint = note.score === 4 ? 0xFFECA0 : note.score === 3 ? 0xB4E1FF : 0x6c4343;\n\n        anim.loop = false;\n\n        if (note.score >= 3)\n        {\n            let currentParticleCount = 0;\n            while (currentParticleCount < particleCountPerClickAnim)\n            {\n                let particle = new Sprite(ClickAnimatePointCache);\n\n                particle.tint = note.score === 4 ? 0xFFECA0 : 0xB4E1FF;\n\n                particle.startTime = Date.now();\n                particle.basePos   = anim.position;\n                particle.baseScale = baseScale;\n\n                particle.distance  = particle._distance = Math.random() * 100 + 250;\n                particle.direction = Math.floor(Math.random() * 360);\n\t\t\t\tparticle.sinr = Math.sin(particle.direction);\n\t\t\t\tparticle.cosr = Math.cos(particle.direction);\n\n                this.clickParticleContainer.addChild(particle);\n\n                currentParticleCount++;\n            }\n        }\n        else\n        {\n            anim.angle = note.sprite.angle;\n        }\n\n        anim.onFrameChange = function () {\n            this.alpha = 1 - (this.currentFrame / this.totalFrames);\n        };\n        anim.onComplete = function () {\n            this.destroy(false);\n        };\n\n        this.stage.addChild(anim);\n        anim.play();\n\n        return anim;\n    }\n\n    playHitsound(note)\n    {\n        if (!this._hitsound) return;\n        if (note.hitsound) note.hitsound.play();\n        else\n        {\n            switch (note.type)\n            {\n                case 1:\n                case 3:\n                {\n                    this.sounds.tap.play();\n                    break;\n                }\n                case 2:\n                {\n                    this.sounds.drag.play();\n                    break;\n                }\n                case 4:\n                {\n                    this.sounds.flick.play();\n                    break;\n                }\n            }\n        }\n    }\n\n    destroySprites()\n    {\n        this.reset();\n\n        this.clickParticleContainer.destroy({ children: true, texture: false, baseTexture: false });\n\n        this.input.destroySprites();\n        this.score.destroySprites();\n    }\n}\n\nfunction calcNoteJudge(currentTime, note)\n{\n    if (note.isFake) return; // 忽略假 Note\n    if (note.isScored && note.isScoreAnimated) return; // 已记分忽略\n    if (note.time - this.judgeTimes.bad > currentTime) return; // 不在记分范围内忽略\n    \n    if (!note.isScored)\n    {\n        if (note.type !== 3 && note.time + this.judgeTimes.bad < currentTime)\n        {\n            note.isScored = true;\n            note.score = 1;\n            note.scoreTime = NaN;\n\n            this.score.pushJudge(0, this.chart.judgelines);\n\n            note.sprite.alpha = 0;\n            note.isScoreAnimated = true;\n            \n            return;\n        }\n        else if (note.type === 3 && note.time + this.judgeTimes.good < currentTime)\n        {\n            note.isScored = true;\n            note.score = 1;\n            note.scoreTime = NaN;\n\n            this.score.pushJudge(0, this.chart.judgelines);\n\n            note.sprite.alpha = 0.5;\n            note.isScoreAnimated = true;\n\n            return;\n        }\n    }\n    \n\n    let timeBetween = note.time - currentTime,\n        timeBetweenReal = timeBetween > 0 ? timeBetween : timeBetween * -1,\n        judgeline = note.judgeline,\n        notePosition = note.sprite.position;\n    \n    if (note.type !== 3 && !note.isScoreAnimated && note.time <= currentTime)\n    {\n        note.sprite.alpha = 1 + (timeBetween / this.judgeTimes.bad);\n    }\n\n    // 自动模式则自行添加判定点\n    if (this._autoPlay)\n    {\n        let input = { x: notePosition.x, y: notePosition.y, isFlicked: false };\n\n        if (note.type === 1) {\n            if (timeBetween <= 0) this.judgePoints.push(new JudgePoint(input, 1));\n        } else if (note.type === 2) {\n            if (timeBetween <= this.judgeTimes.bad) this.judgePoints.push(new JudgePoint(input, 3));\n        } else if (note.type === 3) {\n            if (!note.isScored && timeBetween <= 0) this.judgePoints.push(new JudgePoint(input, 1));\n            else if (note.isScored && currentTime - note.lastHoldTime >= this._holdBetween) this.judgePoints.push(new JudgePoint(input, 3));\n        } else if (note.type === 4) {\n            if (timeBetween <= this.judgeTimes.bad) this.judgePoints.push(new JudgePoint(input, 2));\n        }\n    }\n\n    switch (note.type)\n    {\n        case 1:\n        {\n            for (let i = 0, length = this.judgePoints.length; i < length; i++)\n            {\n                if (\n                    this.judgePoints[i].type === 1 &&\n                    this.judgePoints[i].isInArea(notePosition.x, notePosition.y, judgeline.cosr, judgeline.sinr, this.renderSize.noteWidth)\n                ) {\n                    if (timeBetweenReal <= this.judgeTimes.bad)\n                    {\n                        note.isScored = true;\n                        note.scoreTime = timeBetween;\n\n                        if (timeBetweenReal <= this.judgeTimes.perfect) note.score = 4;\n                        else if (timeBetweenReal <= this.judgeTimes.good) note.score = 3;\n                        else note.score = 2;\n                    }\n\n                    if (note.isScored)\n                    {\n                        this.pushNoteJudge(note);\n                        note.sprite.alpha = 0;\n                        note.isScoreAnimated = true;\n\n                        this.judgePoints.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 2:\n        {\n            if (note.isScored && !note.isScoreAnimated && timeBetween <= 0)\n            {\n                this.pushNoteJudge(note);\n                note.sprite.alpha = 0;\n                note.isScoreAnimated = true;\n            }\n            else if (!note.isScored)\n            {\n                for (let i = 0, length = this.judgePoints.length; i < length; i++)\n                {\n                    if (\n                        this.judgePoints[i].isInArea(notePosition.x, notePosition.y, judgeline.cosr, judgeline.sinr, this.renderSize.noteWidth) &&\n                        timeBetweenReal <= this.judgeTimes.good\n                    ) {\n                        note.isScored = true;\n                        note.score = 4;\n                        note.scoreTime = NaN;\n                        break;\n                    }\n                }\n            }\n            \n            break;\n        }\n        case 3:\n        {\n            if (note.isScored)\n            {\n                if (currentTime - note.lastHoldTime >= this._holdBetween)\n                {\n                    this.createClickAnimate(note);\n                }\n\n                if (note.holdTimeLength - currentTime <= this.judgeTimes.bad)\n                {\n                    this.score.pushJudge(note.score, this.chart.judgelines);\n                    note.isScoreAnimated = true;\n                    break;\n                }\n\n                if (currentTime - note.lastHoldTime >= this._holdBetween)\n                {\n                    note.lastHoldTime = currentTime;\n                    note.isHolding = false;\n                }\n            }\n\n            for (let i = 0, length = this.judgePoints.length; i < length; i++)\n            {\n                if (\n                    !note.isScored &&\n                    this.judgePoints[i].type === 1 &&\n                    this.judgePoints[i].isInArea(notePosition.x, notePosition.y, judgeline.cosr, judgeline.sinr, this.renderSize.noteWidth) &&\n                    timeBetweenReal <= this.judgeTimes.good\n                ) {\n                    note.isScored = true;\n                    note.scoreTime = timeBetween;\n\n                    if (timeBetweenReal <= this.judgeTimes.perfect) note.score = 4;\n                    else note.score = 3;\n\n                    this.createClickAnimate(note);\n                    this.playHitsound(note);\n                    \n                    note.isHolding = true;\n                    note.lastHoldTime = currentTime;\n\n                    this.judgePoints.splice(i, 1);\n                    break;\n                }\n                else if (this.judgePoints[i].isInArea(notePosition.x, notePosition.y, judgeline.cosr, judgeline.sinr, this.renderSize.noteWidth))\n                {\n                    note.isHolding = true;\n                }\n            }\n\n            if (!this.paused && note.isScored && !note.isHolding)\n            {\n                note.score = 1;\n                note.scoreTime = NaN;\n                \n                this.score.pushJudge(1, this.chart.judgelines);\n\n                note.sprite.alpha = 0.5;\n                note.isScoreAnimated = true;\n            }\n\n            break;\n        }\n        case 4:\n        {\n            if (note.isScored && !note.isScoreAnimated && timeBetween <= 0)\n            {\n                this.pushNoteJudge(note);\n                note.sprite.alpha = 0;\n                note.isScoreAnimated = true;\n            }\n            else if (!note.isScored)\n            {\n                for (let i = 0, length = this.judgePoints.length; i < length; i++)\n                {\n                    if (\n                        this.judgePoints[i].type === 2 &&\n                        this.judgePoints[i].isInArea(notePosition.x, notePosition.y, judgeline.cosr, judgeline.sinr, this.renderSize.noteWidth) &&\n                        timeBetweenReal <= this.judgeTimes.good\n                    ) {\n                        note.isScored = true;\n                        note.score = 4;\n                        note.scoreTime = NaN;\n\n                        this.judgePoints[i].input.isFlicked = true;\n                        this.judgePoints.splice(i, 1);\n\n                        break;\n                    }\n                }\n            }\n\n            break;\n        }\n    }\n}","\r\nfunction calcTick()\r\n{\r\n    { // 为暂停按钮计算渐变\r\n        let pauseButton = this.sprites.pauseButton;\r\n        if (pauseButton.clickCount === 1)\r\n        {\r\n            if (pauseButton.alpha < 1)\r\n            { // 按钮刚被点击一次\r\n                pauseButton.alpha = 0.5 + (0.5 * ((Date.now() - pauseButton.lastClickTime) / 200));\r\n            }\r\n            else if (pauseButton.alpha >= 1 && Date.now() - pauseButton.lastClickTime >= 2000)\r\n            { // 按钮刚被点击一次，且 2s 后没有进一步操作\r\n                pauseButton.clickCount = 0;\r\n                pauseButton.lastRenderTime = Date.now();\r\n                pauseButton.isEndRendering = true;\r\n            }\r\n            else if (pauseButton.alpha >= 1)\r\n            { // 按钮被点击一次，且 200ms 后不透明度已到 1\r\n                pauseButton.alpha = 1;\r\n                pauseButton.lastRenderTime = Date.now();\r\n            }\r\n        }\r\n        else if (pauseButton.clickCount === 0 && pauseButton.isEndRendering)\r\n        {\r\n            if (pauseButton.alpha > 0.5)\r\n            {\r\n                pauseButton.alpha = 1 - (0.5 * ((Date.now() - pauseButton.lastRenderTime) / 200));\r\n            }\r\n            else if (pauseButton.alpha <= 0.5)\r\n            {\r\n                pauseButton.alpha = 0.5;\r\n                pauseButton.lastRenderTime = Date.now();\r\n                pauseButton.isEndRendering = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (this._animateStatus)\r\n    {\r\n        case 0:\r\n        {\r\n            this._calcGameAnimateTick(true);\r\n            break;\r\n        }\r\n        case 1:\r\n        {\r\n            let { chart, effects, judgement, functions, processors, sprites, render, _settings: settings } = this;\r\n            let currentTime = chart.music.currentTime - (chart.offset + settings.offset);\r\n\r\n            for (let i = 0, length = chart.bpmList.length; i < length; i++)\r\n            {\r\n                let bpm = chart.bpmList[i];\r\n\r\n                if (bpm.endTime < currentTime) continue;\r\n                if (bpm.startTime > currentTime) break;\r\n\r\n                judgement._holdBetween = bpm.holdBetween;\r\n            };\r\n\r\n            for (let i = 0, length = chart.judgelines.length; i < length; i++)\r\n            {\r\n                const judgeline = chart.judgelines[i];\r\n                judgeline.calcTime(currentTime, render.sizer);\r\n                for (let x = 0, length = processors.judgeline.length; x < length; x++) processors.judgeline[x](judgeline, currentTime);\r\n            };\r\n            for (let i = 0, length = chart.notes.length; i < length; i++)\r\n            {\r\n                const note = chart.notes[i];\r\n                note.calcTime(currentTime, render.sizer);\r\n                for (let x = 0, length = processors.note.length; x < length; x++) processors.note[x](note, currentTime);\r\n                judgement.calcNote(currentTime, note);\r\n            };\r\n\r\n            if (!this._isPaused)\r\n            {\r\n                judgement.calcTick();\r\n                for (let x = 0, length = functions.tick.length; x < length; x++) functions.tick[x](this, currentTime);\r\n\r\n                if (settings.shader)\r\n                {\r\n                    render.gameContainer.filters = [];\r\n                    render.stage.filters = [];\r\n\r\n                    for (let i = 0, length = effects.length; i < length; i++)\r\n                    {\r\n                        const effect = effects[i];\r\n                        if (effect.shader === null) continue;\r\n                        if (effect.endTime < currentTime) continue;\r\n                        if (effect.startTime > currentTime) break;\r\n\r\n                        effect.calcTime(currentTime, render.sizer.shaderScreenSize);\r\n                        if (effect.isGlobal) render.stage.filters.push(effect.shader);\r\n                        else render.gameContainer.filters.push(effect.shader);\r\n                    }\r\n                }\r\n            }\r\n\r\n            sprites.progressBar.scale.x = chart.music.progress * sprites.progressBar.baseScaleX;\r\n\r\n            break;\r\n        }\r\n        case 2:\r\n        {\r\n            this._calcGameAnimateTick(false);\r\n            break;\r\n        }\r\n        case 3:\r\n        {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction calcGameAnimateTick(isStart = true)\r\n{\r\n    let _progress = (Date.now() - (isStart ? this._gameStartTime : this._gameEndTime)) / 1500,\r\n        progress = (isStart ? 1 - Math.pow(1 - _progress, 4) : Math.pow(1 - _progress, 4));\r\n    let sprites = {\r\n        score: this.judgement.score.sprites,\r\n        chart: this.chart.sprites\r\n    };\r\n\r\n    // Combo、准度、分数、暂停按钮和进度条\r\n    sprites.score.combo.container.position.y = -(sprites.score.combo.container.height + sprites.score.acc.height) + ((sprites.score.combo.container.height + sprites.score.acc.height + (this.render.sizer.heightPercent * 41)) * progress);\r\n    sprites.score.acc.position.y = sprites.score.combo.container.position.y + (this.render.sizer.heightPercent * 72);\r\n    sprites.score.score.position.y = -(sprites.score.score.height) + ((sprites.score.score.height + (this.render.sizer.heightPercent * 61)) * progress);\r\n    this.sprites.pauseButton.position.y = -(this.sprites.pauseButton.height) + ((this.sprites.pauseButton.height + (this.render.sizer.heightPercent * (61 + 14))) * progress);\r\n    this.sprites.progressBar.position.y = -(this.render.sizer.heightPercent * 12) * (1 - progress);\r\n\r\n    // 谱面信息\r\n    sprites.chart.info.songName.position.y = (this.render.sizer.height + sprites.chart.info.songName.height) - ((sprites.chart.info.songName.height + (this.render.sizer.heightPercent * 66)) * progress);\r\n    sprites.chart.info.songDiff.position.y = sprites.chart.info.songName.position.y + (this.render.sizer.heightPercent * 24);\r\n\r\n    // 假判定线过场动画\r\n    this.sprites.fakeJudgeline.width = this.render.sizer.width * progress;\r\n\r\n    // 背景图亮度\r\n    if (this.chart.sprites.bg && this.chart.sprites.bg.cover) this.chart.sprites.bg.cover.alpha = this._settings.bgDim * progress;\r\n\r\n    if (_progress >= 1)\r\n    {\r\n        if (isStart)\r\n        {\r\n            this._animateStatus = 1;\r\n            this.resize(true, false);\r\n\r\n            setTimeout(async () =>\r\n            {\r\n                this.chart.music.play(true);\r\n\r\n                for (const judgeline of this.chart.judgelines)\r\n                {\r\n                    if (!judgeline.sprite) continue;\r\n\r\n                    judgeline.sprite.alpha = 1;\r\n                    if (judgeline.debugSprite) judgeline.debugSprite.visible = true;\r\n                };\r\n                for (const note of this.chart.notes)\r\n                {\r\n                    if (note.sprite) note.sprite.alpha = note.basicAlpha;\r\n                };\r\n\r\n                this._isPaused = false;\r\n                this._isEnded = false;\r\n                this.sprites.fakeJudgeline.visible = false;\r\n\r\n                this._runCallback('start');\r\n            }, 200);\r\n        }\r\n        else\r\n        {\r\n            this._animateStatus = 3;\r\n            this._isPaused = true;\r\n            this._isEnded = true;\r\n            this._runCallback('end');\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    calcTick,\r\n    calcGameAnimateTick\r\n}","\r\nfunction onKeyPressCallback(e)\r\n{\r\n    let keyCode     = e.keyCode,\r\n        isHoldCtrl  = e.ctrlKey,\r\n        isHoldShift = e.shiftKey,\r\n        skipTime    = 0;\r\n\r\n    if (this._isPaused) return;\r\n    if (!this._settings.autoPlay) return;\r\n    if (this._animateStatus !== 1) return;\r\n\r\n    switch (keyCode)\r\n    {\r\n        case 37: {\r\n            skipTime = -2;\r\n            break;\r\n        }\r\n        case 39: {\r\n            skipTime = 2;\r\n            break;\r\n        }\r\n        default: {\r\n            return;\r\n        }\r\n    }\r\n    \r\n    if (isHoldCtrl && isHoldShift) skipTime *= 5;\r\n    else if (isHoldCtrl) skipTime *= 2;\r\n    else if (isHoldShift) skipTime *= 0.5;\r\n\r\n    {\r\n        let currentTime = this.chart.music.currentTime;\r\n        let calcedNoteCount = 0;\r\n\r\n        for (const note of this.chart.notes)\r\n        {\r\n            if (note.isFake) continue;\r\n            if (note.score <= 0) break;\r\n            if (note.time < currentTime)\r\n            {\r\n                calcedNoteCount++;\r\n                continue;\r\n            }\r\n\r\n            note.reset();\r\n        }\r\n\r\n        this.judgement.score.perfect = this.judgement.score.judgedNotes = this.judgement.score.combo = this.judgement.score.maxCombo = calcedNoteCount;\r\n        this.judgement.score._score = (this.judgement.score.scorePerNote + this.judgement.score.scorePerCombo) * calcedNoteCount;\r\n\r\n        if (this.judgement.score.sprites)\r\n        {\r\n            this.judgement.score.sprites.combo.number.text = this.judgement.score.combo;\r\n\r\n            this.judgement.score.sprites.acc.text = 'ACCURACY ' + (this.judgement.score.acc * 100).toFixed(2) + '%';\r\n            this.judgement.score.sprites.score.text = fillZero((this.judgement.score.score).toFixed(0), 7);\r\n\r\n            this.judgement.score.sprites.combo.text.position.x = this.judgement.score.sprites.combo.number.width + this.render.sizer.heightPercent * 6;\r\n        }\r\n\r\n        function fillZero(num, length = 3)\r\n        {\r\n            let result = num + '';\r\n            while (result.length < length)\r\n            {\r\n                result = '0' + result;\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    this.chart.music.seek(skipTime);\r\n}\r\n\r\nfunction pauseBtnClickCallback()\r\n{\r\n    let pauseButton = this.sprites.pauseButton;\r\n    pauseButton.clickCount++;\r\n    if (pauseButton.clickCount >= 2 && Date.now() - pauseButton.lastClickTime <= 2000)\r\n    {\r\n        this.pause();\r\n\r\n        pauseButton.lastRenderTime = Date.now();\r\n        pauseButton.isEndRendering = true;\r\n        pauseButton.clickCount = 0;\r\n    }\r\n    pauseButton.lastClickTime = Date.now();\r\n}\r\n\r\nfunction gameEndCallback()\r\n{\r\n    this._animateStatus = 2;\r\n    this._gameEndTime = Date.now();\r\n    this.sprites.fakeJudgeline.visible = true;\r\n\r\n    this.judgement.clickParticleContainer.removeChildren()\r\n\r\n    if (this._settings.showAPStatus)\r\n    {\r\n        if (this.judgement.score.APType === 1) this.sprites.fakeJudgeline.tint = 0xB4E1FF;\r\n        else if (this.judgement.score.APType === 0) this.sprites.fakeJudgeline.tint = 0xFFFFFF;\r\n    }\r\n    \r\n    for (const judgeline of this.chart.judgelines)\r\n    {\r\n        if (!judgeline.sprite) continue;\r\n\r\n        judgeline.sprite.alpha = 0;\r\n        if (judgeline.debugSprite) judgeline.debugSprite.visible = false;\r\n    };\r\n    for (const note of this.chart.notes)\r\n    {\r\n        if (!note.sprite) continue;\r\n\r\n        note.sprite.alpha = 0;\r\n        if (note.debugSprite) note.debugSprite.visible = false;\r\n    };\r\n\r\n    if (this.judgement.input.sprite) this.judgement.input.sprite.clear();\r\n}\r\n\r\nfunction runCallback(type)\r\n{\r\n    if (!this.functions[type]) return;\r\n    this.functions[type].forEach((callback) => callback(this));\r\n}\r\n\r\nexport {\r\n    onKeyPressCallback,\r\n    pauseBtnClickCallback,\r\n    gameEndCallback,\r\n    runCallback\r\n}","import * as verify from '@/verify';\r\nimport Judgement from '@/judgement';\r\nimport * as TickerFunc from './ticker';\r\nimport * as CallbackFunc from './callback';\r\nimport { Shader } from '@/main';\r\nimport { Application, Container, Texture, Sprite, Graphics, Text, Rectangle, settings as PIXISettings } from 'pixi.js';\r\n\r\nPIXISettings.RENDER_OPTIONS.hello = true;\r\n\r\nconst ProgressBarCache = (() =>\r\n{\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = 1920;\r\n    canvas.height = 12;\r\n    ctx.clearRect(0, 0, 1920, 12);\r\n    ctx.fillStyle = '#FFFFFF';\r\n    ctx.fillRect(0, 0, 1920, 12);\r\n\r\n    const result = Texture.from(canvas);\r\n    Texture.addToCache(result, 'progressBar');\r\n\r\n    return result;\r\n})();\r\n\r\n/**\r\n  * {\r\n  *     render: {\r\n  *         width?,\r\n  *         height?,\r\n  *         resolution?,\r\n  *         autoDensity?,\r\n  *         antialias?,\r\n  *         view?,\r\n  *         resizeTo?\r\n  *     },\r\n  *     chart,\r\n  *     assets,\r\n  *     effects?,\r\n  *     zipFiles?,\r\n  *     watermark?,\r\n  *     settings: {\r\n  *         audioOffset?,\r\n  *         hitsound?,\r\n  *         hitsoundVolume?,\r\n  *         speed?,\r\n  *         noteScale?,\r\n  *         bgDim?,\r\n  *         multiNoteHL?,\r\n  *         showInputPoint?,\r\n  *         challengeMode?,\r\n  *         autoPlay?,\r\n  *         debug?\r\n  *     }\r\n  * }\r\n **/\r\nexport default class Game\r\n{\r\n    constructor(_params)\r\n    {\r\n        let params = { ..._params };\r\n\r\n        if (!params.render) params.render = {};\r\n        if (!params.settings) params.settings = {};\r\n\r\n        /* ===== 加载谱面基本信息 ===== */\r\n        this.chart    = params.chart;\r\n        this.assets   = params.assets;\r\n        this.effects  = (!!params.settings.shader && params.effects instanceof Array && params.effects.length > 0) ? params.effects : [];\r\n        this.zipFiles = params.zipFiles;\r\n\r\n        if (!this.chart) throw new Error('You must select a chart to play');\r\n        if (!this.assets) throw new Error('Render must use a texture object for creating sprites.');\r\n        if (!this.zipFiles) this.zipFiles = {};\r\n\r\n       /* ===== 创建 render ===== */\r\n        this.render = new Application({\r\n            width           : verify.number(params.render.width, document.documentElement.clientWidth, 0),\r\n            height          : verify.number(params.render.height, document.documentElement.clientHeight, 0),\r\n            resolution      : verify.number(params.render.resolution, window.devicePixelRatio, 1),\r\n            autoDensity     : verify.bool(params.render.autoDensity, true),\r\n            antialias       : verify.bool(params.render.antialias, true),\r\n            view            : params.render.canvas ? params.render.canvas : undefined,\r\n            backgroundAlpha : 1\r\n        });\r\n        this.render.parentNode = params.render.resizeTo ? params.render.resizeTo : (params.render.canvas ? params.render.canvas.parentNode : this.render.view.parentElement);\r\n\r\n        // 创建舞台主渲染区\r\n        this.render.mainContainer = new Container();\r\n        this.render.mainContainer.zIndex = 10;\r\n        this.render.stage.addChild(this.render.mainContainer);\r\n\r\n        // 创建游戏精灵容器\r\n        this.render.gameContainer = new Container();\r\n        this.render.gameContainer.zIndex = 20;\r\n        this.render.mainContainer.addChild(this.render.gameContainer);\r\n\r\n        // 创建 UI 容器\r\n        this.render.UIContainer = new Container();\r\n        this.render.UIContainer.zIndex = 30;\r\n        this.render.mainContainer.addChild(this.render.UIContainer);\r\n\r\n        // 创建舞台主渲染区可见范围\r\n        this.render.mainContainerMask = new Graphics();\r\n        this.render.mainContainerMask.cacheAsBitmap = true;\r\n\r\n        /* ===== 创建判定 ===== */\r\n        this.judgement = new Judgement({\r\n            chart          : this.chart,\r\n            stage          : this.render.UIContainer,\r\n            canvas         : this.render.view,\r\n            assets         : {\r\n                textures : { normal: this.assets.textures.clickRaw, bad: this.assets.textures.clickRaw },\r\n                sounds   : {\r\n                    tap   : this.assets.sounds.tap,\r\n                    drag  : this.assets.sounds.drag,\r\n                    flick : this.assets.sounds.flick\r\n                },\r\n            },\r\n            hitsound       : verify.bool(params.settings.hitsound, true),\r\n            hitsoundVolume : verify.number(params.settings.hitsoundVolume, 1, 0, 1),\r\n            showAPStatus   : verify.bool(params.settings.showAPStatus, true),\r\n            challengeMode  : verify.bool(params.settings.challengeMode, false),\r\n            autoPlay       : verify.bool(params.settings.autoPlay, false)\r\n        });\r\n\r\n        this.sprites = {};\r\n        this.functions = {\r\n            start: [],\r\n            tick: [],\r\n            pause: [],\r\n            end: []\r\n        };\r\n        this.processors = {\r\n            judgeline: [],\r\n            note: []\r\n        };\r\n\r\n        /* ===== 用户设置暂存 ===== */\r\n        this._settings = {\r\n            resolution     : verify.number(params.render.resolution, window.devicePixelRatio, 1),\r\n            noteScale      : verify.number(params.settings.noteScale, 8000),\r\n            bgDim          : verify.number(params.settings.bgDim, 0.5, 0, 1),\r\n            offset         : verify.number(params.settings.audioOffset, 0),\r\n            speed          : verify.number(params.settings.speed, 1, 0, 2),\r\n            showFPS        : verify.bool(params.settings.showFPS, true),\r\n            showInputPoint : verify.bool(params.settings.showInputPoint, true),\r\n            multiNoteHL    : verify.bool(params.settings.multiNoteHL, true),\r\n            showAPStatus   : verify.bool(params.settings.showAPStatus, true),\r\n            challengeMode  : verify.bool(params.settings.challengeMode, false),\r\n            autoPlay       : verify.bool(params.settings.autoPlay, false),\r\n            debug          : verify.bool(params.settings.debug, false),\r\n            shader         : verify.bool(params.settings.shader, true)\r\n        };\r\n\r\n        this._watermarkText = verify.text(params.watermark, 'github/MisaLiu/phi-chart-render');\r\n\r\n        this._audioOffset = 0;\r\n        this._animateStatus = NaN;\r\n        this._gameStartTime = NaN;\r\n        this._gameEndTime   = NaN;\r\n        this._isPaused = false;\r\n        this._isEnded = false;\r\n        this._currentEffects = [];\r\n\r\n        this.resize = this.resize.bind(this);\r\n\r\n        for (const name in TickerFunc)\r\n        {\r\n            this['_' + name] = TickerFunc[name].bind(this);\r\n        }\r\n        for (const name in CallbackFunc)\r\n        {\r\n            this['_' + name] = CallbackFunc[name].bind(this);\r\n        }\r\n\r\n        if (this._settings.speed < 0.25) throw new Error('Speed too slow');\r\n        else if (this._settings.speed > 2) throw new Error('Speed too fast');\r\n\r\n        this.resize(false);\r\n        window.addEventListener('resize', this.resize);\r\n        if (this._settings.autoPlay) window.addEventListener('keydown', this._onKeyPressCallback);\r\n    }\r\n\r\n    createSprites()\r\n    {\r\n        if (this.chart.bg)\r\n        { // 创建超宽屏舞台覆盖\r\n            this.render.mainContainerCover = new Sprite(this.chart.bg);\r\n            let bgCover = new Graphics();\r\n\r\n            bgCover.beginFill(0x000000);\r\n            bgCover.drawRect(0, 0, this.render.mainContainerCover.texture.width, this.render.mainContainerCover.texture.height);\r\n            bgCover.endFill();\r\n\r\n            bgCover.position.x = -this.render.mainContainerCover.width / 2;\r\n            bgCover.position.y = -this.render.mainContainerCover.height / 2;\r\n            bgCover.alpha = 0.5;\r\n\r\n            this.render.mainContainerCover.zIndex = 1;\r\n            this.render.mainContainerCover.addChild(bgCover);\r\n            this.render.mainContainerCover.anchor.set(0.5);\r\n\r\n            this.render.stage.addChild(this.render.mainContainerCover);\r\n        }\r\n\r\n        this.chart.createSprites(\r\n            this.render.gameContainer,\r\n            this.render.sizer,\r\n            this.assets.textures,\r\n            this.render.UIContainer,\r\n            this.zipFiles,\r\n            this._settings.speed,\r\n            this._settings.bgDim,\r\n            this._settings.multiNoteHL,\r\n            this._settings.debug\r\n        );\r\n        \r\n        if (this._settings.showAPStatus)\r\n        {\r\n            for (const judgeline of this.chart.judgelines)\r\n            {\r\n                if (!judgeline.sprite) continue;\r\n                judgeline.sprite.tint = 0xFFECA0;\r\n            };\r\n        }\r\n\r\n        this.judgement.stage = this.render.UIContainer;\r\n        this.judgement.createSprites(this._settings.showInputPoint);\r\n\r\n        // 进度条\r\n        this.sprites.progressBar = new Sprite(ProgressBarCache);\r\n        this.sprites.progressBar.width = 0;\r\n        this.sprites.progressBar.alpha = 0.75;\r\n        this.sprites.progressBar.zIndex = 99999;\r\n        this.render.UIContainer.addChild(this.sprites.progressBar);\r\n\r\n        // 暂停按钮\r\n        this.sprites.pauseButton = new Sprite(this.assets.textures.pauseButton);\r\n\r\n        // this.sprites.pauseButton.interactive = true;\r\n        this.sprites.pauseButton.eventMode = 'static';\r\n        this.sprites.pauseButton.buttonMode = true;\r\n        // this.sprites.pauseButton.cursor = 'pointer';\r\n        this.sprites.pauseButton.on('pointerdown', this._pauseBtnClickCallback);\r\n\r\n        this.sprites.pauseButton.hitArea = new Rectangle(\r\n            -(this.sprites.pauseButton.texture.width * 1.5),\r\n            -(this.sprites.pauseButton.texture.height / 2),\r\n            this.sprites.pauseButton.texture.width * 2,\r\n            this.sprites.pauseButton.texture.height * 2\r\n        );\r\n        this.sprites.pauseButton.clickCount = 0;\r\n        this.sprites.pauseButton.lastClickTime = Date.now();\r\n        this.sprites.pauseButton.isEndRendering = false;\r\n        this.sprites.pauseButton.lastRenderTime = Date.now();\r\n\r\n        this.sprites.pauseButton.anchor.set(1, 0);\r\n        this.sprites.pauseButton.alpha = 0.5;\r\n        this.sprites.pauseButton.zIndex = 99999;\r\n        this.render.UIContainer.addChild(this.sprites.pauseButton);\r\n\r\n        // 假判定线，过场动画用\r\n        this.sprites.fakeJudgeline = new Sprite(this.assets.textures.judgeline);\r\n        this.sprites.fakeJudgeline.anchor.set(0.5);\r\n        this.sprites.fakeJudgeline.zIndex = 99999;\r\n        if (this._settings.showAPStatus) this.sprites.fakeJudgeline.tint = 0xFFECA0;\r\n        this.render.UIContainer.addChild(this.sprites.fakeJudgeline);\r\n\r\n        if (this._settings.showFPS)\r\n        {\r\n            this.render.fpsText = new Text('FPS: 0', {\r\n                fontFamily: 'MiSans',\r\n                align: 'right',\r\n                fill: 0xFFFFFF\r\n            });\r\n            this.render.fpsText.anchor.x = 1;\r\n            this.render.fpsText.alpha = 0.5;\r\n            this.render.fpsText.zIndex = 999999;\r\n\r\n            this.render.UIContainer.addChild(this.render.fpsText);\r\n        }\r\n\r\n        this.render.watermark = new Text(this._watermarkText, {\r\n            fontFamily: 'MiSans',\r\n            align: 'right',\r\n            fill: 0xFFFFFF\r\n        });\r\n        this.render.watermark.anchor.set(1);\r\n        this.render.watermark.alpha = 0.5;\r\n        this.render.watermark.zIndex = 999999;\r\n        this.render.mainContainer.addChild(this.render.watermark);\r\n\r\n        this.render.gameContainer.sortChildren();\r\n        this.render.UIContainer.sortChildren();\r\n        this.render.mainContainer.sortChildren();\r\n        this.render.stage.sortChildren();\r\n\r\n        // 加载 Shaders\r\n        this.effects.forEach((effect) =>\r\n        {\r\n            if (effect.shader instanceof Shader) return;\r\n            if (!effect.shader || typeof effect.shader !== 'string')\r\n            {\r\n                effect.shader = null;\r\n                return;\r\n            }\r\n\r\n            const shaderName = effect.shader;\r\n            let shader = null;\r\n\r\n            if (shaderName.indexOf('/') === 0)\r\n            {\r\n                const shaderNameReal = shaderName.substr(1);\r\n                if (this.zipFiles[shaderNameReal]) shader = this.zipFiles[shaderNameReal];\r\n            }\r\n            else if (Shader.presets[shaderName])\r\n            {\r\n                shader = new Shader(Shader.presets[shaderName], shaderName);\r\n            }\r\n\r\n            effect.shader = shader;\r\n            \r\n            if (!effect.shader)\r\n            {\r\n                console.log('\\'' + shaderName + '\\' not found, will be ignored');\r\n                effect.shader = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    start()\r\n    {\r\n        if (!this.render) return;\r\n        if (!this.chart.music) throw new Error('You must have a music to play');\r\n\r\n        this.resize();\r\n        for (const effect of this.effects) effect.reset();\r\n\r\n        if (this.render.fpsText)\r\n        {\r\n            this.render.fpsCounter = setInterval(() =>\r\n            {\r\n                this.render.fpsText.text = 'FPS: ' + (this.render.ticker.FPS).toFixed(0);\r\n            }, 500);\r\n        }\r\n\r\n        this.chart.music.speed = this._settings.speed;\r\n        this.chart.music.onend = this._gameEndCallback;\r\n\r\n        this._animateStatus = 0;\r\n        this._gameStartTime = Date.now();\r\n\r\n        this.chart.noteJudgeCallback = this.judgement.calcNote;\r\n        this.render.ticker.add(this._calcTick);\r\n\r\n        for (const judgeline of this.chart.judgelines)\r\n        {\r\n            if (!judgeline.sprite) continue;\r\n\r\n            judgeline.sprite.alpha = 0;\r\n            if (judgeline.debugSprite) judgeline.debugSprite.visible = false;\r\n        };\r\n        for (const note of this.chart.notes)\r\n        {\r\n            if (!note.sprite) continue;\r\n\r\n            note.sprite.alpha = 0;\r\n            if (note.debugSprite) note.debugSprite.visible = false;\r\n            if (note.hitsound) note.hitsound.volume = this.judgement._hitsoundVolume;\r\n        };\r\n\r\n        for (const name in this.judgement.sounds)\r\n        {\r\n            this.judgement.sounds[name].volume = this.judgement._hitsoundVolume;\r\n        }\r\n    }\r\n\r\n    pause()\r\n    {\r\n        this._isPaused = !this._isPaused;\r\n        this.judgement.input._isPaused = this._isPaused;\r\n\r\n        if (this._isPaused)\r\n        {\r\n            this.chart.music.pause();\r\n            this._runCallback('pause');\r\n        }\r\n        else\r\n        {\r\n            this.chart.music.play(true);\r\n        }\r\n    }\r\n\r\n    restart()\r\n    {\r\n        this.render.ticker.remove(this._calcTick);\r\n        this.chart.music.reset();\r\n\r\n        this.chart.reset();\r\n        this.judgement.reset();\r\n\r\n        this.resize();\r\n        for (const effect of this.effects) effect.reset();\r\n\r\n        this._isPaused = false;\r\n        this._isEnded = false;\r\n\r\n        this._animateStatus = 0;\r\n        this._gameStartTime = Date.now();\r\n        this._gameEndTime   = NaN;\r\n\r\n        this.render.ticker.add(this._calcTick);\r\n        if (this._settings.showAPStatus) this.sprites.fakeJudgeline.tint = 0xFFECA0;\r\n        this.sprites.fakeJudgeline.visible = true;\r\n\r\n        for (const judgeline of this.chart.judgelines)\r\n        {\r\n            if (!judgeline.sprite) continue;\r\n\r\n            judgeline.sprite.alpha = 0;\r\n            if (this._settings.showAPStatus) judgeline.sprite.tint = 0xFFECA0;\r\n            if (judgeline.debugSprite) judgeline.debugSprite.visible = false;\r\n        };\r\n        for (const note of this.chart.notes)\r\n        {\r\n            if (!note.sprite) continue;\r\n\r\n            note.sprite.alpha = 0;\r\n            if (note.debugSprite) note.debugSprite.visible = false;\r\n        };\r\n    }\r\n\r\n    destroy(removeCanvas = false)\r\n    {\r\n        const canvas = this.render.view;\r\n\r\n        this.render.ticker.remove(this._calcTick);\r\n        this.chart.music.reset();\r\n\r\n        if (this.render.fpsText) clearInterval(this.render.fpsCounter);\r\n\r\n        this.chart.reset();\r\n        this.chart.destroySprites();\r\n        this.judgement.destroySprites();\r\n\r\n        this.judgement.input.removeListenerFromCanvas(canvas);\r\n\r\n        window.removeEventListener('resize', this.resize);\r\n        window.removeEventListener('keydown', this._onKeyPressCallback);\r\n\r\n        canvas.width = canvas.height = 0;\r\n\r\n        this.render.destroy(removeCanvas, { children: true, texture: false, baseTexture: false });\r\n    }\r\n\r\n    on(type, callback)\r\n    {\r\n        if (!this.functions[type]) return;\r\n        if (!(callback instanceof Function)) return;\r\n        this.functions[type].push(callback);\r\n    }\r\n\r\n    addProcessor(type, callback)\r\n    {\r\n        if (!this.processors[type]) return;\r\n        if (!(callback instanceof Function)) return;\r\n        this.processors[type].push(callback);\r\n    }\r\n\r\n    resize(withChartSprites = true, shouldResetFakeJudgeLine = true)\r\n    {\r\n        if (!this.render) return;\r\n\r\n        this.render.renderer.resize(this.render.parentNode.clientWidth, this.render.parentNode.clientHeight);\r\n\r\n        // 计算新尺寸相关数据\r\n        this.render.sizer = calcResizer(this.render.screen.width, this.render.screen.height, this._settings.noteScale, this._settings.resolution);\r\n\r\n        // 主舞台区位置重计算\r\n        this.render.mainContainer.position.x = this.render.sizer.widthOffset;\r\n        // 主舞台可视区域计算\r\n        if (this.render.sizer.widerScreen && this.render.mainContainer)\r\n        {\r\n            this.render.mainContainer.mask = this.render.mainContainerMask;\r\n            this.render.mainContainerMask.visible = true;\r\n\r\n            this.render.mainContainerMask.clear()\r\n                .beginFill(0xFFFFFF)\r\n                .drawRect(this.render.sizer.widthOffset, 0, this.render.sizer.width, this.render.sizer.height)\r\n                .endFill();\r\n        }\r\n        else\r\n        {\r\n            this.render.mainContainer.mask = null;\r\n            this.render.mainContainerMask.visible = false;\r\n        }\r\n        // 主舞台超宽屏覆盖计算\r\n        if (this.render.sizer.widerScreen && this.render.mainContainerCover)\r\n        {\r\n            let bgScaleWidth = this.render.screen.width / this.render.mainContainerCover.texture.width;\r\n            let bgScaleHeight = this.render.screen.height / this.render.mainContainerCover.texture.height;\r\n            let bgScale = bgScaleWidth > bgScaleHeight ? bgScaleWidth : bgScaleHeight;\r\n\r\n            this.render.mainContainerCover.scale.set(bgScale);\r\n            this.render.mainContainerCover.position.set(this.render.screen.width / 2, this.render.screen.height / 2);\r\n\r\n            this.render.mainContainerCover.visible = true;\r\n        }\r\n        else if (this.render.mainContainerCover)\r\n        {\r\n            this.render.mainContainerCover.visible = false;\r\n        }\r\n\r\n        if (!this._isEnded && this.sprites)\r\n        {\r\n            if (this.sprites.progressBar)\r\n            {\r\n                this.sprites.progressBar.position.set(0, 0);\r\n                this.sprites.progressBar.scale.y = this.render.sizer.heightPercent;\r\n                this.sprites.progressBar.baseScaleX = this.render.sizer.width / this.sprites.progressBar.texture.baseTexture.width;\r\n            }\r\n\r\n            if (this.sprites.pauseButton)\r\n            {\r\n                this.sprites.pauseButton.position.x = this.render.sizer.width - this.render.sizer.heightPercent * 72;\r\n                this.sprites.pauseButton.position.y = this.render.sizer.heightPercent * (61 + 14);\r\n                this.sprites.pauseButton.scale.set(0.94 * this.render.sizer.heightPercent);\r\n            }\r\n\r\n            if (this.sprites.fakeJudgeline)\r\n            {\r\n                this.sprites.fakeJudgeline.position.x = this.render.sizer.width / 2;\r\n                this.sprites.fakeJudgeline.position.y = this.render.sizer.height / 2;\r\n\r\n                this.sprites.fakeJudgeline.height = this.render.sizer.lineScale * 18.75 * 0.008;\r\n                if (shouldResetFakeJudgeLine || this._isEnded)\r\n                {\r\n                    this.sprites.fakeJudgeline.width = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        // FPS 计数器尺寸计算\r\n        if (this.render.fpsText)\r\n        {\r\n            this.render.fpsText.position.x     = this.render.sizer.width;\r\n            this.render.fpsText.position.y     = 0;\r\n            this.render.fpsText.style.fontSize = this.render.sizer.heightPercent * 32;\r\n            this.render.fpsText.style.padding  = this.render.sizer.heightPercent * 8;\r\n        }\r\n\r\n        if (this.render.watermark)\r\n        {\r\n            this.render.watermark.position.x     = this.render.sizer.width;\r\n            this.render.watermark.position.y     = this.render.sizer.height;\r\n            this.render.watermark.style.fontSize = this.render.sizer.heightPercent * 24;\r\n        }\r\n        \r\n        if (withChartSprites)\r\n        {\r\n            this.judgement.resizeSprites(this.render.sizer, this._isEnded);\r\n            this.chart.resizeSprites(this.render.sizer, this._isEnded);\r\n        }\r\n    }\r\n\r\n    gameTimeInSec() {\r\n        return (Date.now() - this._gameStartTime) / 1000;\r\n    }\r\n}\r\n\r\nfunction calcResizer(width, height, noteScale = 8000, resolution = window.devicePixelRatio)\r\n{\r\n    let result = {};\r\n\r\n    result.shaderScreenSize = [ width * resolution, height * resolution ];\r\n\r\n    result.width  = height / 9 * 16 < width ? height / 9 * 16 : width;\r\n    result.height = height;\r\n    result.widthPercent = result.width * (9 / 160);\r\n    result.widthOffset  = (width - result.width) / 2;\r\n\r\n    result.widerScreen = result.width < width ? true : false;\r\n\r\n    result.startX = -result.width / 12;\r\n    result.endX   = result.width * (13 / 12);\r\n    result.startY = -result.height / 12;\r\n    result.endY   = result.height * (13 / 12);\r\n\r\n    result.noteSpeed     = result.height * 0.6;\r\n    result.noteScale     = result.width / noteScale;\r\n    result.noteWidth     = result.width * 0.117775;\r\n    result.lineScale     = result.width > result.height * 0.75 ? result.height / 18.75 : result.width / 14.0625;\r\n    result.heightPercent = result.height / 1080;\r\n    result.textureScale  = result.height / 750;\r\n\r\n    return result;\r\n}\r\n","import { number as verifyNum } from '@/verify';\nimport Bezier from 'bezier-easing';\n\nconst calcBetweenTime = 0.125; // 1/32\n\n/**\n * 将一个事件的拍数数组转换为拍数小数\n * \n * @param {Object} event 欲转换的事件\n * @return {Object} 转换出的事件\n */\nfunction calculateEventBeat(event)\n{\n    event.startTime = parseFloat((event.startTime[0] + (event.startTime[1] / event.startTime[2])).toFixed(3));\n    event.endTime = parseFloat((event.endTime[0] + (event.endTime[1] / event.endTime[2])).toFixed(3));\n    return event;\n}\n\n/**\n * 将一组事件的拍数数组转换为拍数小数\n * \n * @param {Array} events 欲转换的事件组\n * @return {Array} 转换出的事件组\n */\nfunction calculateEventsBeat(events)\n{\n    events.forEach((event) =>\n    {\n        event = calculateEventBeat(event);\n    });\n    return events;\n}\n\n/**\n * 计算在某时间下某一事件的返回值\n * \n * @param {Object} event 欲用于计算值的事件\n * @param {Array} Easings 该事件配套的缓动函数组\n * @param {Number} currentTime 欲计算的时间\n * @param {Number} [easingsOffset] 缓动函数偏移，默认为 `1`\n * @return {Number} 返回在指定时间下当前事件的值\n */\nfunction valueCalculator(event, Easings, currentTime, easingsOffset = 1)\n{\n    if (event.start == event.end) return event.start;\n    if (event.startTime > currentTime) throw new Error('currentTime must bigger than startTime');\n    if (event.endTime < currentTime) throw new Error('currentTime must smaller than endTime');\n\n    let timePercentEnd = (currentTime - event.startTime) / (event.endTime - event.startTime);\n    let timePercentStart = 1 - timePercentEnd;\n\n    if (event.bezier === 1)\n    {\n        let bezier = Bezier(event.bezierPoints[0], event.bezierPoints[1], event.bezierPoints[2], event.bezierPoints[3]);\n        return event.start * bezier(timePercentStart) + event.end * bezier(timePercentEnd);\n    }\n    else\n    {\n        let easeFunction = Easings[event.easingType - easingsOffset] ? Easings[event.easingType - easingsOffset] : Easings[0];\n        let easePercent = easeFunction(verifyNum(event.easingLeft, 0, 0, 1) * timePercentStart + verifyNum(event.easingRight, 1, 0, 1) * timePercentEnd);\n        let easePercentStart = easeFunction(verifyNum(event.easingLeft, 0, 0, 1));\n        let easePercentEnd = easeFunction(verifyNum(event.easingRight, 1, 0, 1));\n\n        easePercent = (easePercent - easePercentStart) / (easePercentEnd - easePercentStart);\n\n        return event.start * (1 - easePercent) + event.end * easePercent;\n    }\n    \n}\n\n/**\n * 计算一组事件/Note的绝对时间\n * \n * @param {Array} _bpmList 一组已计算好绝对时间的 BPM 列表，传入前请先倒序排序\n * @param {Array} _events 欲计算绝对时间的事件/Note数组\n * @return {Array} 已经计算好时间的事件/Note数组\n */\nfunction calculateRealTime(_bpmList, _events)\n{\n    let bpmList = _bpmList.slice();\n    let events = _events.slice();\n\n    events.forEach((event) =>\n    {\n        for (let bpmIndex = 0, bpmLength = bpmList.length; bpmIndex < bpmLength; bpmIndex++)\n        {\n            let bpm = bpmList[bpmIndex];\n\n            if (bpm.startBeat > event.endTime) continue;\n            event.endTime = bpm.startTime + ((event.endTime - bpm.startBeat) * bpm.beatTime);\n\n            for (let nextBpmIndex = bpmIndex; nextBpmIndex < bpmLength; nextBpmIndex++)\n            {\n                let nextBpm = bpmList[nextBpmIndex];\n\n                if (nextBpm.startBeat > event.startTime) continue;\n                event.startTime = nextBpm.startTime + ((event.startTime - nextBpm.startBeat) * nextBpm.beatTime);\n                break;\n            }\n\n            break;\n        }\n    });\n\n    return events.slice();\n}\n\n/**\n * 拆分事件缓动\n * \n * @param {Object} event 欲拆分缓动的事件\n * @param {Array} Easings 该事件配套的缓动函数组\n * @param {Number} [easingsOffset] 缓动函数偏移，默认为 `1`\n * @param {Boolean} [forceLinear] 强制拆分 linear 缓动\n * @return {Array} 已拆分完缓动的事件数组\n */\nfunction calculateEventEase(event, Easings, easingsOffset = 1, forceLinear = false)\n{\n    let result = [];\n    let timeBetween = event.endTime - event.startTime;\n\n    if (!event) return [];\n\n    if (\n        (\n            event.bezier == 1 ||\n            (\n                event.easingType && Easings[event.easingType - easingsOffset] && (event.easingType - easingsOffset !== 0 || forceLinear) &&\n                event.easingType <= Easings.length\n            )\n        ) &&\n        event.start != event.end\n    ) {\n        for (let timeIndex = 0, timeCount = Math.ceil(timeBetween / calcBetweenTime); timeIndex < timeCount; timeIndex++)\n        {\n            let currentTime = event.startTime + (timeIndex * calcBetweenTime);\n            let nextTime = event.startTime + ((timeIndex + 1) * calcBetweenTime) <= event.endTime ? event.startTime + ((timeIndex + 1) * calcBetweenTime) : event.endTime;\n\n            result.push({\n                startTime : currentTime,\n                endTime   : nextTime,\n                start     : valueCalculator(event, Easings, currentTime, easingsOffset),\n                end       : valueCalculator(event, Easings, nextTime, easingsOffset)\n            });\n        }\n    }\n    else\n    {\n        result.push({\n            startTime: event.startTime,\n            endTime: event.endTime,\n            start: event.start,\n            end: event.end\n        });\n    }\n\n    return result;\n}\n\n/**\n * 计算一组 BPM 的 HoldBetween 值\n * \n * @param {Array} _bpmList 欲用于计算的 BPM 数组\n * @return {Array} 计算完毕的 BPM 数组\n */\nfunction calculateHoldBetween(_bpmList)\n{\n    let bpmList = _bpmList.slice();\n    let result = [];\n\n    bpmList.sort((a, b) => a.startTime - b.startTime);\n    bpmList.forEach((bpm) =>\n    {\n        if (result.length <= 0)\n        {\n            result.push({\n                startTime   : bpm.startTime,\n                endTime     : bpm.startTime,\n                bpm         : bpm.bpm,\n                holdBetween : ((-1.2891 * bpm.bpm) + 396.71) / 1000\n            });\n        }\n        else\n        {\n            result[result.length - 1].endTime = bpm.startTime;\n\n            if (result[result.length - 1].bpm != bpm.bpm)\n            {\n                result.push({\n                    startTime   : bpm.startTime,\n                    endTime     : bpm.startTime,\n                    bpm         : bpm.bpm,\n                    holdBetween : ((-1.2891 * bpm.bpm) + 396.71) / 1000\n                });\n            }\n        }\n    });\n\n    result.sort((a, b) => a.startTime - b.startTime);\n\n    if (result.length > 0)\n    {\n        result[0].startTime = 1 - 1000;\n        result[result.length - 1].endTime = 1e4;\n    }\n    else\n    {\n        result.push({\n            startTime   : 1 - 1000,\n            endTime     : 1e4,\n            bpm         : 120,\n            holdBetween : 0.242018\n        });\n    }\n\n    return result;\n}\n\n/**\n * 合并一组事件中值相同的事件\n * \n * @param {Array} _events 欲合并相同值的事件组\n * @return {Array} 已合并相同值的事件组\n */\nfunction arrangeSameValueEvent(_events)\n{\n    if (!_events || _events.length <= 0) return [];\n\n    let events = _events.slice();\n    let result = [ events.shift() ];\n\n    for (const event of events)\n    {\n        if (\n            result[result.length - 1].start == result[result.length - 1].end &&\n            event.start == event.end &&\n            result[result.length - 1].start == event.start\n        ) {\n            result[result.length - 1].endTime = event.endTime;\n        }\n        else\n        {\n            result.push(event);\n        }\n    }\n    \n    return result.slice();\n}\n\n/**\n * 合并一组速度事件中值相同的事件\n * \n * @param {Array} events 欲合并相同值的速度事件组\n * @return {Array} 已合并相同值的速度事件组\n */\nfunction arrangeSameSingleValueEvent(events)\n{\n    if (!events || events.length <= 0) return [];\n\n    let newEvents = [];\n    for (let i of events) {\n        let lastEvent = newEvents[newEvents.length - 1];\n        \n        if (!lastEvent || lastEvent.value != i.value) {\n            newEvents.push(i);\n        } else {\n            lastEvent.endTime = i.endTime;\n        }\n    }\n    \n    return newEvents.slice();\n}\n\nexport default {\n    CalcBetweenTime: calcBetweenTime,\n\n    calculateEventBeat,\n    calculateEventsBeat,\n    \n    valueCalculator,\n    calculateRealTime,\n\n    calculateEventEase,\n    calculateHoldBetween,\n\n    arrangeSameValueEvent,\n    arrangeSameSingleValueEvent\n}","import * as verify from '@/verify';\nimport utils from './convert/utils';\nimport { Sprite, Container, Text, Graphics } from 'pixi.js';\n\nexport default class Judgeline\n{\n    constructor(params)\n    {\n        this.id               = verify.number(params.id, -1, 0);\n        this.texture          = params.texture ? params.texture : null;\n        this.parentLine       = params.parentLine || params.parentLine === 0 ? params.parentLine : null;\n        this.zIndex           = verify.number(params.zIndex, NaN);\n        this.isCover          = verify.bool(params.isCover, true);\n        this.useOfficialScale = false;\n\n        this.eventLayers = [];\n        this.floorPositions = [];\n        this.extendEvent = {\n            color: [],\n            scaleX: [],\n            scaleY: [],\n            text: [],\n            incline: []\n        };\n        this.noteControls = {\n            alpha: [],\n            scale: [],\n            x: [],\n            /* y: [] */\n        };\n        this.isText = false;\n        \n        this.sprite = undefined;\n\n        this.reset();\n    }\n\n    reset()\n    {\n        this.speed = 1;\n        this.x     = 0.5;\n        this.y     = 0.5;\n        this.alpha = 1;\n        this.deg   = 0;\n        this.sinr  = 0;\n        this.cosr  = 1;\n\n        this.floorPosition = 0;\n\n        this.baseScaleX = 3;\n        this.baseScaleY = 2.88;\n        \n        if (this.extendEvent.scaleX.length > 0 && this.extendEvent.scaleX[0].startTime <= 0) this.scaleX = this.extendEvent.scaleX[0].start;\n        else this.scaleX = 1;\n        if (this.extendEvent.scaleY.length > 0 && this.extendEvent.scaleY[0].startTime <= 0) this.scaleY = this.extendEvent.scaleY[0].start;\n        else this.scaleY = 1;\n\n        this.inclineSinr = NaN;\n        this.color = NaN;\n\n        if (this.sprite)\n        {\n            this.sprite.alpha = 1;\n            this.sprite.angle = 0;\n            this.sprite.scale.set(1);\n\n            if (this.isText)\n            {\n                this.sprite.text = '';\n            }\n        }\n    }\n\n    sortEvent(withEndTime = false)\n    {\n        this.eventLayers.forEach((eventLayer) =>\n        {\n            eventLayer.sort();\n        });\n\n        for (const name in this.extendEvent)\n        {\n            this.extendEvent[name].sort((a, b) => a.startTime - b.startTime);\n        }\n\n        for (const name in this.eventLayers[0])\n        {\n            if (name == 'speed' || !(this.eventLayers[0][name] instanceof Array)) continue;\n            if (this.eventLayers[0][name].length <= 0) continue;\n            if (this.eventLayers[0][name][0].startTime <= 0) continue;\n            this.eventLayers[0][name].unshift({\n                startTime : 1 - 100,\n                endTime   : this.eventLayers[0][name][0].startTime,\n                start     : 0,\n                end       : 0\n            });\n        }\n\n        for (const name in this.noteControls)\n        {\n            this.noteControls[name].sort((a, b) => b.y - a.y);\n        }\n    }\n\n    calcFloorPosition()\n    {\n        if (this.eventLayers.length <= 0) throw new Error('No event layer in this judgeline');\n\n        let noSpeedEventsLayerCount = 0;\n        this.eventLayers.forEach((eventLayer) =>\n        {\n            eventLayer.speed = utils.arrangeSameSingleValueEvent(eventLayer.speed);\n            if (eventLayer.speed.length < 1) noSpeedEventsLayerCount++;\n        });\n\n        if (noSpeedEventsLayerCount == this.eventLayers.length)\n        {\n            console.warn('Line ' + this.id + ' don\\'t have any speed event, use default speed.');\n            this.eventLayers[0].speed.push({\n                startTime: 0,\n                endTime: 1e4,\n                start: 1,\n                end: 1\n            });\n        }\n\n        let sameTimeSpeedEventAlreadyExist = {};\n        let currentFloorPosition = 0;\n        let floorPositions = [];\n\n        this.floorPositions = [];\n\n        this.eventLayers.forEach((eventLayer, eventLayerIndex) =>\n        {\n            eventLayer.speed.forEach((event, eventIndex) =>\n            {\n                event.endTime = eventLayer.speed[eventIndex + 1] ? eventLayer.speed[eventIndex + 1].startTime : 1e4;\n\n                let eventTime = (event.startTime).toFixed(3);\n\n                if (!sameTimeSpeedEventAlreadyExist[eventTime])\n                {\n                    floorPositions.push({\n                        startTime     : event.startTime,\n                        endTime       : NaN,\n                        floorPosition : NaN\n                    });\n                }\n\n                sameTimeSpeedEventAlreadyExist[eventTime] = true;\n            });\n\n            if (eventLayerIndex === 0 && eventLayer.speed[0].startTime > 0)\n            {\n                eventLayer.speed.unshift({\n                    startTime : 1 - 100,\n                    endTime   : eventLayer.speed[0] ? eventLayer.speed[0].startTime : 1e4,\n                    value     : eventLayer.speed[0] ? eventLayer.speed[0].value : 1\n                });\n            }\n        });\n\n        floorPositions.sort((a, b) => a.startTime - b.startTime);\n\n        floorPositions.unshift({\n            startTime     : 1 - 1000,\n            endTime       : floorPositions[0] ? floorPositions[0].startTime : 1e4,\n            floorPosition : 1 - 1000\n        });\n        currentFloorPosition += floorPositions[0].endTime;\n        \n        for (let floorPositionIndex = 1; floorPositionIndex < floorPositions.length; floorPositionIndex++)\n        {\n            let currentEvent = floorPositions[floorPositionIndex];\n            let nextEvent = floorPositionIndex < floorPositions.length - 1 ? floorPositions[floorPositionIndex + 1] : { startTime: 1e4 };\n            let currentTime = currentEvent.startTime;\n\n            floorPositions[floorPositionIndex].floorPosition = currentFloorPosition;\n            floorPositions[floorPositionIndex].endTime = nextEvent.startTime;\n\n            currentFloorPosition += (nextEvent.startTime - currentEvent.startTime) * this._calcSpeedValue(currentTime);\n        }\n\n        this.floorPositions = floorPositions;\n    }\n\n    getFloorPosition(time)\n    {\n        if (this.floorPositions.length <= 0) throw new Error('No floorPosition created, please call calcFloorPosition() first');\n\n        let result = {};\n\n        for (const floorPosition of this.floorPositions)\n        {\n            if (floorPosition.endTime < time) continue;\n            if (floorPosition.startTime > time) break;\n\n            result.startTime     = floorPosition.startTime;\n            result.endTime       = floorPosition.endTime;\n            result.floorPosition = floorPosition.floorPosition;\n        }\n\n        result.value = this._calcSpeedValue(time);\n\n        return result;\n    }\n\n    _calcSpeedValue(time)\n    {\n        let result = 0;\n\n        this.eventLayers.forEach((eventLayer) =>\n        {\n            let currentValue = 0;\n\n            for (const event of eventLayer.speed)\n            {\n                if (event.endTime < time) continue;\n                if (event.startTime > time) break;\n                currentValue = event.value;\n            }\n\n            result += currentValue;\n        });\n\n        return result;\n    }\n\n    createSprite(texture, zipFiles, debug = false)\n    {\n        if (this.sprite) return this.sprite;\n\n        if (!this.isText)\n        {\n            this.sprite = new Sprite(zipFiles[this.texture] ? zipFiles[this.texture] : texture.judgeline);\n\n            if (this.texture)\n            {\n                this.baseScaleX = this.baseScaleY = 1;\n            }\n        }\n        else\n        {\n            this.sprite = new Text('', {\n                fontFamily: 'MiSans',\n                align: 'center',\n                fill: 0xFFFFFF\n            });\n        }\n        \n        this.sprite.anchor.set(0.5);\n        this.sprite.alpha = 1;\n\n        // For debug propose\n        if (debug)\n        {\n            let lineInfoContainer = new Container();\n            let lineId = new Text(this.id, {\n                fontSize: 48,\n                fill: 0xFF00A0\n            });\n            let linePosBlock = new Graphics()\n                .beginFill(0xFF00A0)\n                .drawRect(-22, -22, 44, 44)\n                .endFill();\n            \n            lineId.anchor.set(0.5);\n            lineId.position.set(0, -36 - lineId.width / 2);\n\n            /*\n            lineId.cacheAsBitmap = true;\n            linePosBlock.cacheAsBitmap = true;\n            */\n            \n            lineInfoContainer.addChild(lineId);\n            lineInfoContainer.addChild(linePosBlock);\n\n            this.debugSprite = lineInfoContainer;\n        }\n\n        if (this.extendEvent.scaleX.length > 0 && this.extendEvent.scaleX[0].startTime <= 0)\n        {\n            this.scaleX = this.extendEvent.scaleX[0].start;\n        }\n        if (this.extendEvent.scaleY.length > 0 && this.extendEvent.scaleY[0].startTime <= 0)\n        {\n            this.scaleY = this.extendEvent.scaleY[0].start;\n        }\n        \n        return this.sprite;\n    }\n\n    calcTime(currentTime, size)\n    {\n        this.speed = 0;\n        this.x     = 0;\n        this.y     = 0;\n        this.alpha = 0;\n        this.deg   = 0;\n\n        for (let i = 0, length = this.eventLayers.length; i < length; i++)\n        {\n            let eventLayer = this.eventLayers[i];\n            eventLayer.calcTime(currentTime);\n\n            this.speed  += eventLayer._speed;\n            this.x      += eventLayer._posX;\n            this.y      += eventLayer._posY;\n            this.alpha  += eventLayer._alpha;\n            this.deg    += eventLayer._rotate;\n        }\n\n        for (let i = 0, length = this.floorPositions.length; i < length; i++)\n        {\n            let event = this.floorPositions[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            this.floorPosition = (currentTime - event.startTime) * this.speed + event.floorPosition;\n        };\n\n        for (let i = 0, length = this.extendEvent.scaleX.length; i < length; i++)\n        {\n            let event = this.extendEvent.scaleX[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            let timePercentEnd = (currentTime - event.startTime) / (event.endTime - event.startTime);\n            let timePercentStart = 1 - timePercentEnd;\n\n            this.scaleX = event.start * timePercentStart + event.end * timePercentEnd;\n            this.sprite.scale.x = this.scaleX * this.baseScaleX;\n        }\n\n        for (let i = 0, length = this.extendEvent.scaleY.length; i < length; i++)\n        {\n            let event = this.extendEvent.scaleY[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            let timePercentEnd = (currentTime - event.startTime) / (event.endTime - event.startTime);\n            let timePercentStart = 1 - timePercentEnd;\n\n            this.scaleY = event.start * timePercentStart + event.end * timePercentEnd;\n            this.sprite.scale.y = this.scaleY * this.baseScaleY;\n        }\n\n        for (let i = 0, length = this.extendEvent.text.length; i < length; i++)\n        {\n            let event = this.extendEvent.text[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            this.sprite.text = event.value;\n        }\n\n        for (let i = 0, length = this.extendEvent.color.length; i < length; i++)\n        {\n            let event = this.extendEvent.color[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            this.color = this.sprite.tint = event.value;\n        }\n\n        for (let i = 0, length = this.extendEvent.incline.length; i < length; i++)\n        {\n            let event = this.extendEvent.incline[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            let timePercentEnd = (currentTime - event.startTime) / (event.endTime - event.startTime);\n            let timePercentStart = 1 - timePercentEnd;\n\n            this.inclineSinr = Math.sin(event.start * timePercentStart + event.end * timePercentEnd);\n        }\n\n        this.cosr = Math.cos(this.deg);\n        this.sinr = Math.sin(this.deg);\n\n        if (this.parentLine)\n        {\n            let newPosX = (this.x * this.parentLine.cosr + this.y * this.parentLine.sinr) * 0.918554 + this.parentLine.x,\n                newPosY = (this.y * this.parentLine.cosr - this.x * this.parentLine.sinr) * 1.088662 + this.parentLine.y;\n\n            this.x = newPosX;\n            this.y = newPosY;\n        }\n\n        this.sprite.position.x = (this.x + 0.5) * size.width;\n        this.sprite.position.y = (0.5 - this.y) * size.height;\n        this.sprite.alpha      = this.alpha >= 0 ? this.alpha : 0;\n        this.sprite.rotation   = this.deg;\n        this.sprite.visible    = (this.alpha > 0);\n\n        /*\n        if (this.sprite.alpha <= 0) this.sprite.visible = false;\n        else this.sprite.visible = true;\n        */\n        \n        /*\n        this.sprite.width = this._width * this.scaleX;\n        this.sprite.height = this._height * this.scaleY;\n        */\n        \n        if (this.debugSprite)\n        {\n            this.debugSprite.position = this.sprite.position;\n            this.debugSprite.rotation = this.sprite.rotation;\n            this.debugSprite.alpha = 0.2 + (this.sprite.alpha * 0.8);\n        }\n    }\n\n    calcNoteControl(y, valueType, defaultValue)\n    {\n        for (let i = 0, length = this.noteControls[valueType].length; i < length; i++)\n        {\n            if (this.noteControls[valueType][i].y < y) return this.noteControls[valueType][i - 1].value;\n        }\n        return defaultValue;\n    }\n}\n\n","export default class EventLayer\n{\n    constructor()\n    {\n        this.speed  = [];\n        this.moveX  = [];\n        this.moveY  = [];\n        this.alpha  = [];\n        this.rotate = [];\n\n        this._speed  = 0;\n        this._posX   = 0;\n        this._posY   = 0;\n        this._alpha  = 0;\n        this._rotate = 0;\n    }\n\n    sort()\n    {\n        const sorter = (a, b) => a.startTime - b.startTime;\n        this.speed.sort(sorter);\n        this.moveX.sort(sorter);\n        this.moveY.sort(sorter);\n        this.alpha.sort(sorter);\n        this.rotate.sort(sorter);\n    }\n\n    calcTime(currentTime)\n    {\n        this._posX   = valueCalculator(this.moveX, currentTime, this._posX);\n        this._posY   = valueCalculator(this.moveY, currentTime, this._posY);\n        this._alpha  = valueCalculator(this.alpha, currentTime, this._alpha);\n        this._rotate = valueCalculator(this.rotate, currentTime, this._rotate);\n\n        for (let i = 0, length = this.speed.length; i < length; i++)\n        {\n            let event = this.speed[i];\n            if (event.endTime < currentTime) continue;\n            if (event.startTime > currentTime) break;\n\n            this._speed = event.value;\n        }\n    }\n}\n\nfunction valueCalculator(events, currentTime, originValue = 0)\n{\n    for (let i = 0, length = events.length; i < length; i++)\n    {\n        let event = events[i];\n        if (event.endTime < currentTime) continue;\n        if (event.startTime > currentTime) break;\n        if (event.start == event.end) return event.start\n\n        let timePercentEnd = (currentTime - event.startTime) / (event.endTime - event.startTime);\n        let timePercentStart = 1 - timePercentEnd;\n\n        return event.start * timePercentStart + event.end * timePercentEnd;\n    }\n    return originValue;\n}","import * as verify from '@/verify';\nimport { Sprite, Container, Text, Graphics } from 'pixi.js';\n\nexport default class Note\n{\n    constructor(params)\n    {\n        this.id               = verify.number(params.id, -1, 0);\n        this.type             = verify.number(params.type, 1, 1, 4);\n        this.time             = verify.number(params.time, -1); // Note 开始时间\n        this.holdTime         = this.type === 3 ? verify.number(params.holdTime, 0) : 0; // Note 按住需要经过的时间，仅 Hold\n        this.holdTimeLength   = this.type === 3 ? parseFloat(this.time + this.holdTime) : 0; // Note 按完的时间，自动计算，仅 Hold\n        this.speed            = verify.number(params.speed, 1);\n        this.floorPosition    = verify.number(params.floorPosition, this.time);\n        this.holdLength       = this.type === 3 ? verify.number(params.holdLength, 0) : 0;\n        this.endPosition      = parseFloat(this.floorPosition + this.holdLength);\n        this.positionX        = verify.number(params.positionX, 0);\n        this.basicAlpha       = verify.number(params.basicAlpha, 1, 0, 1);\n        this.visibleTime      = verify.number(params.visibleTime, NaN, 0, 999998);\n        this.yOffset          = verify.number(params.yOffset, 0);\n        this.xScale           = verify.number(params.xScale, 1, 0);\n        this.isAbove          = verify.bool(params.isAbove, true);\n        this.isFake           = verify.bool(params.isFake, false);\n        this.isMulti          = verify.bool(params.isMulti, false);\n        this.useOfficialSpeed = verify.bool(params.useOfficialSpeed, false);\n        this.texture          = (params.texture && params.texture != '') ? params.texture : null;\n        this.hitsound         = (params.hitsound && params.hitsound != '') ? params.hitsound : null;\n        this.judgeline        = params.judgeline;\n\n        this.sprite = undefined;\n\n        if (!this.judgeline) throw new Error('Note must have a judgeline');\n\n        this.reset();\n    }\n\n    reset()\n    {\n        this.isScored        = false;\n        this.isScoreAnimated = false;\n        this.isHolding       = false;\n        this.lastHoldTime    = NaN;\n        this.score           = 0;\n        this.scoreTime       = 0;\n\n        if (this.sprite) this.sprite.alpha = this.basicAlpha;\n    }\n\n    createSprite(texture, zipFiles, multiHL = true, debug = false)\n    {\n        if (this.sprite) return this.sprite;\n\n        switch (this.type)\n        {\n            case 1:\n            {\n                this.sprite = new Sprite(\n                    this.texture && this.texture != '' ?\n                    zipFiles[this.texture] :\n                    texture['tap' + (this.isMulti && multiHL ? 'HL' : '')]\n                );\n                break;\n            }\n            case 2:\n            {\n                this.sprite = new Sprite(\n                    this.texture && this.texture != '' ?\n                    zipFiles[this.texture] :\n                    texture['drag' + (this.isMulti && multiHL ? 'HL' : '')]\n                );\n                break;\n            }\n            case 3:\n            {\n                if (this.texture && this.texture != '')\n                {\n                    this.sprite = new Sprite(zipFiles[this.texture]);\n                    this.sprite.anchor.set(0.5, 1);\n                    this.sprite.height = this.holdLength;\n                }\n                else\n                {\n                    this.sprite = new Container();\n\n                    let head = new Sprite(texture['holdHead' + (this.isMulti && multiHL ? 'HL' : '')]);\n                    let body = new Sprite(texture['holdBody' + (this.isMulti && multiHL ? 'HL' : '')]);\n                    let end = new Sprite(texture['holdEnd']);\n\n                    head.anchor.set(0.5);\n                    body.anchor.set(0.5, 1);\n                    end.anchor.set(0.5, 1);\n\n                    body.height = this.holdLength;\n\n                    head.position.set(0, head.height / 2);\n                    body.position.set(0, 0);\n                    end.position.set(0, -body.height);\n\n                    this.sprite.addChild(head);\n                    this.sprite.addChild(body);\n                    this.sprite.addChild(end);\n                }\n                break;\n            }\n            case 4:\n            {\n                this.sprite = new Sprite(\n                    this.texture && this.texture != '' ?\n                    zipFiles[this.texture] :\n                    texture['flick' + (this.isMulti && multiHL ? 'HL' : '')]\n                );\n                break;\n            }\n            default :\n            {\n                throw new Error('Unsupported note type: ' + this.type);\n            }\n        }\n\n        if (this.type !== 3) this.sprite.anchor.set(0.5);\n        if (!this.isAbove) this.sprite.angle = 180;\n        this.sprite.alpha = this.basicAlpha;\n        this.sprite.visible = false;\n        this.sprite.outScreen = true;\n\n        if (this.hitsound)\n        {\n            this.hitsound = zipFiles[this.hitsound];\n        }\n\n        // For debug propose\n        if (debug)\n        {\n            let noteInfoContainer = new Container();\n            let noteId = new Text(this.judgeline.id + (this.isAbove ? '+' : '-') + this.id, {\n                fontSize: 48,\n                fill: 0x00E6FF\n            });\n            let notePosBlock = new Graphics()\n                .beginFill(0x00E6FF)\n                .drawRect(-22, -22, 44, 44)\n                .endFill();\n            \n            noteId.anchor.set(0.5);\n            noteId.position.set(0, -36 - noteId.height / 2);\n            noteId.angle = this.isAbove ? 0 : 180;\n\n            /*\n            noteId.cacheAsBitmap = true;\n            notePosBlock.cacheAsBitmap = true;\n            */\n            \n            noteInfoContainer.addChild(noteId);\n            noteInfoContainer.addChild(notePosBlock);\n\n            this.debugSprite = noteInfoContainer;\n        }\n\n        return this.sprite;\n    }\n\n    calcTime(currentTime, size)\n    {\n        let _yOffset = size.height * this.yOffset,\n            yOffset = _yOffset * (this.isAbove ? -1 : 1),\n            originX = size.widthPercent * this.positionX,\n            _originY = (this.floorPosition - this.judgeline.floorPosition) * (this.type === 3 && this.useOfficialSpeed ? 1 : this.speed) * size.noteSpeed + _yOffset,\n            originY = _originY * (this.isAbove ? -1 : 1),\n\n            realX = originY * this.judgeline.sinr * -1,\n            realY = originY * this.judgeline.cosr,\n\n            _holdLength = this.type === 3 ? (this.useOfficialSpeed ? (this.holdTimeLength - currentTime) : (this.endPosition - this.judgeline.floorPosition)) * this.speed * size.noteSpeed : _originY,\n            holdLength = this.type === 3 ? _holdLength * (this.isAbove ? -1 : 1) : originY;\n        \n        if (!isNaN(this.judgeline.inclineSinr) && this.type !== 3)\n        {\n            let inclineValue = 1 - ((this.judgeline.inclineSinr * _originY) / 360);\n            this.sprite.scale.set(inclineValue * this.sprite.baseScale * this.xScale, inclineValue * this.sprite.baseScale);\n            originX *= inclineValue;\n        }\n\n        if (this.type !== 3)\n        {\n            // _originY *= this.judgeline.calcNoteControl(_originY, 'y', 1);\n            originX *= this.judgeline.calcNoteControl(_originY, 'x', 1);\n        }\n\n        if (this.type === 3) // Hold 长度计算\n        {\n            if (this.time <= currentTime && this.holdTimeLength > currentTime)\n            {\n                realX = realY = 0;\n\n                this.sprite.children[0].visible = false;\n                this.sprite.children[1].height = _holdLength / size.noteScale;\n                this.sprite.children[2].position.y = this.sprite.children[1].height * -1;\n            }\n            else\n            {\n                this.sprite.children[0].visible = true;\n            }\n        }\n        \n        // Note 落在判定线时的绝对位置计算\n        this.sprite.judgelineX = originX * this.judgeline.cosr + this.judgeline.sprite.position.x;\n        this.sprite.judgelineY = originX * this.judgeline.sinr + this.judgeline.sprite.position.y;\n\n        // Note 的绝对位置计算\n        realX += this.sprite.judgelineX;\n        realY += this.sprite.judgelineY;\n\n        // Note 落在判定线时的绝对位置计算（补 y 轴偏移）\n        this.sprite.judgelineX += yOffset * this.judgeline.sinr * -1;\n        this.sprite.judgelineY += yOffset * this.judgeline.cosr;\n\n        // Note 是否在舞台可视范围内\n        this.sprite.outScreen = !isInArea({\n            startX : realX,\n            endX   : originX * this.judgeline.cosr - holdLength * this.judgeline.sinr + this.judgeline.sprite.position.x,\n            startY : realY,\n            endY   : holdLength * this.judgeline.cosr + originX * this.judgeline.sinr + this.judgeline.sprite.position.y\n        }, size);\n\n        // 推送计算结果到精灵\n        this.sprite.visible = !this.sprite.outScreen;\n        if (this.debugSprite) this.debugSprite.visible = !this.sprite.outScreen;\n\n        this.sprite.position.x = realX;\n        this.sprite.position.y = realY;\n        \n        this.sprite.angle = this.judgeline.sprite.angle + (this.isAbove ? 0 : 180);\n\n        // Note 在舞台可视范围之内时做进一步计算\n        if (!this.sprite.outScreen)\n        {\n            if (this.type !== 3)\n            {\n                let noteCtrlScale = this.judgeline.calcNoteControl(_originY, 'scale', 1);\n                this.sprite.scale.set(this.sprite.baseScale * this.xScale * noteCtrlScale, this.sprite.baseScale * noteCtrlScale);\n                this.sprite.alpha = this.isScoreAnimated ? 0 : this.basicAlpha * this.judgeline.calcNoteControl(_originY, 'alpha', 1);\n            }\n            else\n            {\n                this.sprite.alpha = this.isScored && this.score <= 1 ? 0.5 : this.basicAlpha * this.judgeline.calcNoteControl(_originY, 'alpha', 1);\n            }\n\n            this.sprite.visible = (this.sprite.alpha > 0);\n\n            // Note 特殊位置是否可视控制\n            if (this.type !== 3 && this.time > currentTime && _originY < 0 && this.judgeline.isCover) this.sprite.visible = false;\n            if (this.type !== 3 && this.isFake && this.time <= currentTime) this.sprite.visible = false;\n            if (\n                this.type === 3 &&\n                (\n                    (this.time > currentTime && _originY < 0 && this.judgeline.isCover) || // 时间未开始时 Hold 在判定线对面\n                    (this.holdTimeLength <= currentTime) // Hold 已经被按完\n                )\n            ) this.sprite.visible = false;\n            \n            if (!isNaN(this.visibleTime) && this.time - currentTime > this.visibleTime) this.sprite.visible = false;\n\n            if (this.judgeline.alpha < 0)\n            {\n                if (this.judgeline.alpha >= -1) this.sprite.visible = false;\n                else if (this.judgeline.alpha >= -2)\n                {\n                    if (this.originY > 0) this.sprite.visible = false;\n                    else if (this.originY < 0) this.sprite.visible = true;\n                }\n            }\n\n            if (this.debugSprite)\n            {\n                this.debugSprite.position = this.sprite.position;\n                this.debugSprite.angle = this.sprite.angle;\n                this.debugSprite.alpha = 0.2 + (this.sprite.visible ? (this.sprite.alpha * 0.8) : 0);\n\n                if (this.time > currentTime)\n                {\n                    if (!this.sprite.visible)\n                    {\n                        this.sprite.visible = true;\n                        this.sprite.alpha = 0.2;\n                    }\n                    else\n                    {\n                        this.sprite.alpha = this.basicAlpha;\n                    }\n                }\n            }\n        }\n    }\n};\n\n\nfunction isInArea(sprite, area)\n{\n    let startX = sprite.startX <= sprite.endX ? sprite.startX : sprite.endX,\n        endX = sprite.startX <= sprite.endX ? sprite.endX : sprite.startX,\n        startY = sprite.startY <= sprite.endY ? sprite.startY : sprite.endY,\n        endY = sprite.startY <= sprite.endY ? sprite.endY : sprite.startY;\n    /*\n    if (\n        (\n            isInValueArea(sprite.startX, area.startX, area.endX) ||\n            isInValueArea(sprite.endX, area.startX, area.endX)\n        ) &&\n        (\n            isInValueArea(sprite.startY, area.startY, area.endY) ||\n            isInValueArea(sprite.endY, area.startY, area.endY)\n        )\n    ) {\n        return true;\n    }\n    else \n    {\n        return false;\n    }\n    */\n    \n    if (\n        (\n            startX >= area.startX && startY >= area.startY &&\n            endX <= area.endX && endY <= area.endY\n        ) ||\n        (\n            endX >= area.startX && endY >= area.startY &&\n            startX <= area.endX && startY <= area.endY\n        )\n    ) {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}","import Chart from '../index';\nimport Judgeline from '../judgeline';\nimport EventLayer from '../eventlayer';\nimport Note from '../note';\nimport utils from './utils';\n\nexport default function OfficialChartConverter(_chart)\n{\n    let chart = new Chart();\n    let rawChart = convertOfficialVersion(_chart);\n    let notes = [];\n    let sameTimeNoteCount = {};\n    let bpmList = [];\n    let newBpmList = [];\n\n    chart.offset = rawChart.offset;\n\n    rawChart.judgeLineList.forEach((_judgeline, index) =>\n    {\n        let judgeline = new Judgeline({ id: index });\n        let events = new EventLayer();\n        let judgelineNotes = [];\n\n        _judgeline.speedEvents.forEach((e) =>\n        {\n            events.speed.push({\n                startTime     : calcRealTime(e.startTime, _judgeline.bpm),\n                endTime       : calcRealTime(e.endTime, _judgeline.bpm),\n                value         : e.value\n            });\n        });\n        _judgeline.judgeLineMoveEvents.forEach((e) => \n        {\n            events.moveX.push({\n                startTime     : calcRealTime(e.startTime, _judgeline.bpm),\n                endTime       : calcRealTime(e.endTime, _judgeline.bpm),\n                start         : e.start - 0.5,\n                end           : e.end - 0.5\n            });\n            events.moveY.push({\n                startTime : calcRealTime(e.startTime, _judgeline.bpm),\n                endTime   : calcRealTime(e.endTime, _judgeline.bpm),\n                start     : e.start2 - 0.5,\n                end       : e.end2 - 0.5\n            });\n        });\n        _judgeline.judgeLineRotateEvents.forEach((e) => \n        {\n            events.rotate.push({\n                startTime : calcRealTime(e.startTime, _judgeline.bpm),\n                endTime   : calcRealTime(e.endTime, _judgeline.bpm),\n                start     : -(Math.PI / 180) * e.start,\n                end       : -(Math.PI / 180) * e.end\n            });\n        });\n        _judgeline.judgeLineDisappearEvents.forEach((e) =>\n        {\n            events.alpha.push({\n                startTime : calcRealTime(e.startTime, _judgeline.bpm),\n                endTime   : calcRealTime(e.endTime, _judgeline.bpm),\n                start     : e.start,\n                end       : e.end\n            });\n        });\n\n        judgeline.eventLayers.push(events);\n        judgeline.sortEvent();\n\n        judgeline.eventLayers[0].moveX = utils.arrangeSameValueEvent(judgeline.eventLayers[0].moveX);\n        judgeline.eventLayers[0].moveY = utils.arrangeSameValueEvent(judgeline.eventLayers[0].moveY);\n        judgeline.eventLayers[0].rotate = utils.arrangeSameValueEvent(judgeline.eventLayers[0].rotate);\n        judgeline.eventLayers[0].alpha = utils.arrangeSameValueEvent(judgeline.eventLayers[0].alpha);\n\n        judgeline.calcFloorPosition();\n\n        _judgeline.notesAbove.forEach((rawNote, rawNoteIndex) =>\n        {\n            rawNote.judgeline = judgeline;\n            rawNote.id = rawNoteIndex;\n            rawNote.bpm = _judgeline.bpm;\n            rawNote.isAbove = true;\n            // let note = pushNote(rawNote, judgeline, rawNoteIndex, _judgeline.bpm, true);\n            judgelineNotes.push(rawNote);\n        });\n        _judgeline.notesBelow.forEach((rawNote, rawNoteIndex) =>\n        {\n            rawNote.judgeline = judgeline;\n            rawNote.id = rawNoteIndex;\n            rawNote.bpm = _judgeline.bpm;\n            rawNote.isAbove = false;\n            // let note = pushNote(rawNote, judgeline, rawNoteIndex, _judgeline.bpm, false);\n            judgelineNotes.push(rawNote);\n        });\n\n        judgelineNotes.sort((a, b) => a.time - b.time);\n        judgelineNotes.forEach((note, noteIndex) =>\n        {\n            sameTimeNoteCount[note.time] = !sameTimeNoteCount[note.time] ? 1 : sameTimeNoteCount[note.time] + 1;\n            note.id = noteIndex;\n        });\n\n        notes.push(...judgelineNotes);\n\n        chart.judgelines.push(judgeline);\n    });\n\n    notes.sort((a, b) => a.time - b.time);\n    notes.forEach((note) =>\n    {\n        if (sameTimeNoteCount[note.time] > 1) note.isMulti = true;\n        chart.notes.push(pushNote(note));      \n    });\n    chart.notes.sort((a, b) => a.time - b.time);\n\n    notes.sort((a, b) => a.time - b.time);\n    notes.forEach((note) =>\n    {\n        if (bpmList.length <= 0)\n        {\n            bpmList.push({\n                startTime   : note.time,\n                endTime     : note.time,\n                bpm         : note.bpm,\n                holdBetween : ((-1.2891 * note.bpm) + 396.71) / 1000\n            });\n        }\n        else\n        {\n            bpmList[bpmList.length - 1].endTime = note.time;\n\n            if (bpmList[bpmList.length - 1].bpm != note.bpm)\n            {\n                bpmList.push({\n                    startTime   : note.time,\n                    endTime     : note.time,\n                    bpm         : note.bpm,\n                    holdBetween : ((-1.2891 * note.bpm) + 396.71) / 1000\n                });\n            }\n        }\n    });\n    bpmList.sort((a, b) => a.startTime - b.startTime);\n\n    if (bpmList.length > 0)\n    {\n        bpmList[0].startTime = 1 - 1000;\n        bpmList[bpmList.length - 1].endTime = 1e4;\n    }\n    else\n    {\n        bpmList.push({\n            startTime   : 1 - 1000,\n            endTime     : 1e4,\n            bpm         : 120,\n            holdBetween : 0.242018\n        });\n    }\n\n    chart.bpmList = bpmList.slice();\n\n    return chart;\n\n    function pushNote(rawNote)\n    {\n        rawNote.time = calcRealTime(rawNote.time, rawNote.bpm);\n        rawNote.holdTime = calcRealTime(rawNote.holdTime, rawNote.bpm);\n        rawNote.holdEndTime = rawNote.time + rawNote.holdTime;\n\n        {  // 考虑到 js 精度，此处重新计算 Note 的 floorPosition 值\n            let noteStartSpeedEvent = rawNote.judgeline.getFloorPosition(rawNote.time);\n            rawNote.floorPosition = noteStartSpeedEvent ? noteStartSpeedEvent.floorPosition + noteStartSpeedEvent.value * (rawNote.time - noteStartSpeedEvent.startTime) : 0;\n\n            if (rawNote.type == 3)\n            {\n                let noteEndSpeedEvent = rawNote.judgeline.getFloorPosition(rawNote.holdEndTime);\n                rawNote.holdLength = rawNote.holdTime * rawNote.speed /*(noteEndSpeedEvent ? noteEndSpeedEvent.floorPosition + noteEndSpeedEvent.value * (rawNote.holdEndTime - noteEndSpeedEvent.startTime) : 0) - rawNote.floorPosition */;\n            }\n            else\n            {\n                rawNote.holdLength = 0;\n            }\n        }\n\n        return new Note({\n            id               : rawNote.id,\n            lineId           : rawNote.lineId,\n            type             : rawNote.type,\n            time             : rawNote.time,\n            holdTime         : rawNote.holdTime,\n            holdLength       : rawNote.holdLength,\n            positionX        : rawNote.positionX,\n            floorPosition    : rawNote.floorPosition,\n            speed            : rawNote.speed,\n            isAbove          : rawNote.isAbove,\n            isMulti          : rawNote.isMulti,\n            useOfficialSpeed : true,\n            judgeline        : rawNote.judgeline\n        });\n    }\n};\n\n\nfunction convertOfficialVersion(chart)\n{\n    let newChart = JSON.parse(JSON.stringify(chart));\n    \n    switch (newChart.formatVersion)\n    {\n        case 1:\n        {\n            newChart.formatVersion = 3;\n            for (const i of newChart.judgeLineList)\n            {\n                let floorPosition = 0;\n                \n                for (const x of i.speedEvents)\n                {\n                    if (x.startTime < 0) x.startTime = 0;\n                    x.floorPosition = floorPosition;\n                    floorPosition += (x.endTime - x.startTime) * x.value / i.bpm * 1.875;\n                }\n                \n                for (const x of i.judgeLineDisappearEvents)\n                {\n                    x.start2 = 0;\n                    x.end2   = 0;\n                }\n                \n                for (const x of i.judgeLineMoveEvents)\n                {\n                    x.start2 = x.start % 1e3 / 520;\n                    x.end2   = x.end % 1e3 / 520;\n                    x.start  = parseInt(x.start / 1e3) / 880;\n                    x.end    = parseInt(x.end / 1e3) / 880;\n                }\n                \n                for (const x of i.judgeLineRotateEvents)\n                {\n                    x.start2 = 0;\n                    x.end2   = 0;\n                }\n            }\n        }\n        case 3: {\n            break;\n        }\n        default:\n            throw new Error('Unsupported chart version: ' + newChart.formatVersion);\n    }\n    \n    return newChart;\n}\n\nfunction calcRealTime(time, bpm) {\n    return time / bpm * 1.875;\n}","import Chart from '../index';\nimport Judgeline from '../judgeline';\nimport EventLayer from '../eventlayer';\nimport Note from '../note';\nimport utils from './utils';\n\nconst Easing = [\n    pos => pos, //1\n\tpos => Math.sin(pos * Math.PI / 2), //2\n\tpos => 1 - Math.cos(pos * Math.PI / 2), //3\n\tpos => 1 - (pos - 1) ** 2, //4\n\tpos => pos ** 2, //5\n\tpos => (1 - Math.cos(pos * Math.PI)) / 2, //6\n\tpos => ((pos *= 2) < 1 ? pos ** 2 : -((pos - 2) ** 2 - 2)) / 2, //7\n\tpos => 1 + (pos - 1) ** 3, //8\n\tpos => pos ** 3, //9\n\tpos => 1 - (pos - 1) ** 4, //10\n\tpos => pos ** 4, //11\n\tpos => ((pos *= 2) < 1 ? pos ** 3 : ((pos - 2) ** 3 + 2)) / 2, //12\n\tpos => ((pos *= 2) < 1 ? pos ** 4 : -((pos - 2) ** 4 - 2)) / 2, //13\n\tpos => 1 + (pos - 1) ** 5, //14\n\tpos => pos ** 5, //15\n\tpos => 1 - 2 ** (-10 * pos), //16\n\tpos => 2 ** (10 * (pos - 1)), //17\n\tpos => Math.sqrt(1 - (pos - 1) ** 2), //18\n\tpos => 1 - Math.sqrt(1 - pos ** 2), //19\n\tpos => (2.70158 * pos - 1) * (pos - 1) ** 2 + 1, //20\n\tpos => (2.70158 * pos - 1.70158) * pos ** 2, //21\n\tpos => ((pos *= 2) < 1 ? (1 - Math.sqrt(1 - pos ** 2)) : (Math.sqrt(1 - (pos - 2) ** 2) + 1)) / 2, //22\n\tpos => pos < 0.5 ? (14.379638 * pos - 5.189819) * pos ** 2 : (14.379638 * pos - 9.189819) * (pos - 1) ** 2 + 1, //23\n\tpos => 1 - 2 ** (-10 * pos) * Math.cos(pos * Math.PI / .15), //24\n\tpos => 2 ** (10 * (pos - 1)) * Math.cos((pos - 1) * Math.PI / .15), //25\n\tpos => ((pos *= 11) < 4 ? pos ** 2 : pos < 8 ? (pos - 6) ** 2 + 12 : pos < 10 ? (pos - 9) ** 2 + 15 : (pos - 10.5) ** 2 + 15.75) / 16, //26\n\tpos => 1 - Easing[25](1 - pos), //27\n\tpos => (pos *= 2) < 1 ? Easing[25](pos) / 2 : Easing[26](pos - 1) / 2 + .5, //28\n\tpos => pos < 0.5 ? 2 ** (20 * pos - 11) * Math.sin((160 * pos + 1) * Math.PI / 18) : 1 - 2 ** (9 - 20 * pos) * Math.sin((160 * pos + 1) * Math.PI / 18) //29\n];\n\nexport default function PhiEditChartConverter(_chart)\n{\n    let rawChart = _chart.split(/\\r\\n|\\n\\r/);\n    let chart = new Chart();\n    let chartSimple = {\n        bpm: [],\n        judgelines: [],\n        _judgelines: {},\n        notes: [],\n        notesPerLine: {},\n        sameTimeNoteCount: {},\n\n        pushNote: function (note)\n        {\n            this.sameTimeNoteCount[floorNum(note.startTime)] = !this.sameTimeNoteCount[floorNum(note.startTime)] ? 1 : this.sameTimeNoteCount[floorNum(note.startTime)] + 1;\n            if (!this.notesPerLine[note.lineId]) this.notesPerLine[note.lineId] = [];\n            this.notesPerLine[note.lineId].push(note);\n            this.notes.push(note);\n        },\n\n        pushEventToLine: function (lineId, eventName, event)\n        {\n            if (isNaN(lineId) || lineId < 0)\n            {\n                console.warn('Invalid line id: ' + lineId + ', ignored');\n                return;\n            }\n            if (!this._judgelines[lineId]) this._judgelines[lineId] = new Judgeline({ id: lineId });\n            if (this._judgelines[lineId].eventLayers.length < 1) this._judgelines[lineId].eventLayers.push(new EventLayer());\n            if (!this._judgelines[lineId].eventLayers[0][eventName]) throw new Error('No such event type: ' + eventName);\n\n            let events = this._judgelines[lineId].eventLayers[0][eventName];\n            let lastEvent = events[events.length - 1];\n\n            if (\n                lastEvent &&\n                lastEvent.startTime == event.startTime &&\n                (\n                    (\n                        isNaN(lastEvent.endTime) &&\n                        isNaN(event.endTime)\n                    ) ||\n                    (\n                        !isNaN(lastEvent.endTime) &&\n                        !isNaN(event.endTime) &&\n                        lastEvent.endTime == event.endTime\n                    )\n                )\n            ) {\n                lastEvent.endTime = event.endTime;\n                \n                if (isNaN(parseFloat(event.value)))\n                {\n                    lastEvent.start = event.start;\n                    lastEvent.end = event.end;\n                }\n                else\n                {\n                    lastEvent.value = event.value;\n                }\n            }\n            else\n            {\n                events.push(event);\n            }\n        }\n    };\n\n    /*\n    chartSimple.pushNote = chartSimple.pushNote.bind(chartSimple);\n    chartSimple.pushEventToLine = chartSimple.pushEventToLine.bind(chartSimple);\n    */\n    \n    if (!isNaN(rawChart[0])) chart.offset = parseFloat((parseFloat(rawChart.shift()) / 1000).toFixed(4)) - 0.175;\n    else return null;\n\n    rawChart.forEach((_command, commandIndex) =>\n    {\n        if (!_command) return;\n        if (_command == '') return;\n        if (_command.replace(/\\s/g, '') == '') return;\n\n        let command = _command.split(' ');\n\n        for (let commandIndex = 1; commandIndex < command.length; commandIndex++)\n        {\n            command[commandIndex] = parseFloat(command[commandIndex]);\n        }\n\n        switch (command[0])\n        {\n            // bpm 列表\n            case 'bp': {\n                chartSimple.bpm.push({\n                    startBeat : command[1] || 0,\n                    bpm       : command[2] || 120\n                });\n                break;\n            }\n            // note\n            case 'n1':\n            { // tap\n                chartSimple.pushNote({\n                    type      : 1,\n                    lineId    : !isNaN(command[1]) ? command[1] : -1,\n                    startTime : command[2] || 0,\n                    positionX : command[3] || 0,\n                    isAbove   : command[4] == 1 ? true : false,\n                    isFake    : command[5] == 1 ? true : false\n                });\n                break;\n            }\n            case 'n2':\n            { // hold\n                chartSimple.pushNote({\n                    type      : 3,\n                    lineId    : !isNaN(command[1]) ? command[1] : -1,\n                    startTime : command[2] || 0,\n                    endTime   : command[3] || (command[2] || 0),\n                    positionX : command[4] || 0,\n                    isAbove   : command[5] == 1 ? true : false,\n                    isFake    : command[6] == 1 ? true : false\n                });\n                break;\n            }\n            case 'n3':\n            { // flick\n                chartSimple.pushNote({\n                    type      : 4,\n                    lineId    : !isNaN(command[1]) ? command[1] : -1,\n                    startTime : command[2] || 0,\n                    positionX : command[3] || 0,\n                    isAbove   : command[4] == 1 ? true : false,\n                    isFake    : command[5] == 1 ? true : false\n                });\n                break;\n            }\n            case 'n4':\n            { // drag\n                chartSimple.pushNote({\n                    type      : 2,\n                    lineId    : !isNaN(command[1]) ? command[1] : -1,\n                    startTime : command[2] || 0,\n                    positionX : command[3] || 0,\n                    isAbove   : command[4] == 1 ? true : false,\n                    isFake    : command[5] == 1 ? true : false\n                });\n                break;\n            }\n            // note 附加信息\n            case '#':\n            { // 速度\n                chartSimple.notes[chartSimple.notes.length - 1].speed = !isNaN(command[1]) ? command[1] : 1;\n                break;\n            }\n            case '&':\n            { // 缩放\n                chartSimple.notes[chartSimple.notes.length - 1].xScale = !isNaN(command[1]) ? command[1] : 1;\n                break;\n            }\n            // 判定线事件相关\n            case 'cv':\n            { // speed\n                chartSimple.pushEventToLine(command[1], 'speed', {\n                    startTime : command[2] || 0,\n                    endTime   : NaN,\n                    value     : !isNaN(command[3]) ? command[3] / 7 : 1\n                });\n                break;\n            }\n            case 'cm':\n            { // moveX & moveY\n                chartSimple.pushEventToLine(command[1], 'moveX', {\n                    startTime  : command[2] || 0,\n                    endTime    : command[3] || (command[2] || 0),\n                    start      : NaN,\n                    end        : command[4] / 2048 - 0.5 || 0,\n                    easingType : command[6] || 1\n                });\n                chartSimple.pushEventToLine(command[1], 'moveY', {\n                    startTime  : command[2] || 0,\n                    endTime    : command[3] || (command[2] || 0),\n                    start      : NaN,\n                    end        : command[5] / 1400 - 0.5 || 0,\n                    easingType : command[6] || 1\n                });\n                break;\n            }\n            case 'cp':\n            { // moveX & moveY（瞬时）\n                chartSimple.pushEventToLine(command[1], 'moveX', {\n                    startTime  : command[2] || 0,\n                    endTime    : NaN,\n                    start      : command[3] / 2048 - 0.5 || 0,\n                    end        : command[3] / 2048 - 0.5 || 0,\n                    easingType : 1\n                });\n                chartSimple.pushEventToLine(command[1], 'moveY', {\n                    startTime  : command[2] || 0,\n                    endTime    : NaN,\n                    start      : command[4] / 1400 - 0.5 || 0,\n                    end        : command[4] / 1400 - 0.5 || 0,\n                    easingType : 1\n                });\n                break;\n            }\n            case 'cr':\n            { // rotate\n                chartSimple.pushEventToLine(command[1], 'rotate', {\n                    startTime  : command[2] || 0,\n                    endTime    : command[3] || (command[2] || 0),\n                    start      : NaN,\n                    end        : command[4] || 0,\n                    easingType : command[5] || 1\n                });\n                break;\n            }\n            case 'cd':\n            { // rotate（瞬时）\n                chartSimple.pushEventToLine(command[1], 'rotate', {\n                    startTime  : command[2] || 0,\n                    endTime    : NaN,\n                    start      : command[3] || 0,\n                    end        : command[3] || 0,\n                    easingType : 1\n                });\n                break;\n            }\n            case 'cf':\n            { // alpha\n                chartSimple.pushEventToLine(command[1], 'alpha', {\n                    startTime  : command[2] || 0,\n                    endTime    : command[3] || (command[2] || 0),\n                    start      : NaN,\n                    end        : command[4] || 0,\n                    easingType : 1\n                });\n                break;\n            }\n            case 'ca':\n            { // alpha（瞬时）\n                chartSimple.pushEventToLine(command[1], 'alpha', {\n                    startTime  : command[2] || 0,\n                    endTime    : NaN,\n                    start      : command[3] || 0,\n                    end        : command[3] || 0,\n                    easingType : 1\n                });\n                break;\n            }\n            default :\n            {\n                console.warn('Unsupported command: ' + command[0] + ', ignoring.\\nAt line ' + (commandIndex + 2) + ':\\n' + command.join(' '));\n            }\n        }\n    });\n\n    if (chartSimple.bpm.length <= 0)\n    {\n        chartSimple.bpm.push({\n            startBeat : 0,\n            endBeat   : 1e4,\n            bpm       : 120\n        });\n    }\n\n    chartSimple.bpm.sort((a, b) => a.startBeat - b.startBeat);\n\n    { // 将 Beat 计算为对应的时间（秒）\n        let currentBeatRealTime = 0.5; // 当前每个 Beat 的实际时长（秒）\n        let bpmChangedBeat = 0; // 当前 BPM 是在什么时候被更改的（Beat）\n        let bpmChangedTime = 0; // 当前 BPM 是在什么时候被更改的（秒）\n\n        chartSimple.bpm.forEach((bpm, index) =>\n        {   \n\n            bpm.endBeat = chartSimple.bpm[index + 1] ? chartSimple.bpm[index + 1].startBeat : 1e4;\n\n            bpmChangedTime += currentBeatRealTime * (bpm.startBeat - bpmChangedBeat);\n            bpm.startTime = bpmChangedTime;\n            bpm.endTime = currentBeatRealTime * (bpm.endBeat - bpmChangedBeat);\n\n            bpmChangedBeat += (bpm.startBeat - bpmChangedBeat);\n            \n            currentBeatRealTime = 60 / bpm.bpm;\n            bpm.beatTime = 60 / bpm.bpm;\n        });\n    }\n\n    // note 和 bpm 按时间排序\n    chartSimple.bpm.sort((a, b) => b.startBeat - a.startBeat);\n    for (const lineId in chartSimple.notesPerLine)\n    {\n        chartSimple.notesPerLine[lineId].sort((a, b) => a.startTime - b.startTime);\n    }\n\n    for (const lineId in chartSimple._judgelines)\n    {\n        let judgeline = chartSimple._judgelines[lineId];\n\n        judgeline.sortEvent();\n\n        // 事件参数补齐\n        judgeline.eventLayers[0].alpha.forEach((event, eventIndex, array) =>\n        {\n            if (isNaN(event.endTime)) event.endTime = eventIndex < array.length - 1 ? array[eventIndex + 1].startTime : 1e5;\n            if (isNaN(event.start)) event.start = eventIndex > 0 ? array[eventIndex - 1].end : 0;\n        });\n        judgeline.eventLayers[0].moveX.forEach((event, eventIndex, array) =>\n        {\n            if (isNaN(event.endTime)) event.endTime = eventIndex < array.length - 1 ? array[eventIndex + 1].startTime : 1e5;\n            if (isNaN(event.start)) event.start = eventIndex > 0 ? array[eventIndex - 1].end : 0;\n        });\n        judgeline.eventLayers[0].moveY.forEach((event, eventIndex, array) =>\n        {\n            if (isNaN(event.endTime)) event.endTime = eventIndex < array.length - 1 ? array[eventIndex + 1].startTime : 1e5;\n            if (isNaN(event.start)) event.start = eventIndex > 0 ? array[eventIndex - 1].end : 0;\n        });\n        judgeline.eventLayers[0].rotate.forEach((event, eventIndex, array) =>\n        {\n            if (isNaN(event.endTime)) event.endTime = eventIndex < array.length - 1 ? array[eventIndex + 1].startTime : 1e5;\n            if (isNaN(event.start)) event.start = eventIndex > 0 ? array[eventIndex - 1].end / (Math.PI / 180) : 0;\n\n            event.start = event.start * (Math.PI / 180);\n            event.end = event.end * (Math.PI / 180);\n        });\n        judgeline.eventLayers[0].speed.forEach((event, eventIndex, array) =>\n        {\n            if (isNaN(event.endTime)) event.endTime = eventIndex < array.length - 1 ? array[eventIndex + 1].startTime : 1e5;\n        });\n\n        // Alpha 事件单独进行计算\n        judgeline.eventLayers[0].alpha.forEach((event) =>\n        {\n            let noNoteSetsVisibleTime = true;\n\n            if (event.start == -1) event.start = -255;\n            else if (event.start == -2) event.start = -510;\n            else if (event.start < -100 && event.start >= -1000)\n            {\n                for (let eventCountIndex = 0, eventCountLength = Math.ceil((event.endTime - event.startTime) / utils.CalcBetweenTime); eventCountIndex < eventCountLength; eventCountIndex++)\n                {\n                    let currentTime = (event.startTime + (eventCountIndex * utils.CalcBetweenTime)) >= event.endTime ? event.endTime : (event.startTime + (eventCountIndex * utils.CalcBetweenTime));\n                    let currentEventValue = utils.valueCalculator(event, Easing, currentTime);\n                    let visibleBeat = ((currentEventValue + 100) * -1) / 10;\n\n                    if (currentEventValue >= -100) break;\n\n                    for (const note of chartSimple.notesPerLine[lineId])\n                    {\n                        if (note.startTime < currentTime) continue;\n                        if (note.startTime > currentTime) break;\n\n                        note.visibleBeat = visibleBeat;\n                        noNoteSetsVisibleTime = false;\n                    }\n                }\n\n                event.start = noNoteSetsVisibleTime ? -255 : 0;\n            }\n\n            if (event.end == -1) event.end = -255;\n            else if (event.end == -2) event.end = -510;\n            else if (event.end < -100) event.end = noNoteSetsVisibleTime ? -255 : 0;\n\n            event.start = event.start / 255;\n            event.end = event.end / 255;\n        });\n\n        // 拆分缓动\n        for (const name in judgeline.eventLayers[0])\n        {\n            if (name == 'speed' || !(judgeline.eventLayers[0][name] instanceof Array)) continue;\n            \n            let newEvents = [];\n            judgeline.eventLayers[0][name].forEach((event) =>\n            {\n                utils.calculateEventEase(event, Easing)\n                    .forEach((newEvent) =>\n                    {\n                        newEvents.push(newEvent);\n                    }\n                );\n            });\n            judgeline.eventLayers[0][name] = newEvents;\n        }\n        \n        // 合并相同变化量事件\n        /*\n        for (const name in judgeline.eventLayers[0])\n        {\n            if (name != 'speed' && (judgeline.eventLayers[0][name] instanceof Array))\n            {\n                judgeline.eventLayers[0][name] = utils.arrangeSameValueEvent(judgeline.eventLayers[0][name]);\n            }\n        }\n        judgeline.eventLayers[0].speed = utils.arrangeSameSingleValueEvent(judgeline.eventLayers[0].speed);\n        */\n\n        // 计算事件真实时间\n        for (const name in judgeline.eventLayers[0])\n        {\n            if (!(judgeline.eventLayers[0][name] instanceof Array)) continue;\n            judgeline.eventLayers[0][name] = utils.calculateRealTime(chartSimple.bpm, judgeline.eventLayers[0][name]);\n        }\n\n        judgeline.sortEvent();\n        judgeline.calcFloorPosition();\n    };\n\n    for (const lineId in chartSimple.notesPerLine)\n    {\n        let notes = chartSimple.notesPerLine[lineId];\n\n        // 计算 Note 高亮\n        notes.forEach((note) =>\n        {\n            if (chartSimple.sameTimeNoteCount[floorNum(note.startTime)] > 1) note.isMulti = true;\n        });\n\n        notes = calculateRealVisibleTime(chartSimple.bpm, notes);\n        notes = utils.calculateRealTime(chartSimple.bpm, notes);\n        notes.sort((a, b) => a.startTime - b.startTime);\n\n        notes.forEach((note, noteIndex) =>\n        {\n            let judgeline = chartSimple._judgelines[note.lineId];\n\n            if (!judgeline)\n            {\n                console.warn('Judgeline ' + note.lineId + ' doesn\\'t exist, ignoring.');\n                return;\n            }\n\n            {  // 计算 Note 的 floorPosition\n                let noteStartSpeedEvent = judgeline.getFloorPosition(note.startTime);\n                note.floorPosition = noteStartSpeedEvent ? noteStartSpeedEvent.floorPosition + noteStartSpeedEvent.value * (note.startTime - noteStartSpeedEvent.startTime) : 0;\n\n                if (note.type == 3)\n                {\n                    let noteEndSpeedEvent = judgeline.getFloorPosition(note.endTime);\n                    note.holdLength = (noteEndSpeedEvent ? noteEndSpeedEvent.floorPosition + noteEndSpeedEvent.value * (note.endTime - noteEndSpeedEvent.startTime) : 0) - note.floorPosition;\n                }\n                else\n                {\n                    note.holdLength = 0;\n                }\n            }\n\n            // 推送 Note\n            chart.notes.push(new Note({\n                id            : noteIndex,\n                type          : note.type,\n                time          : note.startTime,\n                holdTime      : note.endTime - note.startTime,\n                speed         : note.speed,\n                isAbove       : note.isAbove,\n                isMulti       : note.isMulti,\n                isFake        : note.isFake,\n                positionX     : note.positionX * 9 / 1024,\n                floorPosition : note.floorPosition,\n                holdLength    : note.holdLength,\n                xScale        : note.xScale,\n                visibleTime   : note.visibleTime,\n                judgeline     : judgeline\n            }));\n        });\n    }\n\n    for (const lineId in chartSimple._judgelines)\n    {\n        chart.judgelines.push(chartSimple._judgelines[lineId]);\n    }\n\n    chart.judgelines.sort((a, b) => a.id - b.id);\n    chart.notes.sort((a, b) => a.time - b.time);\n\n    chart.bpmList = utils.calculateHoldBetween(chartSimple.bpm);\n\n    return chart;\n}\n\n\nfunction floorNum(num)\n{\n    return Math.floor(num * 8);\n    // return Math.floor(num * (10 ** n)) / (10 ** n);\n}\n\nfunction calculateRealVisibleTime(_bpmList, _notes)\n{\n    let bpmList = _bpmList.slice();\n    let notes = _notes.slice();\n\n    notes.forEach((note) =>\n    {\n        if (!note.visibleBeat) return;\n\n        for (let bpmIndex = 0, bpmLength = bpmList.length; bpmIndex < bpmLength; bpmIndex++)\n        {\n            let bpm = bpmList[bpmIndex];\n\n            if (bpm.startBeat > note.visibleBeat) continue;\n            note.visibleTime = note.visibleBeat * bpm.beatTime;\n\n            break;\n        }\n    });\n\n    return notes;\n}","import { number as verifyNum } from '@/verify';\nimport Chart from '../index';\nimport Judgeline from '../judgeline';\nimport EventLayer from '../eventlayer';\nimport Note from '../note';\nimport utils from './utils';\nimport { Color } from 'pixi.js';\n\nconst calcBetweenTime = 0.125;\nconst Easing = [\n    (x) => x,\n    (x) => Math.sin((x * Math.PI) / 2),\n    (x) => 1 - Math.cos((x * Math.PI) / 2),\n    (x) => 1 - (1 - x) * (1 - x),\n    (x) => x * x,\n    (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n    (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n    (x) => 1 - Math.pow(1 - x, 3),\n    (x) => x * x * x,\n    (x) => 1 - Math.pow(1 - x, 4),\n    (x) => x * x * x * x,\n    (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n    (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n    (x) => 1 - Math.pow(1 - x, 5),\n    (x) => x * x * x * x * x,\n    (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n    (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n    (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n    (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n    (x) => 1 + 2.70158 * Math.pow(x - 1, 3) + 1.70158 * Math.pow(x - 1, 2),\n    (x) => 2.70158 * x * x * x - 1.70158 * x * x,\n    (x) => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n    (x) => x < 0.5 ? (Math.pow(2 * x, 2) * ((2.594910 + 1) * 2 * x - 2.594910)) / 2 : (Math.pow(2 * x - 2, 2) * ((2.594910 + 1) * (x * 2 - 2) + 2.594910) + 2) / 2,\n    (x) => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * ((2 * Math.PI) / 3)) + 1,\n    (x) => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * ((2 * Math.PI) / 3)),\n    (x) => x < 1 / 2.75 ? 7.5625 * x * x : x < 2 / 2.75 ? 7.5625 * (x -= 1.5 / 2.75) * x + 0.75 : x < 2.5 / 2.75 ? 7.5625 * (x -= 2.25 / 2.75) * x + 0.9375 : 7.5625 * (x -= 2.625 / 2.75) * x + 0.984375,\n    (x) => 1 - Easing[25](1 - x),\n    (x) => x < 0.5 ? (1 - Easing[25](1 - 2 * x)) / 2 : (1 + Easing[25](2 * x - 1)) / 2\n];\n\nexport default function RePhiEditChartConverter(_chart)\n{\n    let notes = [];\n    let sameTimeNoteCount = {};\n    let rawChart = convertChartFormat(_chart);\n    let chart = new Chart({\n        name      : rawChart.META.name,\n        artist    : rawChart.META.composer,\n        author    : rawChart.META.charter,\n        difficult : rawChart.META.level,\n        offset    : rawChart.META.offset / 1000\n    });\n\n    { // 将 Beat 计算为对应的时间（秒）\n        let currentBeatRealTime = 0.5; // 当前每个 Beat 的实际时长（秒）\n        let bpmChangedBeat = 0; // 当前 BPM 是在什么时候被更改的（Beat）\n        let bpmChangedTime = 0; // 当前 BPM 是在什么时候被更改的（秒）\n\n        rawChart.BPMList.forEach((bpm, index) =>\n        {\n            bpm.endTime = rawChart.BPMList[index + 1] ? rawChart.BPMList[index + 1].startTime : [ 1e4, 0, 1 ];\n\n            bpm.startBeat = bpm.startTime[0] + bpm.startTime[1] / bpm.startTime[2];\n            bpm.endBeat = bpm.endTime[0] + bpm.endTime[1] / bpm.endTime[2];\n\n            bpmChangedTime += currentBeatRealTime * (bpm.startBeat - bpmChangedBeat);\n            bpm.startTime = bpmChangedTime;\n            bpm.endTime = currentBeatRealTime * (bpm.endBeat - bpmChangedBeat);\n\n            bpmChangedBeat += (bpm.startBeat - bpmChangedBeat);\n            \n            currentBeatRealTime = 60 / bpm.bpm;\n            bpm.beatTime = 60 / bpm.bpm;\n        });\n\n        rawChart.BPMList.sort((a, b) => b.startBeat - a.startBeat);\n    }\n\n    rawChart.judgeLineList.forEach((_judgeline, judgelineIndex) =>\n    {\n        let judgeline = new Judgeline({\n            id         : judgelineIndex,\n            texture    : _judgeline.Texture != 'line.png' ? _judgeline.Texture : null,\n            parentLine : _judgeline.father >= 0 ? _judgeline.father : NaN,\n            zIndex     : _judgeline.zOrder != 0 ? _judgeline.zOrder : NaN,\n            isCover    : _judgeline.isCover == 1\n        });\n\n        if (_judgeline.attachUI && _judgeline.attachUI != '')\n        {\n            console.warn('Line ' + judgelineIndex + ' is using \\'attachUI\\' feature, ignored this line.\\nPlease note that all notes on this line will also be ignored.');\n            return;\n        }\n\n        // 处理 EventLayer\n        _judgeline.eventLayers.forEach((_eventLayer) =>\n        {\n            let eventLayer = new EventLayer();\n\n            for (const eventName in _eventLayer)\n            {\n                // 拍数数组转小数\n                _eventLayer[eventName] = utils.calculateEventsBeat(_eventLayer[eventName] ? _eventLayer[eventName] : []);\n\n                // 拆分缓动并将结果直接 push 进新的 eventLayer 中\n                if (eventName != 'speedEvents')\n                {\n                    _eventLayer[eventName].forEach((event) =>\n                    {\n                        utils.calculateEventEase(event, Easing)\n                            .forEach((newEvent) =>\n                            {\n                                switch (eventName)\n                                {\n                                    case 'moveXEvents':\n                                    {\n                                        eventLayer.moveX.push(newEvent);\n                                        break;\n                                    }\n                                    case 'moveYEvents':\n                                    {\n                                        eventLayer.moveY.push(newEvent);\n                                        break;\n                                    }\n                                    case 'alphaEvents':\n                                    {\n                                        eventLayer.alpha.push(newEvent);\n                                        break;\n                                    }\n                                    case 'rotateEvents':\n                                    {\n                                        eventLayer.rotate.push(newEvent);\n                                        break;\n                                    }\n                                    default :\n                                    {\n                                        console.warn('Unsupported event name \\'' + eventName + '\\', ignoring');\n                                    }\n                                }\n                            }\n                        );\n                    });\n                }\n                else\n                {\n                    // 拆分 speedEvent\n                    _eventLayer.speedEvents.forEach((event) =>\n                    {\n                        separateSpeedEvent(event)\n                            .forEach((_event) =>\n                            {\n                                eventLayer.speed.push(_event);\n                            }\n                        );\n                    });\n                }\n            }\n            eventLayer.sort();\n\n            if (\n                eventLayer.speed.length <= 0 &&\n                eventLayer.moveX.length <= 0 &&\n                eventLayer.moveY.length <= 0 &&\n                eventLayer.alpha.length <= 0 &&\n                eventLayer.rotate.length <= 0\n            ) {\n                return;\n            }\n\n            // 计算事件的真实时间\n            for (const name in eventLayer)\n            {\n                if (!(eventLayer[name] instanceof Array)) continue;\n                eventLayer[name] = utils.calculateRealTime(rawChart.BPMList, eventLayer[name]);\n            }\n\n            // 计算事件规范值\n            eventLayer.speed.forEach((event) =>\n            {\n                event.value = event.value / (0.6 / (120 / 900));\n            });\n            eventLayer.moveX.forEach((event) =>\n            {\n                event.start = event.start / 1350;\n                event.end = event.end / 1350;\n            });\n            eventLayer.moveY.forEach((event) =>\n            {\n                event.start = event.start / 900;\n                event.end = event.end / 900;\n            });\n            eventLayer.alpha.forEach((event) =>\n            {\n                event.start = event.start / 255;\n                event.end = event.end / 255;\n\n                event.start = event.start > 1 ? 1 : event.start;\n                event.end = event.end > 1 ? 1 : event.end;\n\n                event.start = event.start < -1 ? -1 : event.start;\n                event.end = event.end < -1 ? -1 : event.end;\n            });\n            eventLayer.rotate.forEach((event) =>\n            {\n                event.start = (Math.PI / 180) * event.start;\n                event.end = (Math.PI / 180) * event.end;\n            });\n\n            eventLayer.sort();\n            judgeline.eventLayers.push(eventLayer);\n        });\n\n        // 处理 extendEvents\n        if (_judgeline.extended)\n        {\n            // 流程跟上边都是一样的，没啥好看的\n            if (_judgeline.extended.textEvents && _judgeline.extended.textEvents.length > 0)\n            {\n                judgeline.isText = true;\n\n                utils.calculateEventsBeat(_judgeline.extended.textEvents)\n                    .forEach((event) =>\n                    {\n                        calculateTextEventEase(event)\n                            .forEach((newEvent) =>\n                            {\n                                judgeline.extendEvent.text.push(newEvent);\n                            }\n                        );\n                    }\n                );\n\n                judgeline.extendEvent.text.forEach((event, eventIndex) =>\n                {\n                    if (isNaN(event.endTime))\n                    {\n                        event.endTime = judgeline.extendEvent.text[eventIndex + 1] ? judgeline.extendEvent.text[eventIndex + 1].startTime : 100;\n                    }\n                });\n                judgeline.extendEvent.text = utils.calculateRealTime(rawChart.BPMList, judgeline.extendEvent.text);\n            }\n\n            if (_judgeline.extended.scaleXEvents && _judgeline.extended.scaleXEvents.length > 0)\n            {\n                utils.calculateEventsBeat(_judgeline.extended.scaleXEvents)\n                    .forEach((event) =>\n                    {\n                        utils.calculateEventEase(event, Easing)\n                            .forEach((newEvent) =>\n                            {\n                                judgeline.extendEvent.scaleX.push(newEvent);\n                            }\n                        );\n                    }\n                );\n                judgeline.extendEvent.scaleX = utils.calculateRealTime(rawChart.BPMList, judgeline.extendEvent.scaleX);\n            }\n\n            if (_judgeline.extended.scaleYEvents && _judgeline.extended.scaleYEvents.length > 0)\n            {\n                utils.calculateEventsBeat(_judgeline.extended.scaleYEvents)\n                    .forEach((event) =>\n                    {\n                        utils.calculateEventEase(event, Easing)\n                            .forEach((newEvent) =>\n                            {\n                                /*\n                                if (!judgeline.texture && !judgeline.isText)\n                                {\n                                    newEvent.start = newEvent.start * 0.664285;\n                                    newEvent.end   = newEvent.end * 0.664285;\n                                }\n                                */\n\n                                judgeline.extendEvent.scaleY.push(newEvent);\n                            }\n                        );\n                    }\n                );\n                judgeline.extendEvent.scaleY = utils.calculateRealTime(rawChart.BPMList, judgeline.extendEvent.scaleY);\n            }\n\n            if (_judgeline.extended.colorEvents && _judgeline.extended.colorEvents.length > 0)\n            {\n                utils.calculateEventsBeat(_judgeline.extended.colorEvents)\n                    .forEach((event) =>\n                    {\n                        calculateColorEventEase(event)\n                            .forEach((newEvent) =>\n                            {\n                                judgeline.extendEvent.color.push(newEvent);\n                            }\n                        );\n                    }\n                );\n                judgeline.extendEvent.color = utils.calculateRealTime(rawChart.BPMList, judgeline.extendEvent.color);\n            }\n\n            if (_judgeline.extended.inclineEvents && _judgeline.extended.inclineEvents.length > 0)\n            {\n                let inclineEvents = utils.calculateEventsBeat(_judgeline.extended.inclineEvents);\n\n                if (inclineEvents.length == 1 &&\n                    (inclineEvents[0].startTime == 0 && inclineEvents[0].endTime == 1) &&\n                    (inclineEvents[0].start == 0 && inclineEvents[0].end == 0)\n                ) { /* Do nothing */ }\n                else {\n                    inclineEvents.forEach((event) =>\n                    {\n                        utils.calculateEventEase(event, Easing)\n                            .forEach((newEvent) =>\n                            {\n                                newEvent.start = (Math.PI / 180) * newEvent.start;\n                                newEvent.end = (Math.PI / 180) * newEvent.end;\n\n                                judgeline.extendEvent.incline.push(newEvent);\n                            }\n                        );\n                    });\n                    judgeline.extendEvent.incline = utils.calculateRealTime(rawChart.BPMList, judgeline.extendEvent.incline);\n                }\n            }\n        }\n\n        judgeline.noteControls.alpha = calculateNoteControls(_judgeline.alphaControl, 'alpha', 1);\n        judgeline.noteControls.scale = calculateNoteControls(_judgeline.sizeControl, 'size', 1);\n        judgeline.noteControls.x = calculateNoteControls(_judgeline.posControl, 'pos', 1);\n        // judgeline.noteControls.y = calculateNoteControls(_judgeline.yControl, 'y', 1);\n\n        // 事件排序并计算 floorPosition\n        judgeline.sortEvent();\n        judgeline.calcFloorPosition();\n\n        // 计算 Note 真实时间\n        _judgeline.notes = utils.calculateEventsBeat(_judgeline.notes ? _judgeline.notes : []);\n        _judgeline.notes.sort((a, b) => a.startTime - b.startTime);\n        _judgeline.notes.forEach((note, noteIndex) =>\n        {\n            sameTimeNoteCount[note.startTime] = !sameTimeNoteCount[note.startTime] ? 1 : sameTimeNoteCount[note.startTime] + 1;\n\n            note.id = noteIndex;\n            note.judgeline = judgeline;\n\n            notes.push(note);\n        });;\n        // _judgeline.notes = utils.calculateRealTime(rawChart.BPMList, _judgeline.notes);\n        \n        /*\n        _judgeline.notes.forEach((_note, noteIndex) =>\n        {\n            \n        });\n        */\n\n        chart.judgelines.push(judgeline);\n    });\n\n    // 计算 Note 高亮\n    notes.forEach((note) =>\n    {\n        if (sameTimeNoteCount[note.startTime] > 1) note.isMulti = true;\n    });\n\n    notes = utils.calculateRealTime(rawChart.BPMList, notes);\n    notes.forEach((note) =>\n    {\n        // 计算 Note 的 floorPosition\n        let noteStartSpeedEvent = note.judgeline.getFloorPosition(note.startTime);\n        note.floorPosition = noteStartSpeedEvent ? noteStartSpeedEvent.floorPosition + noteStartSpeedEvent.value * (note.startTime - noteStartSpeedEvent.startTime) : 0;\n\n        if (note.type == 2)\n        {\n            let noteEndSpeedEvent = note.judgeline.getFloorPosition(note.endTime);\n            note.holdLength = (noteEndSpeedEvent ? noteEndSpeedEvent.floorPosition + noteEndSpeedEvent.value * (note.endTime - noteEndSpeedEvent.startTime) : 0) - note.floorPosition;\n        }\n        else\n        {\n            note.holdLength = 0;\n        }\n\n        // 推送 Note\n        chart.notes.push(new Note({\n            id            : note.id,\n            type          : (\n                note.type == 1 ? 1 :\n                note.type == 2 ? 3 :\n                note.type == 3 ? 4 :\n                note.type == 4 ? 2 : 1\n            ),\n            time          : note.startTime,\n            holdTime      : note.endTime - note.startTime,\n            speed         : note.speed,\n            floorPosition : note.floorPosition,\n            holdLength    : note.holdLength,\n            positionX     : (note.positionX / (670 * (9 / 80))),\n            basicAlpha    : note.alpha / 255,\n            visibleTime   : note.visibleTime < 999999 ? note.visibleTime : NaN,\n            yOffset       : (note.yOffset / 900),\n            xScale        : note.size,\n            isAbove       : note.above == 1 ? true : false,\n            isMulti       : note.isMulti,\n            isFake        : note.isFake == 1 ? true : false,\n            judgeline     : note.judgeline\n        }));\n    });\n\n    chart.judgelines.sort((a, b) => a.id - b.id);\n    chart.notes.sort((a, b) => a.time - b.time);\n\n    chart.judgelines.forEach((judgeline, judgelineIndex, judgelines) =>\n    {\n        if (!isNaN(judgeline.parentLine) && judgeline.parentLine >= 0)\n        {\n            let parentLineId = judgeline.parentLine;\n            judgeline.parentLine = null;\n\n            for (const parentLine of judgelines)\n            {\n                if (parentLine.id == parentLineId)\n                {\n                    judgeline.parentLine = parentLine;\n                    break;\n                }\n            }\n        }\n        else judgeline.parentLine = null;\n    });\n\n    chart.bpmList = utils.calculateHoldBetween(rawChart.BPMList);\n\n    return chart;\n}\n\nfunction convertChartFormat(rawChart)\n{\n    let chart = JSON.parse(JSON.stringify(rawChart));\n    \n    if (chart.META.RPEVersion <= 100)\n    {\n        chart.judgeLineList.forEach((judgeline) =>\n        {\n            judgeline.bpmfactor = 1;\n            judgeline.father = -1;\n            judgeline.zOrder = 0;\n\n            judgeline.eventLayers.forEach((eventLayer) =>\n            {\n                for (const name in eventLayer)\n                {\n                    eventLayer[name].forEach((event) =>\n                    {\n                        event.easingLeft = 0;\n                        event.easingRight = 1;\n                    });\n                }\n            });\n        });\n    }\n    if (chart.META.RPEVersion <= 105)\n    {\n\n    }\n    if (chart.META.RPEVersion <= 113)\n    {\n\n    }\n    if (chart.META.RPEVersion <= 123)\n    {\n        \n    }\n\n    if (chart.META.RPEVersion > 123)\n    {\n        console.warn('Unsupported chart version: ' + chart.META.RPEVersion + ', some features may not supported');\n    }\n\n    return chart;\n}\n\nfunction calculateTextEventEase(event)\n{\n    const _calcBetweenTime = calcBetweenTime / 2;\n    const NumberReg = /(.+)%P%/;\n    const isNumberRequired = NumberReg.test(event.start) && NumberReg.test(event.end);\n    const timeBetween = event.endTime - event.startTime;\n    let result = [];\n\n    if (!event) return [];\n\n    if (isNumberRequired)\n    {\n        const startNum = Number(event.start.match(NumberReg)[1]) || 0;\n        const endNum = Number(event.end.match(NumberReg)[1]) || 0;\n        const NotFloatNum = Math.round(startNum) === startNum && Math.round(endNum) === endNum;\n\n        for (let timeIndex = 0, timeCount = Math.ceil(timeBetween / _calcBetweenTime); timeIndex < timeCount; timeIndex++)\n        {\n            let currentTime = event.startTime + (timeIndex * _calcBetweenTime);\n            let nextTime = (event.startTime + ((timeIndex + 1) * _calcBetweenTime)) <= event.endTime ? event.startTime + ((timeIndex + 1) * _calcBetweenTime) : event.endTime;\n            let nextTimePercent = (nextTime - event.startTime) / timeBetween;\n            let currentNum = startNum * (1 - nextTimePercent) + endNum * nextTimePercent;\n\n            if (NotFloatNum)\n            {\n                currentNum = Math.round(currentNum);\n            }\n\n            if (result[result.length - 1] && result[result.length - 1].value == currentNum)\n            {\n                result[result.length - 1].endTime = nextTime;\n                continue;\n            }\n\n            result.push({\n                startTime : currentTime,\n                endTime   : nextTime,\n                value     : currentNum + '',\n            });\n        }\n    }\n    else if (event.start != event.end)\n    {\n        const startText = event.start.length <= event.end.length ? event.start : event.end;\n        const endText = event.start.length <= event.end.length ? event.end : event.start;\n        const isProgressive = startText == '' || endText.indexOf(startText) === 0;\n\n        if (isProgressive)\n        {\n            let currentText = [];\n            let lastTextIndex = -1;\n\n            for (let timeIndex = 0, timeCount = Math.ceil(timeBetween / _calcBetweenTime); timeIndex < timeCount; timeIndex++)\n            {\n                let currentTime = event.startTime + (timeIndex * _calcBetweenTime);\n                let nextTime = (event.startTime + ((timeIndex + 1) * _calcBetweenTime)) <= event.endTime ? event.startTime + ((timeIndex + 1) * _calcBetweenTime) : event.endTime;\n                let currentTextIndex = Math.floor(_valueCalculator(event, nextTime, startText.length, endText.length - 1));\n\n                if (lastTextIndex + 1 < currentTextIndex)\n                {\n                    for (let extraTextIndex = lastTextIndex + 1; extraTextIndex < currentTextIndex; extraTextIndex++)\n                    {\n                        currentText.push(endText[extraTextIndex]);\n                    }\n                }\n                else if (lastTextIndex + 1 > currentTextIndex)\n                {\n                    currentText.length = currentTextIndex;\n                }\n\n                if (endText[currentTextIndex]) currentText.push(endText[currentTextIndex]);\n                if (result[result.length - 1] && result[result.length - 1].value == currentText.join(''))\n                {\n                    result[result.length - 1].endTime = nextTime;\n                    continue;\n                }\n\n                if (nextTime == event.endTime)\n                {\n                    result.push({\n                        startTime : currentTime,\n                        endTime   : nextTime,\n                        value     : event.end\n                    });\n\n                    break;\n                }\n\n                result.push({\n                    startTime : currentTime,\n                    endTime   : nextTime,\n                    value     : currentText.join(''),\n                });\n\n                lastTextIndex = currentTextIndex;\n            }\n        }\n        else\n        {\n            result.push({\n                startTime : event.startTime,\n                endTime   : event.endTime,\n                value     : event.start\n            });\n            result.push({\n                startTime : event.endTime,\n                endTime   : NaN,\n                value     : event.end\n            });\n        }\n    }\n    else\n    {\n        result.push({\n            startTime : event.startTime,\n            endTime   : event.endTime,\n            value     : event.start\n        });\n    }\n\n    return result;\n}\n\nfunction calculateColorEventEase(event)\n{\n    let timeBetween = event.endTime - event.startTime;\n    let result = [];\n\n    if (!event) return [];\n\n    if (\n        event.start[0] != event.end[0] ||\n        event.start[1] != event.end[1] ||\n        event.start[2] != event.end[2]\n    ) {\n        for (let timeIndex = 0, timeCount = Math.ceil(timeBetween / calcBetweenTime); timeIndex < timeCount; timeIndex++)\n        {\n            let currentTime = event.startTime + (timeIndex * calcBetweenTime);\n            let nextTime = (event.startTime + ((timeIndex + 1) * calcBetweenTime)) <= event.endTime ? event.startTime + ((timeIndex + 1) * calcBetweenTime) : event.endTime;\n\n            result.push({\n                startTime : currentTime,\n                endTime   : nextTime,\n                value     : (new Color([\n                    Math.round(_valueCalculator(event, nextTime, event.start[0], event.end[0])) / 255,\n                    Math.round(_valueCalculator(event, nextTime, event.start[1], event.end[1])) / 255,\n                    Math.round(_valueCalculator(event, nextTime, event.start[2], event.end[2])) / 255\n                ]).toArray())\n            });\n        }\n    }\n    else\n    {\n        result.push({\n            startTime : event.startTime,\n            endTime   : event.endTime,\n            value     : (new Color([\n                event.start[0] / 255,\n                event.start[1] / 255,\n                event.start[2] / 255\n            ]).toArray())\n        });\n    }\n\n    return result;\n}\n\nfunction calculateNoteControls(_noteControls, valueName = 'alpha', defaultValue = 1)\n{\n    if (!_noteControls || !(_noteControls instanceof Array) || _noteControls.length <= 0) return [];\n    if (\n        _noteControls.length == 2 &&\n        (_noteControls[0].x == 0 && _noteControls[1].x >= 10000) &&\n        (_noteControls[0][valueName] == defaultValue && _noteControls[1][valueName] == defaultValue)\n    ) { return [] };\n\n    let noteControls = _noteControls.slice().sort((a, b) => b.x - a.x);\n    let result = [];\n\n    for (let controlIndex = 0; controlIndex < noteControls.length; controlIndex++)\n    {\n        const control = noteControls[controlIndex];\n        const nextControl = noteControls[controlIndex + 1];\n\n        result = [ ...result, ...separateNoteControl(control, nextControl, valueName) ];\n    }\n\n    result = arrangeSameValueControls(result);\n    if (result[0].y < 10000) result.unshift({ _y: 9999999 / 900, y: 9999999, value: result[0].value });\n\n    return result;\n\n    function arrangeSameValueControls(controls)\n    {\n        let result = [];\n\n        for (const control of controls)\n        {\n            if (result.length > 0 && result[result.length - 1].value == control.value)\n            {\n                continue;\n            }\n\n            result.push(control);\n        }\n\n        return result.slice();\n    }\n\n    function separateNoteControl(control, nextControl = null, valueName = 'alpha')\n    {\n        let result = [];\n        let xBetween = control.x - (nextControl ? nextControl.x : 0);\n        let valueBetween = control[valueName] - (nextControl ? nextControl[valueName] : control[valueName]);\n        let easingFunc = Easing[control.easing - 1];\n        let currentX = control.x;\n\n        if (control[valueName] == (nextControl ? nextControl[valueName] : control[valueName]))\n        {\n            return [ { _y: control.x / 900, y: control.x, value: control[valueName] } ];\n        }\n\n        while (currentX > (nextControl ? nextControl.x : 0))\n        {\n            let currentPercent = (control.x - currentX) / xBetween;\n            let currentValue = parseFloat((control[valueName] - valueBetween * easingFunc(currentPercent)).toFixed(2));\n\n            if (result.length > 0 && parseFloat((result[result.length - 1].value).toFixed(2)) == currentValue)\n            {\n                result[result.length - 1]._y = currentX / 900;\n                result[result.length - 1].y = currentX;\n            }\n            else\n            {\n                result.push({\n                    _y    : currentX / 900,\n                    y     : currentX,\n                    value : currentValue\n                });\n            }\n\n            currentX -= 2;\n        }\n\n        if (result[result.length - 1].value != (nextControl ? nextControl[valueName] : control[valueName]))\n        {\n            result.push({\n                _y    : (nextControl ? nextControl.x : 0) / 900,\n                y     : (nextControl ? nextControl.x : 0),\n                value : (nextControl ? nextControl[valueName] : control[valueName])\n            });\n        }\n\n        return result;\n    }\n}\n\nfunction separateSpeedEvent(event)\n{\n    let result = [];\n    let timeBetween = event.endTime - event.startTime;\n\n    if (event.start != event.end)\n    {\n        for (let timeIndex = 0, timeCount = Math.ceil(timeBetween / calcBetweenTime); timeIndex < timeCount; timeIndex++)\n        {\n            let currentTime = event.startTime + (timeIndex * calcBetweenTime);\n            let nextTime = (event.startTime + ((timeIndex + 1) * calcBetweenTime)) <= event.endTime ? event.startTime + ((timeIndex + 1) * calcBetweenTime) : event.endTime;\n\n            result.push({\n                startTime : currentTime,\n                endTime   : nextTime,\n                value     : utils.valueCalculator(event, Easing, nextTime)\n            });\n        }\n    }\n    else\n    {\n        result.push({\n            startTime : event.startTime,\n            endTime   : event.endTime,\n            value     : event.start\n        });\n    }\n\n    return result;\n}\n\nfunction _valueCalculator(event, currentTime, startValue = 0, endValue = 1)\n{\n    if (startValue == endValue) return startValue;\n    if (event.startTime > currentTime) throw new Error('currentTime must bigger than startTime');\n    if (event.endTime < currentTime) throw new Error('currentTime must smaller than endTime');\n\n    let timePercentStart = (currentTime - event.startTime) / (event.endTime - event.startTime);\n    let timePercentEnd = 1 - timePercentStart;\n    let easeFunction = Easing[event.easingType - 1] ? Easing[event.easingType - 1] : Easing[0];\n    let easePercent = easeFunction(verifyNum(event.easingLeft, 0, 0, 1) * timePercentEnd + verifyNum(event.easingRight, 1, 0, 1) * timePercentStart);\n    let easePercentStart = easeFunction(verifyNum(event.easingLeft, 0, 0, 1));\n    let easePercentEnd = easeFunction(verifyNum(event.easingRight, 1, 0, 1));\n\n    easePercent = (easePercent - easePercentStart) / (easePercentEnd - easePercentStart);\n\n    return startValue * (1 - easePercent) + endValue * easePercent;\n}","import { number as verifyNum } from '@/verify';\nimport * as Convert from './convert';\nimport md5Hash from 'md5-js';\nimport { Sprite, Graphics, Text } from 'pixi.js';\n\nexport default class Chart\n{\n    constructor(params = {})\n    {\n        this.judgelines          = [];\n        this.notes               = [];\n        this.bpmList             = [];\n        this.offset              = verifyNum(params.offset, 0);\n        this.isLineTextureReaded = false;\n\n        this.music      = params.music ? params.music : null;\n        this.bg         = params.bg ? params.bg : null;\n\n        this.info       = {\n            name      : params.name,\n            artist    : params.artist,\n            author    : params.author,\n            bgAuthor  : params.bgAuthor,\n            difficult : params.difficult,\n            md5       : params.md5\n        };\n\n        this.sprites = {};\n    }\n\n    static from(rawChart, _chartInfo = {}, _chartLineTexture = [])\n    {\n        let chart;\n        let chartInfo = _chartInfo;\n        let chartMD5;\n\n        if (typeof rawChart == 'object')\n        {\n            if (!isNaN(Number(rawChart.formatVersion)))\n            {\n                chart = Convert.Official(rawChart);\n            }\n            else if (rawChart.META && !isNaN(Number(rawChart.META.RPEVersion)))\n            {\n                chart = Convert.RePhiEdit(rawChart);\n                chartInfo = chart.info;\n            }\n\n            try {\n                chartMD5 = md5Hash(JSON.stringify(rawChart));\n            } catch (e) {\n                console.warn('Failed to calculate chart MD5.');\n                console.error(e);\n                chartMD5 = null\n            }\n        }\n        else if (typeof rawChart == 'string')\n        {\n            chart = Convert.PhiEdit(rawChart);\n            try {\n                chartMD5 = md5Hash(rawChart);\n            } catch (e) {\n                console.warn('Failed to calculate chart MD5.');\n                console.error(e);\n                chartMD5 = null\n            }\n        }\n\n        if (!chart) throw new Error('Unsupported chart format');\n\n        chart.info = {\n            name      : chartInfo.name,\n            artist    : chartInfo.artist,\n            author    : chartInfo.author,\n            bgAuthor  : chartInfo.bgAuthor,\n            difficult : chartInfo.difficult,\n            md5       : chartMD5\n        };\n\n        chart.judgelines.forEach((judgeline) =>\n        {\n            judgeline.eventLayers.forEach((eventLayer) =>\n            {\n                /* eventLayer.speed = utils.arrangeSameSingleValueEvent(eventLayer.speed); */\n                eventLayer.moveX = arrangeLineEvents(eventLayer.moveX);\n                eventLayer.moveY = arrangeLineEvents(eventLayer.moveY);\n                eventLayer.rotate = arrangeLineEvents(eventLayer.rotate);\n                eventLayer.alpha = arrangeLineEvents(eventLayer.alpha);\n            });\n\n            for (const name in judgeline.extendEvent)\n            {\n                if (name !== 'color' && name !== 'text')\n                    judgeline.extendEvent[name] = arrangeLineEvents(judgeline.extendEvent[name]);\n                else\n                    judgeline.extendEvent[name] = arrangeSingleValueLineEvents(judgeline.extendEvent[name]);\n            }\n            \n            judgeline.sortEvent();\n        });\n\n        chart.readLineTextureInfo(_chartLineTexture);\n\n        chart.judgelines.sort((a, b) =>\n        {\n            if (a.parentLine && b.parentLine)\n            {\n                return a.parentLine.id - b.parentLine.id;\n            }\n            else if (a.parentLine)\n            {\n                return 1;\n            }\n            else if (b.parentLine)\n            {\n                return -1;\n            }\n            else\n            {\n                return a.id - b.id;\n            }\n        });\n\n        // console.log(chart);\n        return chart;\n    }\n\n    readLineTextureInfo(infos = [])\n    {\n        if (this.isLineTextureReaded) return;\n        if (infos.length <= 0) return;\n\n        let isReaded = false;\n\n        infos.forEach((lineInfo) =>\n        {\n            if (!this.judgelines[lineInfo.LineId]) return;\n\n            this.judgelines[lineInfo.LineId].texture = lineInfo.Image;\n            this.judgelines[lineInfo.LineId].useOfficialScale = true;\n            this.judgelines[lineInfo.LineId].scaleX = !isNaN(lineInfo.Horz) ? parseFloat(lineInfo.Horz) : 1;\n            this.judgelines[lineInfo.LineId].scaleY = !isNaN(lineInfo.Vert) ? parseFloat(lineInfo.Vert) : 1;\n\n            this.judgelines[lineInfo.LineId].extendEvent.scaleX.push({\n                startTime: 1 - 1000,\n                endTime: 1000,\n                start: this.judgelines[lineInfo.LineId].scaleX,\n                end: this.judgelines[lineInfo.LineId].scaleX\n            });\n\n            this.judgelines[lineInfo.LineId].extendEvent.scaleY.push({\n                startTime: 1 - 1000,\n                endTime: 1000,\n                start: this.judgelines[lineInfo.LineId].scaleY,\n                end: this.judgelines[lineInfo.LineId].scaleY\n            });\n\n            isReaded = true;\n        });\n\n        if (isReaded) this.isLineTextureReaded = true;\n    }\n\n    createSprites(stage, size, textures, uiStage = null, zipFiles = {}, speed = 1, bgDim = 0.5, multiNoteHL = true, debug = false)\n    {\n        let linesWithZIndex = [];\n\n        if (this.bg)\n        {\n            this.sprites.bg = new Sprite(this.bg);\n\n            let bgCover = new Graphics();\n\n            bgCover.beginFill(0x000000);\n            bgCover.drawRect(0, 0, this.sprites.bg.texture.width, this.sprites.bg.texture.height);\n            bgCover.endFill();\n\n            bgCover.position.x = -this.sprites.bg.width / 2;\n            bgCover.position.y = -this.sprites.bg.height / 2;\n            bgCover.alpha = bgDim;\n\n            this.sprites.bg.addChild(bgCover);\n            this.sprites.bg.anchor.set(0.5);\n            this.sprites.bg.cover = bgCover;\n\n            stage.addChild(this.sprites.bg);\n        }\n\n        this.judgelines.forEach((judgeline, index) =>\n        {\n            judgeline.createSprite(textures, zipFiles, debug);\n\n            judgeline.sprite.position.x = size.width / 2;\n            judgeline.sprite.position.y = size.height / 2;\n            judgeline.sprite.zIndex = 10 + index;\n\n            if (!isNaN(judgeline.zIndex)) linesWithZIndex.push(judgeline);\n\n            stage.addChild(judgeline.sprite);\n            if (judgeline.debugSprite)\n            {\n                judgeline.debugSprite.zIndex = 999 + judgeline.sprite.zIndex;\n                stage.addChild(judgeline.debugSprite);\n            }\n\n            if (judgeline.texture && judgeline.useOfficialScale)\n            {\n                let oldScaleY = judgeline.extendEvent.scaleY[0].start;\n\n                judgeline.extendEvent.scaleY[0].start = judgeline.extendEvent.scaleY[0].end = (1080 / judgeline.sprite.texture.height) * (oldScaleY * (oldScaleY < 0 ? -1 : 1));\n                judgeline.extendEvent.scaleX[0].start = judgeline.extendEvent.scaleX[0].end = judgeline.extendEvent.scaleY[0].start * judgeline.extendEvent.scaleX[0].start;\n\n                judgeline.useOfficialScale = false;\n            }\n        });\n\n        linesWithZIndex.sort((a, b) => a.zIndex - b.zIndex);\n        linesWithZIndex.forEach((judgeline, index) =>\n        {\n            judgeline.sprite.zIndex = 10 + this.judgelines.length + index;\n            if (judgeline.debugSprite) judgeline.debugSprite.zIndex = 999 + judgeline.sprite.zIndex;\n        });\n\n        this.notes.forEach((note, index) =>\n        {\n            note.createSprite(textures, zipFiles, multiNoteHL, debug);\n\n            note.sprite.zIndex = 10 + (this.judgelines.length + linesWithZIndex.length) + (note.type === 3 ? index : index + 10);\n\n            stage.addChild(note.sprite);\n            if (note.debugSprite)\n            {\n                note.debugSprite.zIndex = 999 + note.sprite.zIndex;\n                stage.addChild(note.debugSprite);\n            }\n        });\n\n        this.sprites.info = {};\n\n        this.sprites.info.songName = new Text((this.info.name || 'Untitled') + ((Math.round(speed * 100) !== 100) ? ' (x' + speed.toFixed(2) + ')' : ''), {\n            fontFamily: 'A-OTF Shin Go Pr6N H',\n            fill: 0xFFFFFF\n        });\n        this.sprites.info.songName.anchor.set(0, 1);\n        this.sprites.info.songName.zIndex = 99999;\n\n        if (uiStage) uiStage.addChild(this.sprites.info.songName);\n        else stage.addChild(this.sprites.info.songName);\n\n\n        this.sprites.info.songDiff = new Text((this.info.difficult || 'SP Lv.?'), {\n            fontFamily: 'MiSans',\n            fill: 0xFFFFFF\n        });\n        this.sprites.info.songDiff.anchor.set(0, 1);\n        this.sprites.info.songDiff.zIndex = 99999;\n\n        if (uiStage) uiStage.addChild(this.sprites.info.songDiff);\n        else stage.addChild(this.sprites.info.songDiff);\n    }\n\n    resizeSprites(size, isEnded)\n    {\n        this.renderSize = size;\n\n        if (this.sprites.bg)\n        {\n            let bgScaleWidth = this.renderSize.width / this.sprites.bg.texture.width;\n            let bgScaleHeight = this.renderSize.height / this.sprites.bg.texture.height;\n            let bgScale = bgScaleWidth > bgScaleHeight ? bgScaleWidth : bgScaleHeight;\n\n            this.sprites.bg.scale.set(bgScale);\n            this.sprites.bg.position.set(this.renderSize.width / 2, this.renderSize.height / 2);\n        }\n\n        if (this.judgelines && this.judgelines.length > 0)\n        {\n            this.judgelines.forEach((judgeline) =>\n            {\n                if (!judgeline.sprite) return;\n\n                if (judgeline.isText)\n                {\n                    judgeline.sprite.style.fontSize = 68 * this.renderSize.heightPercent;\n                    judgeline.baseScaleX = judgeline.baseScaleY = 1;\n                }\n                else if (judgeline.texture)\n                {\n                    judgeline.baseScaleX = judgeline.baseScaleY = this.renderSize.heightPercent;\n                }\n                else\n                {\n                    judgeline.baseScaleX = (4000 / judgeline.sprite.texture.width) * (this.renderSize.width / 1350);\n                    judgeline.baseScaleY = ((this.renderSize.lineScale * 18.75 * 0.008) / judgeline.sprite.texture.height);\n                }\n\n                judgeline.sprite.scale.set(judgeline.scaleX * judgeline.baseScaleX, judgeline.scaleY * judgeline.baseScaleY);\n\n                judgeline.sprite.position.x = judgeline.x * this.renderSize.width;\n                judgeline.sprite.position.y = judgeline.y * this.renderSize.height;\n\n                for (const name in judgeline.noteControls)\n                {\n                    for (const control of judgeline.noteControls[name])\n                    {\n                        control.y = control._y * size.height\n                    }\n                }\n\n                if (isEnded) judgeline.sprite.alpha = 0;\n                if (judgeline.debugSprite) judgeline.debugSprite.scale.set(this.renderSize.heightPercent);\n            });\n        }\n\n        if (this.notes && this.notes.length > 0)\n        {\n            this.notes.forEach((note) =>\n            {\n                if (note.type === 3)\n                {\n                    let holdLength = note.holdLength * (note.useOfficialSpeed ? 1 : note.speed) * this.renderSize.noteSpeed / this.renderSize.noteScale\n                    note.sprite.children[1].height = holdLength;\n                    note.sprite.children[2].position.y = -holdLength;\n                }\n\n                note.sprite.baseScale = this.renderSize.noteScale;\n                note.sprite.scale.set(this.renderSize.noteScale * note.xScale, this.renderSize.noteScale);\n                if (isEnded) note.sprite.alpha = 0;\n                if (note.debugSprite) note.debugSprite.scale.set(this.renderSize.heightPercent);\n            });\n        }\n\n        this.sprites.info.songName.style.fontSize = size.heightPercent * 27;\n        this.sprites.info.songName.position.x = size.heightPercent * 57;\n        this.sprites.info.songName.position.y = size.height - size.heightPercent * 66;\n\n        this.sprites.info.songDiff.style.fontSize = size.heightPercent * 20;\n        this.sprites.info.songDiff.position.x = size.heightPercent * 57;\n        this.sprites.info.songDiff.position.y = size.height - size.heightPercent * 42;\n    }\n\n    reset()\n    {\n        this.holdBetween = this.bpmList[0].holdBetween;\n\n        this.judgelines.forEach((judgeline) =>\n        {\n            judgeline.reset();\n        });\n        this.notes.forEach((note) =>\n        {\n            note.reset();\n        });\n    }\n\n    destroySprites()\n    {\n        this.judgelines.forEach((judgeline) =>\n        {\n            if (!judgeline.sprite) return;\n            judgeline.reset();\n            judgeline.sprite.destroy();\n            judgeline.sprite = undefined;\n\n            if (judgeline.debugSprite)\n            {\n                judgeline.debugSprite.destroy(true);\n                judgeline.debugSprite = undefined;\n            }\n        });\n        this.notes.forEach((note) =>\n        {\n            if (!note.sprite) return;\n            note.reset();\n            note.sprite.destroy();\n            note.sprite = undefined;\n\n            if (note.debugSprite)\n            {\n                note.debugSprite.destroy(true);\n                note.debugSprite = undefined;\n            }\n        });\n\n        if (this.sprites.bg)\n        {\n            this.sprites.bg.destroy();\n            this.sprites.bg = undefined;\n        }\n\n        this.sprites.info.songName.destroy();\n        this.sprites.info.songName = undefined;\n\n        this.sprites.info.songDiff.destroy();\n        this.sprites.info.songDiff = undefined;\n\n        this.sprites.info = undefined;\n    }\n\n    get totalNotes() {\n        return this.notes.length;\n    }\n\n    get totalRealNotes() {\n        let result = 0;\n        this.notes.forEach((note) => {\n            if (!note.isFake) result++;\n        });\n        return result;\n    }\n\n    get totalFakeNotes() {\n        let result = 0;\n        this.notes.forEach((note) => {\n            if (note.isFake) result++;\n        });\n        return result;\n    }\n}\n\n\nfunction arrangeLineEvents(events) {\n    let oldEvents = events.slice();\n    let newEvents2 = [];\n    let newEvents = [{ // 以 -99 开始\n        startTime : -99,\n        endTime   : 0,\n        start     : oldEvents[0] ? oldEvents[0].start : 0,\n        end       : oldEvents[0] ? oldEvents[0].start : 0\n    }];\n\n    if (events.length <= 0) return [];\n\n    oldEvents.push({ // 以 1000 结束\n        startTime : 0,\n        endTime   : 1e3,\n        start     : oldEvents[oldEvents.length - 1] ? oldEvents[oldEvents.length - 1].end : 0,\n        end       : oldEvents[oldEvents.length - 1] ? oldEvents[oldEvents.length - 1].end : 0\n    });\n    \n    // 保证时间连续性\n    for (let oldEvent of oldEvents) {\n        let lastNewEvent = newEvents[newEvents.length - 1];\n\n        if (oldEvent.endTime < oldEvent.startTime)\n        {\n            let newStartTime = oldEvent.endTime,\n                newEndTime = oldEvent.startTime;\n            \n                oldEvent.startTime = newStartTime;\n                oldEvent.endTime = newEndTime;\n        }\n\n        if (lastNewEvent.endTime < oldEvent.startTime)\n        {\n            newEvents.push({\n                startTime : lastNewEvent.endTime,\n                endTime   : oldEvent.startTime,\n                start     : lastNewEvent.end,\n                end       : lastNewEvent.end\n            }, oldEvent);\n        }\n        else if (lastNewEvent.endTime == oldEvent.startTime)\n        {\n            newEvents.push(oldEvent);\n        }\n        else if (lastNewEvent.endTime > oldEvent.startTime)\n        {\n            if (lastNewEvent.endTime < oldEvent.endTime)\n            {\n                newEvents.push({\n                    startTime : lastNewEvent.endTime,\n                    endTime   : oldEvent.endTime,\n                    start     : oldEvent.start + (oldEvent.end - oldEvent.start) * ((lastNewEvent.endTime - oldEvent.startTime) / (oldEvent.endTime - oldEvent.startTime)) + (lastNewEvent.end - oldEvent.start),\n                    end       : oldEvent.end\n                });\n            }\n        }\n    }\n    \n    // 合并相同变化率事件\n    newEvents2 = [ newEvents.shift() ];\n    for (let newEvent of newEvents)\n    {\n        let lastNewEvent2 = newEvents2[newEvents2.length - 1];\n        let duration1 = lastNewEvent2.endTime - lastNewEvent2.startTime;\n        let duration2 = newEvent.endTime - newEvent.startTime;\n        \n        if (newEvent.startTime == newEvent.endTime)\n        {\n            // 忽略此分支    \n        }\n        else if (\n            lastNewEvent2.end == newEvent.start &&\n            (lastNewEvent2.end - lastNewEvent2.start) * duration2 == (newEvent.end - newEvent.start) * duration1\n        ) {\n            newEvents2[newEvents2.length - 1].endTime = newEvent.endTime;\n            newEvents2[newEvents2.length - 1].end     = newEvent.end;\n        }\n        else\n        {\n            newEvents2.push(newEvent);\n        }\n    }\n    \n    return newEvents.slice();\n}\n\n\nfunction arrangeSingleValueLineEvents(events) {\n    let oldEvents = events.slice();\n    let newEvents = [ oldEvents.shift() ];\n\n    if (events.length <= 0) return [];\n\n    // 保证时间连续性\n    for (let oldEvent of oldEvents)\n    {\n        let lastNewEvent = newEvents[newEvents.length - 1];\n\n        if (oldEvent.endTime < oldEvent.startTime)\n        {\n            let newStartTime = oldEvent.endTime,\n                newEndTime = oldEvent.startTime;\n            \n                oldEvent.startTime = newStartTime;\n                oldEvent.endTime = newEndTime;\n        }\n\n        if (lastNewEvent.value == oldEvent.value)\n        {\n            lastNewEvent.endTime = oldEvent.endTime;\n        }\n        else if (lastNewEvent.endTime < oldEvent.startTime || lastNewEvent.endTime > oldEvent.startTime)\n        {\n            lastNewEvent.endTime = oldEvent.startTime;\n            newEvents.push(oldEvent);\n        }\n        else\n        {\n            newEvents.push(oldEvent);\n        }\n    }\n\n    return newEvents.slice();\n}\n","// Reference: https://github.com/bemusic/bemuse/blob/68e0d5213b56502b3f5812f1d28c8d7075762717/bemuse/src/sampling-master/index.js#L276\nexport default function unmuteAudio(ctx)\n{\n    const gain = ctx.createGain();\n    const osc = ctx.createOscillator();\n\n    osc.frequency.value = 440;\n\n    osc.start(ctx.currentTime + 0.1);\n    osc.stop(ctx.currentTime + 0.1);\n\n    gain.connect(ctx.destination);\n    gain.disconnect();\n\n    ctx.resume()\n        .catch((e) => {\n            console.info('[WAudio] Failed to resume AudioContext', e);\n        }\n    );\n}\n","import unmuteAudio from './unmute';\n\n// Reference: https://github.com/bemusic/bemuse/blob/68e0d5213b56502b3f5812f1d28c8d7075762717/bemuse/src/game/clock.js#L14\nexport default class Clock\n{\n    constructor(AudioContext)\n    {\n        unmuteAudio(AudioContext);\n\n        this.time = 0;\n\n        this._audioCtx = AudioContext;\n        this._offsets = [];\n        this._sum = 0;\n\n        this.update();\n    }\n\n    update()\n    {\n        const realTime = performance.now() / 1000;\n        const delta = realTime - this._audioCtx.currentTime;\n\n        this._offsets.push(delta);\n        this._sum += delta;\n\n        while (this._offsets.length > 60)\n        {\n            this._sum -= this._offsets.shift();\n        }\n\n        this.time = realTime - this._sum / this._offsets.length;\n    }\n}","import Clock from './clock';\r\nimport { number as verifyNum } from '@/verify';\r\n\r\n\r\n\r\nexport default class AudioTimer\r\n{\r\n    constructor(AudioContext, offset = 0, speed = 1)\r\n    {\r\n        this.startTime = NaN;\r\n        this.pausedTime = NaN;\r\n        this.status = 3;\r\n\r\n        this._clock = new Clock(AudioContext);\r\n        this._offset = verifyNum(offset) / 1000;\r\n        this._speed = verifyNum(speed);\r\n        this._lastSpeedChangedProgress = 0;\r\n    }\r\n\r\n    now()\r\n    {\r\n        return this._clock.time - this._offset;\r\n    }\r\n\r\n    start()\r\n    {\r\n        if (this.status === 2) this.startTime = this.now() - (this.pausedTime - this.startTime);\r\n        else this.startTime = this.now();\r\n        \r\n        this.status = 1;\r\n        this.pausedTime = NaN;\r\n    }\r\n\r\n    pause()\r\n    {\r\n        if (this.status === 1)\r\n        {\r\n            this.pausedTime = this.now();\r\n            this.status = 2;\r\n        }\r\n        else if (this.status === 2)\r\n        {\r\n            this.startTime = this.now() - (this.pausedTime - this.startTime);\r\n            this.pausedTime = NaN;\r\n            this.status = 1;\r\n        }\r\n    }\r\n\r\n    stop()\r\n    {\r\n        if (this.status === 3) return;\r\n\r\n        this.startTime = NaN;\r\n        this.pausedTime = NaN;\r\n        this._lastSpeedChangedProgress = 0;\r\n\r\n        this.status = 3;\r\n    }\r\n\r\n    seek(duration)\r\n    {\r\n        if (this.status === 3) return;\r\n        this.startTime -= duration;\r\n        if (isNaN(this.pausedTime) && this.now() - (this.startTime - this._lastSpeedChangedProgress) < 0) this.startTime = this.now();\r\n        else if (!isNaN(this.pausedTime) && this.startTime > this.pausedTime) this.startTime = this.pausedTime;\r\n    }\r\n\r\n    get speed()\r\n    {\r\n        return this._speed;\r\n    }\r\n\r\n    set speed(value)\r\n    {\r\n        if (this.status !== 3) this._lastSpeedChangedProgress += ((this.status === 1 ? this.now() : this.pausedTime) - this.startTime) * this._speed;\r\n        this.startTime = this.now();\r\n        if (this.status === 2) this.pausedTime = this.now();\r\n        this._speed = verifyNum(value);\r\n    }\r\n\r\n    get time()\r\n    {\r\n        this._clock.update();\r\n        return ((isNaN(this.pausedTime) ? this.now() - this.startTime : this.pausedTime - this.startTime) * this._speed + this._lastSpeedChangedProgress);\r\n    }\r\n\r\n    static get TimerDiff()\r\n    {\r\n        return AudioContextTimerDiff;\r\n    }\r\n}\r\n\r\n","import oggmentedAudioContext from 'oggmented';\r\nimport Mp3Parser from 'unify-mp3-timing';\r\nimport unmuteAudio from './unmute';\r\nimport AudioTimer from './timer';\r\nimport { number as verifyNum } from '@/verify';\r\n\r\nconst GlobalAudioCtxConfig = { latencyHint: 'interactive' };\r\nconst AudioCtx = window.AudioContext || window.webkitAudioContext;\r\nconst GlobalAudioCtx = (new Audio().canPlayType('audio/ogg') == '') ? new oggmentedAudioContext(GlobalAudioCtxConfig) : new AudioCtx(GlobalAudioCtxConfig);\r\nGlobalAudioCtx.addEventListener('statechange', () =>\r\n{\r\n    if (GlobalAudioCtx.state === 'running')\r\n    {\r\n        console.log('[WAudio] Resume AudioContext success');\r\n        \r\n        window.removeEventListener('mousedown', ResumeGlobalAudioContext);\r\n        window.removeEventListener('touchstart', ResumeGlobalAudioContext);\r\n    }\r\n});\r\n\r\n\r\nexport default class WAudio\r\n{\r\n    constructor(src, loop = false, offset = 0, volume = 1, speed = 1, onend = undefined)\r\n    {\r\n        this.source = src;\r\n        this.loop = loop;\r\n        this.onend = onend;\r\n        this._offset = verifyNum(offset, 0);\r\n        this._volume = verifyNum(volume, 1);\r\n        this._speed = verifyNum(speed, 1);\r\n        this._gain = GlobalAudioCtx.createGain();\r\n\r\n        this._gain.gain.value = this._volume;\r\n        this._gain.connect(GlobalAudioCtx.destination);\r\n    }\r\n\r\n    static from(src, loop)\r\n    {\r\n        return new Promise(async (res, rej) =>\r\n        {\r\n            try {\r\n                let { startOffset, buffer } = parseAudio(src); // Reference: https://github.com/111116/webosu/blob/b4c0ba419a6ba33d5b2e35d1d977b656befcac25/scripts/osu-audio.js#L107\r\n                let track = await GlobalAudioCtx.decodeAudioData(buffer || src);\r\n                if (!track) rej('Unsupported source type');\r\n                let audio = new WAudio(track, loop, startOffset);\r\n                res(audio);\r\n            } catch (e) {\r\n                rej(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    reset()\r\n    {\r\n        if (this._buffer)\r\n        {\r\n            this._buffer.onended = undefined;\r\n            this._buffer.stop();\r\n            this._buffer.disconnect();\r\n            this._buffer = null;\r\n        }\r\n\r\n        if (this._timer)\r\n        {\r\n            this._timer.stop();\r\n            this._timer = null;\r\n        }\r\n    }\r\n\r\n    play(withTimer = false)\r\n    {\r\n        if (withTimer && !this._timer) this._timer = new AudioTimer(GlobalAudioCtx, this._offset, this._speed);\r\n        this._buffer = GlobalAudioCtx.createBufferSource();\r\n        this._buffer.buffer = this.source;\r\n        this._buffer.loop = this.loop;\r\n        this._buffer.connect(this._gain);\r\n\r\n        this._gain.gain.value = this._volume;\r\n        this._buffer.playbackRate.value = this._speed;\r\n\r\n        if (this._timer)\r\n        {\r\n            this._timer.speed = this._speed;\r\n            this._buffer.start(0, (this._timer.status !== 3 && this._timer.time > 0 ? this._timer.time : 0));\r\n            this._timer.start(GlobalAudioCtx.currentTime);\r\n        }\r\n        else\r\n        {\r\n            this._buffer.start(0, 0);\r\n        }\r\n\r\n        this._buffer.onended = () =>\r\n        {\r\n            if (this._timer) this._timer.stop();\r\n            if (this.onend instanceof Function) this.onend();\r\n        };\r\n    }\r\n\r\n    pause()\r\n    {\r\n        if (this._timer) this._timer.pause();\r\n        if (!this._buffer) return;\r\n\r\n        this._buffer.onended = undefined;\r\n        this._buffer.stop();\r\n    }\r\n\r\n    stop()\r\n    {\r\n        this.pause();\r\n        if (this._timer) this._timer.stop();\r\n    }\r\n\r\n    seek(duration)\r\n    {\r\n        if (!this._timer) return;\r\n\r\n        let playedBeforeSeek = false;\r\n\r\n        if (this._timer.status === 3) return;\r\n        if (this._timer.status === 1)\r\n        {\r\n            playedBeforeSeek = true;\r\n            this._buffer.onended = undefined;\r\n            this._buffer.stop();\r\n        }\r\n\r\n        this._timer.seek(duration);\r\n        if (playedBeforeSeek) this.play();\r\n    }\r\n\r\n    get isPaused()\r\n    {\r\n        return this._timer.status === 2;\r\n    }\r\n\r\n    get isStoped()\r\n    {\r\n        return this._timer.status === 3;\r\n    }\r\n\r\n    get duration()\r\n    {\r\n        return this.source.duration;\r\n    }\r\n\r\n    get currentTime()\r\n    {\r\n        return this._timer ? this._timer.time : NaN;\r\n    }\r\n\r\n    get progress()\r\n    {\r\n        return this.currentTime / this.source.duration;\r\n    }\r\n\r\n    get volume()\r\n    {\r\n        return this._volume;\r\n    }\r\n\r\n    set volume(value)\r\n    {\r\n        this._volume = verifyNum(value, 1);\r\n        if (this._buffer) this._gain.gain.value = this._volume;\r\n    }\r\n\r\n    get speed()\r\n    {\r\n        return this._speed;\r\n    }\r\n\r\n    set speed(value)\r\n    {\r\n        this._speed = verifyNum(value, 1);\r\n        if (this._timer) this._timer.speed = this._speed;\r\n        if (this._buffer) this._buffer.playbackRate.value = this._speed;\r\n    }\r\n\r\n    static get AudioContext()\r\n    {\r\n        return GlobalAudioCtx;\r\n    }\r\n\r\n    static get globalLatency()\r\n    {\r\n        return (!isNaN(GlobalAudioCtx.baseLatency) ? GlobalAudioCtx.baseLatency : 0) + (!isNaN(GlobalAudioCtx.outputLatency) ? GlobalAudioCtx.outputLatency : 0);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction parseAudio(arrayBuffer)\r\n{\r\n    if (!detectIfIsMp3(arrayBuffer)) return { startOffset: 19 };\r\n\r\n    let mp3Tags = Mp3Parser.readTags(new DataView(arrayBuffer));\r\n\r\n    if (mp3Tags.length === 3 && mp3Tags[1]._section.type === 'Xing')\r\n    {\r\n        let uintArray = new Uint8Array(arrayBuffer.byteLength - mp3Tags[1]._section.byteLength);\r\n        let offsetAfterTag = mp3Tags[1]._section.offset + mp3Tags[1]._section.byteLength;\r\n\r\n        uintArray.set(new Uint8Array(arrayBuffer, 0, mp3Tags[1]._section.offset), 0);\r\n        uintArray.set(new Uint8Array(arrayBuffer, offsetAfterTag, arrayBuffer.byteLength - offsetAfterTag), mp3Tags[0]._section.offset);\r\n\r\n        return { startOffset: predictMp3Offset(mp3Tags), buffer: uintArray.buffer };\r\n    }\r\n\r\n    return { startOffset: predictMp3Offset(mp3Tags) };\r\n}\r\n\r\nfunction detectIfIsMp3(arrayBuffer)\r\n{\r\n    const Mp3FileHeads = [ [ 0x49, 0x44, 0x33 ], [ 0xFF, 0xFB, 0x50 ] ];\r\n    let uintArray = new Uint8Array(arrayBuffer);\r\n\r\n    for (const Mp3FileHead of Mp3FileHeads)\r\n    {\r\n        if (\r\n            uintArray[0] === Mp3FileHead[0] &&\r\n            uintArray[1] === Mp3FileHead[1] &&\r\n            uintArray[2] === Mp3FileHead[2]\r\n        ) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction predictMp3Offset(tags)\r\n{\r\n    const printWarn = (msg) => console.warn('Cannot predict MP3 offset:', msg);\r\n    const defaultOffset = 22;\r\n\r\n    if (!tags || !tags.length)\r\n    {\r\n        printWarn('MP3 tags not found');\r\n        return defaultOffset;\r\n    }\r\n\r\n    const frameTag = tags[tags.length-1];\r\n    let vbrTag;\r\n    let sampleRate;\r\n    \r\n    if (frameTag._section.sampleLength != 1152)\r\n    {\r\n        printWarn('Unexpected sample length');\r\n        return defaultOffset;\r\n    }\r\n\r\n    for (const tag of tags)\r\n    {\r\n        if (tag._section.type === 'Xing') vbrTag = tag;\r\n    }\r\n\r\n    if (!vbrTag) return defaultOffset;\r\n\r\n    if (!vbrTag.identifier)\r\n    {\r\n        printWarn('vbr tag identifier missing');\r\n        return defaultOffset;\r\n    }\r\n\r\n    if (!vbrTag.vbrinfo || vbrTag.vbrinfo.ENC_DELAY !== 576)\r\n    {\r\n        printWarn('vbr ENC_DELAY value unexpected');\r\n        return defaultOffset;\r\n    }\r\n\r\n    sampleRate = vbrTag.header.samplingRate;\r\n    if (sampleRate === 32000) return 89 - 1152000 / sampleRate;\r\n    if (sampleRate === 44100) return 68 - 1152000 / sampleRate;\r\n    if (sampleRate === 48000) return 68 - 1152000 / sampleRate;\r\n\r\n    printWarn('sampleRate unexpected');\r\n    return defaultOffset;\r\n}\r\n\r\n\r\nwindow.addEventListener('load', () =>\r\n{\r\n    if (GlobalAudioCtx.state !== 'running')\r\n    {\r\n        window.addEventListener('mousedown', ResumeGlobalAudioContext);\r\n        window.addEventListener('touchstart', ResumeGlobalAudioContext);\r\n    }\r\n\r\n    //ResumeGlobalAudioContext();\r\n});\r\n\r\nfunction ResumeGlobalAudioContext()\r\n{\r\n    console.log('[WAudio] Trying resume AudioContext...');\r\n    unmuteAudio(GlobalAudioCtx);\r\n}\r\n","import Effect from '../index'\nimport utils from '@/chart/convert/utils';\n\nconst Easing = [\n    (x) => x,\n    (x) => Math.sin((x * Math.PI) / 2),\n    (x) => 1 - Math.cos((x * Math.PI) / 2),\n    (x) => 1 - (1 - x) * (1 - x),\n    (x) => x * x,\n    (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n    (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n    (x) => 1 - Math.pow(1 - x, 3),\n    (x) => x * x * x,\n    (x) => 1 - Math.pow(1 - x, 4),\n    (x) => x * x * x * x,\n    (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n    (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n    (x) => 1 - Math.pow(1 - x, 5),\n    (x) => x * x * x * x * x,\n    (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n    (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n    (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n    (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n    (x) => 1 + 2.70158 * Math.pow(x - 1, 3) + 1.70158 * Math.pow(x - 1, 2),\n    (x) => 2.70158 * x * x * x - 1.70158 * x * x,\n    (x) => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n    (x) => x < 0.5 ? (Math.pow(2 * x, 2) * ((2.594910 + 1) * 2 * x - 2.594910)) / 2 : (Math.pow(2 * x - 2, 2) * ((2.594910 + 1) * (x * 2 - 2) + 2.594910) + 2) / 2,\n    (x) => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * ((2 * Math.PI) / 3)) + 1,\n    (x) => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * ((2 * Math.PI) / 3)),\n    (x) => x < 1 / 2.75 ? 7.5625 * x * x : x < 2 / 2.75 ? 7.5625 * (x -= 1.5 / 2.75) * x + 0.75 : x < 2.5 / 2.75 ? 7.5625 * (x -= 2.25 / 2.75) * x + 0.9375 : 7.5625 * (x -= 2.625 / 2.75) * x + 0.984375,\n    (x) => 1 - Easing[25](1 - x),\n    (x) => x < 0.5 ? (1 - Easing[25](1 - 2 * x)) / 2 : (1 + Easing[25](2 * x - 1)) / 2\n];\n\nexport default function PrprEffectReader(effect)\n{\n    let effectList = [];\n    let rawEffects = [ ...effect.effects ];\n    let bpmList = [ ...effect.bpm ];\n    \n    { // 将 Beat 计算为对应的时间（秒）\n        let currentBeatRealTime = 0.5; // 当前每个 Beat 的实际时长（秒）\n        let bpmChangedBeat = 0; // 当前 BPM 是在什么时候被更改的（Beat）\n        let bpmChangedTime = 0; // 当前 BPM 是在什么时候被更改的（秒）\n\n        bpmList.forEach((bpm, index) =>\n        {\n            bpm.endTime = bpmList[index + 1] ? bpmList[index + 1].time : [ 1e4, 0, 1 ];\n\n            bpm.startBeat = bpm.time[0] + bpm.time[1] / bpm.time[2];\n            bpm.endBeat = bpm.endTime[0] + bpm.endTime[1] / bpm.endTime[2];\n\n            bpmChangedTime += currentBeatRealTime * (bpm.startBeat - bpmChangedBeat);\n            bpm.startTime = bpmChangedTime;\n            bpm.endTime = currentBeatRealTime * (bpm.endBeat - bpmChangedBeat);\n\n            bpmChangedBeat += (bpm.beat - bpmChangedBeat);\n\n            currentBeatRealTime = 60 / bpm.bpm;\n            bpm.beatTime = 60 / bpm.bpm;\n        });\n\n        bpmList.sort((a, b) => b.beat - a.beat);\n    }\n\n    if (bpmList.length <= 0)\n    {\n        bpmList.push({\n            startBeat : 0,\n            endBeat   : 1e4,\n            startTime : 0,\n            endTime   : 1e6 - 1,\n            bpm       : 120,\n            beatTime  : 0.5 \n        });\n    }\n\n    utils.calculateRealTime(bpmList, calculateEffectsBeat(rawEffects))\n        .forEach((_effect) =>\n        {\n            let effect = new Effect({\n                startTime: _effect.startTime,\n                endTime: _effect.endTime,\n                shader: _effect.shader,\n                isGlobal: _effect.global || false,\n                vars: {},\n            });\n\n            for (const name in _effect.vars)\n            {\n                let _values = _effect.vars[name];\n\n                if (_values instanceof Array)\n                {\n                    let _timedValues = [];\n                    let values = [];\n\n                    utils.calculateEventsBeat(_values)\n                        .sort((a, b) => a.startTime - b.startTime || b.endTime - a.startTime)\n                        .forEach((_value, index, arr) =>\n                        {\n                            let prevValue = arr[index - 1];\n\n                            if (!prevValue) _timedValues.push(_value);\n                            else if (_value.startTime == prevValue.startTime)\n                            {\n                                if (_value.endTime >= prevValue.endTime) _timedValues[_timedValues.length - 1] =  _value;\n                            }\n                            else _timedValues.push(_value);\n                        }\n                    );\n\n                    for (const _value of _timedValues)\n                    {\n                        values.push(...utils.calculateRealTime(bpmList, utils.calculateEventEase(_value, Easing)));\n                    }\n                    values.sort((a, b) => a.startTime - b.startTime || b.endTime - a.startTime);\n                    effect.vars[name] = values;\n                }\n                else\n                {\n                    effect.vars[name] = _values;\n                }\n            }\n\n            effectList.push(effect);\n        }\n    );\n\n    effectList.sort((a, b) => a.startTime  - b.startTime);\n\n    return effectList;\n}\n\n\n\nfunction calculateEffectBeat(effect)\n{\n    effect.startTime = parseFloat((effect.start[0] + (effect.start[1] / effect.start[2])).toFixed(3));\n    effect.endTime = parseFloat((effect.end[0] + (effect.end[1] / effect.end[2])).toFixed(3));\n    return effect;\n}\n\nfunction calculateEffectsBeat(effects)\n{\n    effects.forEach((effect) =>\n    {\n        effect = calculateEffectBeat(effect);\n    });\n    return effects;\n}","import { bool as verifyBool } from '@/verify';\nimport * as Reader from './reader';\n\n\nexport default class Effect\n{\n    constructor(params)\n    {\n        this.shader = params.shader;\n        this.startTime = params.startTime;\n        this.endTime = params.endTime;\n        this.isGlobal = verifyBool(params.isGlobal, false);\n        this.vars = {};\n\n        this.reset();\n    }\n\n    reset()\n    {\n        this._currentValue = (this.shader !== null && typeof this.shader !== 'string') ? this.shader.defaultValues : {};\n    }\n\n    static from(json)\n    {\n        let result;\n\n        if (typeof json === 'object')\n        {\n            result = Reader.PrprEffectReader(json);\n        }\n        \n        if (!result || result.length <= 0)\n        {\n            throw new Error('Unsupported file format');\n        }\n\n        return result;\n    }\n    \n    calcTime(currentTime, screenSize)\n    {\n        if (this.shader === null) return;\n\n        const { vars, shader, _currentValue } = this;\n\n        for (const name in vars)\n        {\n            const values = vars[name];\n            if (typeof values === 'object') _currentValue[name] = valueCalculator(values, currentTime, shader.defaultValues[name]);\n            else _currentValue[name] = values;\n        }\n\n        shader.update({ ..._currentValue, time: currentTime, screenSize: screenSize });\n    }\n}\n\nfunction valueCalculator(values, currentTime, defaultValue)\n{\n    for (let i = 0, length = values.length; i < length; i++)\n    {\n        const value = values[i];\n        if (value.endTime < currentTime) continue;\n        if (value.startTime > currentTime) break;\n        if (value.start === value.end) return value.start;\n\n        let timePercentEnd = (currentTime - value.startTime) / (value.endTime - value.startTime);\n        let timePercentStart = 1 - timePercentEnd;\n\n        return value.start * timePercentStart + value.end * timePercentEnd;\n    }\n\n    return defaultValue;\n}\n\n// The thing that needs to be done:\n// 1. Calculate values in ./game/ticker (Now pre-calced)\n// 2. Integrate effects into the chart (./chart/index)\n// 3. Update uniforms in ./game/index\n// If there's anything left that's probably bugfixing.\n\n// Effects should act on Game rather than Chart since\n// the filter is loaded by Game and effected on Containers\n\n// I guess now it's all done","export default \"#version 100\\n// Adapted from https://godotshaders.com/shader/chromatic-abberation/\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform sampler2D screenTexture;\\n\\nuniform float sampleCount; // %3% int 1..64\\nuniform float power; // %0.01%\\n\\nvec3 chromatic_slice(float t) {\\n  vec3 res = vec3(1.0 - t, 1.0 - abs(t - 1.0), t - 1.0);\\n  return max(res, 0.0);\\n}\\n\\nvoid main() {\\n  vec3 sum = vec3(0.0);\\n  vec3 c = vec3(0.0);\\n  vec2 offset = (uv - vec2(0.5)) * vec2(1, -1);\\n  int sample_count = int(sampleCount);\\n  for (int i = 0; i < 64; ++i) {\\n    if (i >= sample_count) break;\\n    float t = 2.0 * float(i) / float(sample_count - 1); // range 0.0->2.0\\n    vec3 slice = vec3(1.0 - t, 1.0 - abs(t - 1.0), t - 1.0);\\n    slice = max(slice, 0.0);\\n    sum += slice;\\n    vec2 slice_offset = (t - 1.0) * power * offset;\\n    c += slice * texture2D(screenTexture, uv + slice_offset).rgb;\\n  }\\n  gl_FragColor.rgb = c / sum;\\n}\\n\"","export default \"#version 100\\n// Adapted from https://godotshaders.com/shader/artsy-circle-blur-type-thingy/\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform vec2 screenSize;\\nuniform sampler2D screenTexture;\\n\\nuniform float size; // %10.0%\\n\\nvoid main() {\\n  vec4 c = texture2D(screenTexture, uv);\\n  float length = dot(c, c);\\n  vec2 pixel_size = 1.0 / screenSize;\\n  for (float x = -size; x < size; x++) {\\n    for (float y = -size; y < size; ++y) {\\n      if (x * x + y * y > size * size) continue;\\n      vec4 new_c = texture2D(screenTexture, uv + pixel_size * vec2(x, y));\\n      float new_length = dot(new_c, new_c);\\n      if (new_length > length) {\\n        length = new_length;\\n        c = new_c;\\n      }\\n    }\\n  }\\n  gl_FragColor = c;\\n}\\n\"","export default \"#version 100\\n// Adapted from https://www.shadertoy.com/view/4s2GRR\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform vec2 screenSize;\\nuniform sampler2D screenTexture;\\n\\nuniform float power; // %-0.1%\\n\\nvoid main() {\\n  vec2 p = vec2(uv.x, uv.y * screenSize.y / screenSize.x);\\n  float aspect = screenSize.x / screenSize.y;\\n  vec2 m = vec2(0.5, 0.5 / aspect);\\n  vec2 d = p - m;\\n  float r = sqrt(dot(d, d));\\n\\n  float new_power = (2.0 * 3.141592 / (2.0 * sqrt(dot(m, m)))) * power;\\n\\n  float bind = new_power > 0.0? sqrt(dot(m, m)): (aspect < 1.0? m.x: m.y);\\n\\n  vec2 nuv;\\n  if (new_power > 0.0)\\n    nuv = m + normalize(d) * tan(r * new_power) * bind / tan(bind * new_power);\\n  else\\n    nuv = m + normalize(d) * atan(r * -new_power * 10.0) * bind / atan(-new_power * bind * 10.0);\\n\\n  gl_FragColor = texture2D(screenTexture, vec2(nuv.x, nuv.y * aspect));\\n}\\n\"","export default \"#version 100\\n// Adapted from https://godotshaders.com/shader/glitch-effect-shader/\\nprecision highp float;\\n\\nvarying lowp vec2 uv;\\nuniform sampler2D screenTexture;\\nuniform float time;\\n\\nuniform float power; // %0.03%\\nuniform float rate; // %0.6% 0..1\\nuniform float speed; // %5.0%\\nuniform float blockCount; // %30.5%\\nuniform float colorRate; // %0.01% 0..1\\n\\nfloat my_trunc(float x) {\\n  return x < 0.0? -floor(-x): floor(x);\\n}\\n\\nfloat random(float seed) {\\n  return fract(543.2543 * sin(dot(vec2(seed, seed), vec2(3525.46, -54.3415))));\\n}\\n\\nvoid main() {\\n  float enable_shift = float(random(my_trunc(time * speed)) < rate);\\n\\n  vec2 fixed_uv = uv;\\n  fixed_uv.x += (random((my_trunc(uv.y * blockCount) / blockCount) + time) - 0.5) * power * enable_shift;\\n\\n  vec4 pixel_color = texture2D(screenTexture, fixed_uv);\\n  pixel_color.r = mix(\\n    pixel_color.r,\\n    texture2D(screenTexture, fixed_uv + vec2(colorRate, 0.0)).r,\\n    enable_shift\\n  );\\n  pixel_color.b = mix(\\n    pixel_color.b,\\n    texture2D(screenTexture, fixed_uv + vec2(-colorRate, 0.0)).b,\\n    enable_shift\\n  );\\n  gl_FragColor = pixel_color;\\n}\\n\"","export default \"# version 100\\n// Adapted from https://www.shadertoy.com/view/lsdXDH\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform sampler2D screenTexture;\\n\\nuniform float factor; // %1.0% 0..1\\n\\nvoid main() {\\n  vec3 color = texture2D(screenTexture, uv).xyz;\\n  vec3 lum = vec3(0.299, 0.587, 0.114);\\n  vec3 gray = vec3(dot(lum, color));\\n  gl_FragColor = vec4(mix(color, gray, factor), 1.0);\\n}\\n\"","export default \"#version 100\\n// Adapted from https://godotshaders.com/shader/screen-noise-effect-shader/\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform sampler2D screenTexture;\\n\\nuniform float seed; // %81.0%\\nuniform float power; // %0.03% 0..1\\n\\nvec2 random(vec2 pos) {\\n  return fract(sin(vec2(dot(pos, vec2(12.9898,78.233)), dot(pos, vec2(-148.998,-65.233)))) * 43758.5453);\\n}\\n\\nvoid main() {\\n  vec2 new_uv = uv + (random(uv + vec2(seed, 0.0)) - vec2(0.5, 0.5)) * power;\\n  gl_FragColor = texture2D(screenTexture, new_uv);\\n}\\n\"","export default \"// #version 100\\n// Adapted from https://godotshaders.com/shader/pixelate-2/\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform vec2 screenSize;\\nuniform sampler2D screenTexture;\\n\\nuniform float size; // %10.0%\\n\\nvoid main() {\\n  vec2 factor = screenSize / size;\\n  float x = floor(uv.x * factor.x + 0.5) / factor.x;\\n  float y = floor(uv.y * factor.y + 0.5) / factor.y;\\n  gl_FragColor = texture2D(screenTexture, vec2(x, y));\\n}\"","export default \"#version 100\\n// Adapted from https://godotshaders.com/shader/radical-blur-shader/\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform sampler2D screenTexture;\\n\\nuniform float centerX; // %0.5% 0..1\\nuniform float centerY; // %0.5% 0..1\\nuniform float power; // %0.01% 0..1\\nuniform float sampleCount; // %6% int 1..64\\n\\nvoid main() {\\n  vec2 direction = uv - vec2(centerX, centerY);\\n  vec3 c = vec3(0.0);\\n  float f = 1.0 / sampleCount;\\n  vec2 screen_uv = uv / 2.0 + vec2(0.5, 0.5);\\n  for (float i = 0.0; i < 64.0; ++i) {\\n    if (i >= sampleCount) break;\\n    c += texture2D(screenTexture, uv - power * direction * i).rgb * f;\\n  }\\n  gl_FragColor.rgb = c;\\n}\\n\"","export default \"#version 100\\n// Adapted from https://www.shadertoy.com/view/llj3Dz\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform vec2 screenSize;\\nuniform sampler2D screenTexture;\\n\\nuniform float progress; // %0.2% 0..1\\nuniform float centerX; // %0.5% 0..1\\nuniform float centerY; // %0.5% 0..1\\nuniform float width; // %0.1%\\nuniform float distortion; // %0.8%\\nuniform float expand; // %10.0%\\n\\nvoid main() {\\n  float aspect = screenSize.y / screenSize.x;\\n\\n  vec2 center = vec2(centerX, centerY);\\n  center.y = (center.y - 0.5) * aspect + 0.5;\\n\\n  vec2 tex_coord = uv;\\n    tex_coord.y = (tex_coord.y - 0.5) * aspect + 0.5;\\n  float dist = distance(tex_coord, center);\\n\\n  if (progress - width <= dist && dist <= progress + width) {\\n    float diff = dist - progress;\\n    float scale_diff = 1.0 - pow(abs(diff * expand), distortion);\\n    float dt = diff * scale_diff;\\n\\n    vec2 dir = normalize(tex_coord - center);\\n\\n    tex_coord += ((dir * dt) / (progress * dist * 40.0));\\n    gl_FragColor = texture2D(screenTexture, vec2(tex_coord.x, (tex_coord.y - 0.5) / aspect + 0.5));\\n\\n    gl_FragColor += (gl_FragColor * scale_diff) / (progress * dist * 40.0);\\n  } else {\\n    gl_FragColor = texture2D(screenTexture, vec2(tex_coord.x, (tex_coord.y - 0.5) / aspect + 0.5));\\n  }\\n}\"","export default \"#version 100\\n// Adapted from https://www.shadertoy.com/view/lsKSWR\\nprecision mediump float;\\n\\nvarying lowp vec2 uv;\\nuniform vec2 screenSize;\\nuniform sampler2D screenTexture;\\n\\nuniform vec4 color; // %0.0, 0.0, 0.0, 1.0%\\nuniform float extend; // %0.25% 0..1\\nuniform float radius; // %15.0%\\n\\nvoid main() {\\n  vec2 new_uv = uv * (1.0 - uv.yx);\\n  float vig = new_uv.x * new_uv.y * radius;\\n  vig = pow(vig, extend);\\n  gl_FragColor = mix(color, texture2D(screenTexture, uv), vig);\\n}\\n\"","import * as presets from './presets';\nimport { Filter } from 'pixi.js';\n\nconst defaultValueReg = /uniform\\s+(\\w+)\\s+(\\w+);\\s+\\/\\/\\s+%([^%]+)%/g;\n\nexport default class Shader extends Filter {\n    constructor(_shaderText, name)\n    {\n        const shaderText = \"// \" + _shaderText.replaceAll('uv', 'vTextureCoord').replaceAll('screenTexture', 'uSampler');\n        const defaultValues = {};\n        let uniforms = {\n            time: 0,\n            screenSize: [ 0, 0 ],\n            UVScale: [ 0, 0 ]\n        };\n        \n        [ ...shaderText.matchAll(defaultValueReg) ].map((uniform) =>\n            {\n                const type = uniform[1];\n                const name = uniform[2];\n                const value = uniform[3];\n\n                switch (type)\n                {\n                    case 'float':\n                    {\n                        defaultValues[name] = parseFloat(value);\n                        break;\n                    }\n                    case 'vec2':\n                    case 'vec4':\n                    {\n                        defaultValues[name] = value.split(',').map(v => parseFloat(v.trim()));\n                        break;\n                    }\n                    default:\n                    {\n                        throw Error('Unknown type: ' + typeName);\n                    }\n                }\n            }\n        );\n\n        uniforms = { ...defaultValues, ...uniforms };\n        super(null, shaderText, uniforms);\n\n        for (const name in uniforms) this.uniforms[name] = uniforms[name];\n        this.defaultValues = defaultValues;\n\n        this.name = name;\n    }\n\n    static from(shaderText, name)\n    {\n        const canvas = document.createElement('canvas');\n        const gl = canvas.getContext('webgl');\n\n        if (!gl) throw 'Your browser doesn\\'t support WebGL.';\n\n        // Clear canvas\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        // Init shader\n        const shader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(shader, shaderText);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            throw `An error occurred compiling the shaders.\\n${gl.getShaderInfoLog(shader)}`;\n        }\n\n        return new Shader(shaderText, name);\n    }\n    \n    static get presets()\n    {\n        return presets;\n    }\n\n    update(uniforms) {\n        for (const name in uniforms) this.uniforms[name] = uniforms[name];\n    }\n}","import { text as verifyText } from '@/verify';\nimport { loadChartFiles } from '../index';\n\nconst doms = {\n    linkInput: document.querySelector('input#phizone-chart-link'),\n    chartDownload: document.querySelector('button#phizone-download-chart'),\n    downloadProgress: document.querySelector('div#phizone-download-progress')\n};\n\nconst PhiZoneLinkReg = /^https:\\/\\/[\\d\\w]+\\.phi\\.zone\\/charts\\/(\\d+)/;\n\ndoms.linkInput.addEventListener('keydown', (e) =>\n{\n    if (e.key === 'Enter') doms.chartDownload.dispatchEvent(new Event('click'));\n});\n\ndoms.chartDownload.addEventListener('click', () =>\n{\n    let downloadId = doms.linkInput.value;\n\n    if (!downloadId || downloadId == '')\n    {\n        alert('Please enter a chart link/ID!');\n        doms.linkInput.focus();\n        return;\n    }\n\n    if (PhiZoneLinkReg.test(downloadId))\n    {\n        downloadId = parseInt(PhiZoneLinkReg.exec(downloadId)[1]);\n    }\n    else downloadId = parseInt(downloadId);\n\n    if (isNaN(downloadId) || downloadId <= 0)\n    {\n        alert('Please enter a valid chart link/ID!');\n        doms.linkInput.focus();\n        return;\n    }\n\n    doms.downloadProgress.innerText = 'Getting chart info...';\n\n    fetch('https://api.phi.zone/charts/' + downloadId + '/?query_song=1&query_owner=1')\n        .then(res => res.json())\n        .then(res =>\n        {\n            let resUrls = {};\n            let infos = {};\n\n            if (res.id !== downloadId)\n            {\n                doms.downloadProgress.innerText = 'Cannot get chart info: ' + res.detail;\n                return;\n            }\n            \n            if (!verifyText(res.chart, null) || !res.song || !verifyText(res.song.illustration, null) || !verifyText(res.song.song, null))\n            {\n                doms.downloadProgress.innerText = 'Cannot get chart info: server didn\\'t provide any link';\n                return;\n            }\n\n            resUrls = {\n                chart: res.chart,\n                song: res.song.song,\n                illustration: res.song.illustration\n            };\n\n            infos = {\n                name      : res.song.name,\n                artist    : res.song.composer,\n                author    : res.charter.replace(/\\[PZUser:\\d+:(.+)\\]/, '\\$1'),\n                bgAuthor  : res.song.illustrator,\n                difficult : 'Lv.' + res.level + ' ' + Math.floor(res.difficulty)\n            };\n\n            downloadFiles(resUrls, infos);\n        }\n    );\n});\n\n\nasync function downloadFiles(urls, infos)\n{\n    let fileName = {\n        chart: urls.chart.split('/'),\n        song: urls.song.split('/'),\n        bg: urls.illustration.split('/')\n    };\n\n    fileName.chart = decodeURIComponent(fileName.chart[fileName.chart.length - 1]);\n    fileName.song = decodeURIComponent(fileName.song[fileName.song.length - 1]);\n    fileName.bg = decodeURIComponent(fileName.bg[fileName.bg.length - 1]);\n\n    let settingsFile = `Name: ${infos.name}\\r\\n` +\n        `Level: ${infos.difficult}\\r\\n` +\n        `Charter: ${infos.author}\\r\\n` +\n        `Chart: ${fileName.chart}\\r\\n` +\n        `Song: ${fileName.song}\\r\\n` +\n        `Picture: ${fileName.bg}`;\n\n    let chart = await downloadFile(urls.chart, (progress) => { doms.downloadProgress.innerText = 'Downloading chart (' + Math.floor(progress * 100) + '%)'; });\n    let song = await downloadFile(urls.song, (progress) => { doms.downloadProgress.innerText = 'Downloading song (' + Math.floor(progress * 100) + '%)'; });\n    let bg = await downloadFile(urls.illustration, (progress) => { doms.downloadProgress.innerText = 'Downloading bg (' + Math.floor(progress * 100) + '%)'; });\n\n    doms.downloadProgress.innerText = 'All files are downloaded, head to \\'File\\' to select chart.';\n\n    loadChartFiles([\n        new File([chart], fileName.chart, { type: chart.type, lastModified: Date.now() }),\n        new File([song], fileName.song, { type: song.type, lastModified: Date.now() }),\n        new File([bg], fileName.bg, { type: bg.type, lastModified: Date.now() }),\n        new File([new Blob([settingsFile])], 'Settings.txt', { type: 'text/plain', lastModified: Date.now() })\n    ]);\n\n    function downloadFile(url, onProgressChange)\n    {\n        return new Promise((res, rej) =>\n        {\n            let xhr = new XMLHttpRequest();\n\n            xhr.responseType = 'blob';\n\n            xhr.onreadystatechange = () =>\n            {\n                if (xhr.readyState === 4)\n                {\n                    if (xhr.status === 200)\n                    {\n                        res(xhr.response);\n                    }\n                }\n            };\n\n            xhr.onprogress = (e) =>\n            {\n                if (typeof onProgressChange === 'function')\n                {\n                    onProgressChange(e.loaded / e.total);\n                }\n            };\n\n            xhr.onerror = (e) => { rej(e) };\n\n            xhr.open('GET', url);\n            xhr.send();\n        });\n    }\n}","import * as PhiChartRender from './main';\nimport FontFaceObserver from 'fontfaceobserver';\nimport JSZip from 'jszip';\nimport {\n    Texture,\n    Rectangle\n} from 'pixi.js';\nimport {\n    canvasRGB as StackBlur\n} from 'stackblur-canvas';\nimport Pica from 'pica';\nimport './phizone';\n\n\n\nconst qs = (selector) => document.querySelector(selector);\n\nconst fonts = {\n    'MiSans': new FontFaceObserver('MiSans'),\n    'A-OTF Shin Go Pr6N H': new FontFaceObserver('A-OTF Shin Go Pr6N H')\n}\n\nfunction toggleSkipConfigElements(show) {\n    const fileSelect = document.querySelector('.file-select');\n    const children = fileSelect.children;\n\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (!child.classList.contains('none-hide')) {\n            if (show) {\n                child.classList.remove('skip-config-hide');\n            } else {\n                child.classList.add('skip-config-hide');\n            }\n        }\n    }\n}\n\nfunction getSearchString(name) {\n    let searchString = window.location.search.substring(1, window.location.search.length);\n    let searchStrings = searchString.split('&');\n\n    if (!name || name == '') return null;\n    if (searchStrings.length <= 0) return null;\n\n    for (const singleString of searchStrings) {\n        if (singleString.indexOf(name + '=') >= 0) {\n            let stringValue = singleString.replace(name + '=', '');\n            return decodeURIComponent(stringValue);\n        }\n    }\n    return null;\n}\n\nconst doms = {\n    fileSelect: document.querySelector('div.file-select'),\n    chartPackFile: document.querySelector('input#file-chart-pack'),\n    chartPackFileReadProgress: document.querySelector('div#file-read-progress'),\n    skinPackFile: document.querySelector('input#file-skin-pack'),\n    skinPackFileReadProgress: document.querySelector('div#loading-skin-pack'),\n\n    file: {\n        chart: document.querySelector('select#file-chart'),\n        music: document.querySelector('select#file-music'),\n        bg: document.querySelector('select#file-bg')\n    },\n    settings: {\n        showBG: document.querySelector('input#settings-show-bg'),\n        multiNoteHL: document.querySelector('input#settings-multi-note-hl'),\n        showAPStatus: document.querySelector('input#settings-show-ap-status'),\n        showInputPoint: document.querySelector('input#settings-show-input-point'),\n        noteScale: document.querySelector('input#settings-note-scale'),\n        bgDim: document.querySelector('input#settings-bg-dim'),\n        bgBlur: document.querySelector('input#settings-bg-blur'),\n        bgQuality: document.querySelector('select#settings-bg-quality'),\n\n        offset: document.querySelector('input#settings-audio-offset'),\n        useBrowserLatency: document.querySelector('input#settings-use-browser-latency'),\n        testInputDelay: document.querySelector('button#settings-test-input-delay'),\n        speed: document.querySelector('input#settings-audio-speed'),\n\n        hitsound: document.querySelector('input#settings-hitsound'),\n        hitsoundVolume: document.querySelector('input#settings-hitsound-volume'),\n\n        challengeMode: document.querySelector('input#settings-challenge-mode'),\n        plyndb: document.querySelector('input#settings-plyndb'),\n        autoPlay: document.querySelector('input#settings-autoplay'),\n        antiAlias: document.querySelector('input#settings-anti-alias'),\n        lowResolution: document.querySelector('input#settings-low-resolution'),\n        debug: document.querySelector('input#settings-debug'),\n        prprExtra: document.querySelector('input#settings-prpr-extra')\n    },\n    startBtn: document.querySelector('button#start'),\n    loadingStatus: document.querySelector('div#loading-status'),\n    fullscreenBtn: document.querySelector('button#fullscreen'),\n\n    playResult: {\n        container: document.querySelector('div.play-result'),\n        scoreBar: document.querySelector('div.play-result .info-bar.score'),\n        accBar: document.querySelector('div.play-result .info-bar.acc-bar'),\n    },\n\n    errorWindow: {\n        window: document.querySelector('div.error-window'),\n        closeBtn: document.querySelector('div.error-window button.close'),\n        content: document.querySelector('div.error-window code.content'),\n    },\n    progressContainer: document.querySelector('#progress-container'),\n    progressTemplate: document.querySelector('#progress-template'),\n    progressTotal: document.querySelector('#progress-total'),\n    progressdetail: document.querySelector('#progress-details')\n};\n\nconst files = {\n    charts: {},\n    musics: {},\n    images: {},\n    infos: [],\n    lines: [],\n    shaders: {},\n    all: {}\n};\n\nconst currentFile = {\n    chart: null,\n    music: null,\n    bg: null\n};\n\nconst assets = {\n    textures: {},\n    sounds: {}\n};\n\nvar GlobalGame;\n\nif (import.meta.env.MODE === 'development') {\n    window.qs = qs;\n    window.doms = doms;\n    window.files = files;\n    window.assets = assets;\n    window.currentFile = currentFile;\n}\n// 在资源加载前创建进度条容器\nif (!doms.progressContainer) {\n    const container = document.createElement('div');\n    container.id = 'progress-container';\n    container.style.cssText = `\n        position: fixed;\n        top: 10px;\n        right: 10px;\n        width: 300px;\n        max-height: 80vh;\n        overflow-y: auto;\n        background: rgba(0,0,0,0.7);\n        color: white;\n        padding: 10px;\n        z-index: 1000;\n        border-radius: 5px;\n        display: none;\n    `;\n    document.body.appendChild(container);\n    doms.progressContainer = container;\n}\n\n// 进度跟踪器类\nclass ProgressTracker {\n    constructor() {\n        this.trackers = {};\n        this.container = doms.progressContainer;\n        this.template = doms.progressTemplate;\n        this.detail = doms.progressdetail;\n        this.total = {\n            element: doms.progressTotal,\n            lastLoaded: 0,\n            lastTime: Date.now(),\n            speed: 0\n        };\n        this.totaldata = 0;\n        this.loaddata = 0;\n    }\n\n    addFile(name, url) {\n        const element = this.template.cloneNode(true);\n        const wrapper = document.createElement('div');\n        wrapper.appendChild(element);\n        const progressElement = wrapper.firstElementChild;\n        progressElement.id = `progress-${name}`;\n\n        progressElement.querySelector('.file-name').textContent = name;\n        progressElement.querySelector('.loaded').textContent = '0B';\n        progressElement.querySelector('.total').textContent = '0B';\n        progressElement.querySelector('.speed').textContent = '0B/s';\n\n        this.container.appendChild(progressElement);\n\n        this.trackers[name] = {\n            element: progressElement,\n            startTime: Date.now(),\n            lastLoaded: 0,\n            lastTime: Date.now(),\n            speed: 0,\n            total: 0\n        };\n\n        return this.trackers[name];\n    }\n\n    updateProgress(name, loaded, total) {\n        const tracker = this.trackers[name];\n        if (!tracker) return;\n\n        // 如果是第一次更新，增加总数据量\n        if (tracker.total === 0 && total > 0) {\n            this.totaldata += total;\n        }\n\n        tracker.total = total;\n        const now = Date.now();\n        const elapsed = (now - tracker.lastTime) / 1000;\n        const delta = loaded - tracker.lastLoaded;\n\n        // 更新总加载量\n        this.loaddata += delta;\n\n        // 计算速度\n        tracker.speed = delta / elapsed;\n        tracker.lastLoaded = loaded;\n        tracker.lastTime = now;\n\n        // 更新UI\n        const progress = total > 0 ? (loaded / total * 100) : 0;\n        tracker.element.querySelector('.progress').style.width = `${progress}%`;\n        tracker.element.querySelector('.loaded').textContent = formatBytes(loaded);\n        tracker.element.querySelector('.total').textContent = formatBytes(total);\n        tracker.element.querySelector('.speed').textContent = `${formatBytes(isNaN(tracker.speed) ? 0 : tracker.speed)}/s`;\n\n        // 更新总进度\n        this.updateTotalProgress();\n    }\n\n    updateTotalProgress() {\n        const now = Date.now();\n        const elapsed = (now - this.total.lastTime) / 1000;\n        const delta = this.loaddata - this.total.lastLoaded;\n\n        // 计算速度（至少0.5秒更新一次避免抖动）\n        if (elapsed > 0.5) {\n            this.total.speed = delta / elapsed;\n            this.total.lastLoaded = this.loaddata;\n            this.total.lastTime = now;\n        }\n\n        // 更新UI\n        const progress = this.totaldata > 0 ? (this.loaddata / this.totaldata * 100) : 0;\n        this.total.element.querySelector('.progress').style.width = `${progress}%`;\n        this.total.element.querySelector('.loaded').textContent = formatBytes(this.loaddata);\n        this.total.element.querySelector('.total').textContent = formatBytes(this.totaldata);\n        this.total.element.querySelector('.speed').textContent = `${formatBytes(this.total.speed)}/s`;\n    }\n\n    complete(name) {\n        const tracker = this.trackers[name];\n        if (tracker) {\n            this.updateProgress(name, tracker.total, tracker.total);\n            tracker.element.style.background = 'rgba(76, 175, 80, 0.2)';\n        }\n    }\n\n    all_complete() {\n        setTimeout(() => {\n            const detailsElement = this.detail;\n            if (detailsElement) {\n                detailsElement.open = false;\n            }\n        }, 500);\n    }\n\n    error(name) {\n        const tracker = this.trackers[name];\n        if (tracker) {\n            tracker.element.style.background = 'rgba(244, 67, 54, 0.2)';\n            tracker.element.querySelector('.progress').style.background = '#f44336';\n        }\n    }\n}\n\n// 辅助函数：格式化字节\nfunction formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n}\ndoms.chartPackFile.addEventListener('input', function () {\n    if (this.files.length <= 0) return;\n    console.log(this.files);\n    loadChartFiles(this.files);\n});\n// 添加URL加载按钮事件\ndocument.getElementById('load-url-btn').addEventListener('click', async () => {\n    const url = document.getElementById('chart-url-input').value;\n    if (!url) {\n        alert('Please enter a URL');\n        return;\n    }\n\n    try {\n        doms.chartPackFileReadProgress.innerText = 'Downloading file from URL...';\n\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n        const blob = await response.blob();\n        const filename = url.split('/').pop() || 'chart.zip';\n        const file = new File([blob], filename, {\n            type: blob.type,\n            lastModified: new Date().getTime()\n        });\n\n        loadChartFiles([file]);\n    } catch (e) {\n        doms.chartPackFileReadProgress.innerText = 'Failed to download: ' + e.message;\n        console.error('URL load error:', e);\n    }\n});\n\n// 支持按回车键触发加载\ndocument.getElementById('chart-url-input').addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n        document.getElementById('load-url-btn').click();\n    }\n});\ndoms.skinPackFile.addEventListener('input', function () {\n    if (this.files.length <= 0 || !this.files[0]) return;\n\n    JSZip.loadAsync(this.files[0], {\n        createFolders: false\n    })\n        .then(async (result) => {\n            let loadSuccessCount = 0;\n\n            for (const name in result.files) {\n                let file = result.files[name];\n                if (file.dir) continue;\n\n                let fileFormatSplit = file.name.split('.');\n                let fileFormat = fileFormatSplit[fileFormatSplit.length - 1];\n                let newFile = new File(\n                    [(await file.async('blob'))],\n                    name, {\n                    type: '',\n                    lastModified: file.date\n                }\n                );\n\n                newFile.format = fileFormat;\n\n                (await (new Promise(() => {\n                    throw new Error('Just make a promise, plz ignore me');\n                }))\n                    .catch(async () => {\n                        let imgBitmap = await createImageBitmap(newFile);\n                        let texture = await Texture.from(imgBitmap);\n\n                        let textureName = /^([a-zA-Z]+)\\.[a-zA-Z]+$/.exec(newFile.name)[1];\n                        textureName = textureName.replace(textureName[0], textureName[0].toLowerCase());\n\n                        if (textureName.toLowerCase() == 'judgeline' || textureName.toLowerCase() == 'pauseButton') return;\n                        if (!assets.textures[textureName]) return;\n\n                        Texture.addToCache(texture, textureName);\n                        assets.textures[textureName] = texture;\n\n                        loadSuccessCount++;\n                        doms.skinPackFileReadProgress.innerText = 'Load ' + newFile.name + ' successfully.';\n\n                        return;\n                    })\n                    .catch(async () => {\n                        let audio = await loadAudio(newFile, false, true);\n\n                        if (newFile.name.indexOf('Hitsound-') == 0) {\n                            let audioName = /^Hitsound\\-([a-zA-Z]+)\\.[a-zA-Z\\d]+$/.exec(newFile.name)[1].toLowerCase();\n                            if (!assets.sounds[audioName]) return;\n\n                            assets.sounds[audioName] = audio;\n\n                            loadSuccessCount++;\n                            doms.skinPackFileReadProgress.innerText = 'Load ' + newFile.name + ' successfully.';\n                        }\n\n                        return;\n                    })\n                    .catch((e) => {\n                        /* No */\n                    }));\n            }\n\n            if (!(assets.textures.clickRaw instanceof Array)) {\n                let _clickTextures = [];\n\n                for (let i = 0; i < Math.floor(assets.textures.clickRaw.height / assets.textures.clickRaw.width); i++) {\n                    let rectangle = new Rectangle(0, i * assets.textures.clickRaw.width, assets.textures.clickRaw.width, assets.textures.clickRaw.width);\n                    let texture = new Texture(assets.textures.clickRaw.baseTexture, rectangle);\n\n                    Texture.addToCache(texture, 'clickRaw' + (i + 0));\n\n                    texture.defaultAnchor.set(0.5);\n                    _clickTextures.push(texture);\n                }\n\n                assets.textures.clickRaw = _clickTextures;\n            }\n\n            doms.skinPackFileReadProgress.innerText = 'Successfully load ' + loadSuccessCount + ' skin file(s).';\n        })\n        .catch((e) => {\n            doms.skinPackFileReadProgress.innerText = this.files[0].name + ' may not a vaild zip file.';\n            console.error(e);\n        });\n});\n\ndoms.file.chart.addEventListener('input', function () {\n    currentFile.chart = files.charts[this.value];\n\n    if (files.infos && files.infos.length > 0) {\n        for (const info of files.infos) {\n            if (info.Chart === this.value) {\n                currentFile.music = files.musics[info.Music];\n                currentFile.bg = files.images[info.Image];\n\n                doms.file.music.value = info.Music;\n                doms.file.bg.value = info.Image;\n\n                break;\n            }\n        }\n    }\n\n    doms.file.music.dispatchEvent(new Event('input'));\n    doms.file.bg.dispatchEvent(new Event('input'));\n});\n\ndoms.file.music.addEventListener('input', function () {\n    currentFile.music = files.musics[this.value];\n});\n\ndoms.file.bg.addEventListener('input', function () {\n    currentFile.bg = files.images[this.value];\n});\n\ndoms.startBtn.addEventListener('click', async () => {\n    // 添加竖屏检测\n\n    if (!currentFile.chart) {\n        alert('No chart selected.');\n        return;\n    }\n    if (!currentFile.music) {\n        alert('No music selected.');\n        return;\n    }\n\n    let zipFiles = {\n        ...files.all\n    };\n\n    if (!zipFiles['Tap.png']) zipFiles['Tap.png'] = assets.textures.tap;\n    if (!zipFiles['TapHL.png']) zipFiles['TapHL.png'] = assets.textures.tapHL;\n    if (!zipFiles['Drag.png']) zipFiles['Drag.png'] = assets.textures.drag;\n    if (!zipFiles['DragHL.png']) zipFiles['DragHL.png'] = assets.textures.dragHL;\n    if (!zipFiles['Flick.png']) zipFiles['Flick.png'] = assets.textures.flick;\n    if (!zipFiles['FlickHL.png']) zipFiles['FlickHL.png'] = assets.textures.flickHL;\n    if (!zipFiles['HoldHead.png']) zipFiles['HoldHead.png'] = assets.textures.holdHeadHL;\n    if (!zipFiles['HoldHeadHL.png']) zipFiles['HoldHeadHL.png'] = assets.textures.holdHeadHL;\n    if (!zipFiles['Hold.png']) zipFiles['Hold.png'] = assets.textures.holdBody;\n    if (!zipFiles['HoldHL.png']) zipFiles['HoldHL.png'] = assets.textures.holdBodyHL;\n    if (!zipFiles['HoldEnd.png']) zipFiles['HoldEnd.png'] = assets.textures.holdEnd;\n\n    currentFile.chart.music = currentFile.music;\n    if (currentFile.bg && doms.settings.showBG.checked) {\n        let bgBlur = await Texture.from(await blurImage(await resizeImage(currentFile.bg, parseInt(doms.settings.bgQuality.value)), doms.settings.bgBlur.value));\n        Texture.addToCache(bgBlur, doms.file.bg.value + '_blured');\n        currentFile.chart.bg = bgBlur;\n    } else {\n        currentFile.chart.bg = null;\n    }\n\n    if (files.infos && files.infos.length > 0) {\n        for (const info of files.infos) {\n            if (info.Chart === doms.file.chart.value) {\n                currentFile.chart.info.name = info.Name;\n                currentFile.chart.info.artist = info.Composer;\n                currentFile.chart.info.author = info.Designer;\n                currentFile.chart.info.bgAuthor = info.Illustrator;\n                currentFile.chart.info.difficult = info.Level;\n\n                break;\n            }\n        }\n    }\n\n    if (files.lines && files.lines.length > 0) {\n        let lines = [];\n\n        for (const line of files.lines) {\n            if (line.Chart === doms.file.chart.value) {\n                lines.push(line);\n            }\n        }\n\n        currentFile.chart.readLineTextureInfo(lines);\n    }\n    const isPortrait = window.innerHeight > window.innerWidth;\n    if (isPortrait) {\n        alert(\"检测到您处于竖屏模式！这可能导致铺面比较奇怪，但如你所愿，游戏会继续进行。\");\n    }\n    GlobalGame = new PhiChartRender.Game({\n        chart: currentFile.chart,\n        assets: assets,\n        effects: files.effects,\n        zipFiles: zipFiles,\n        render: {\n            resizeTo: document.documentElement,\n            resolution: doms.settings.lowResolution.checked ? 1 : window.devicePixelRatio,\n            antialias: doms.settings.antiAlias.checked\n        },\n        settings: {\n            multiNoteHL: doms.settings.multiNoteHL.checked,\n            showAPStatus: doms.settings.showAPStatus.checked,\n            showInputPoint: doms.settings.showInputPoint.checked,\n            bgDim: doms.settings.bgDim.value,\n            noteScale: 10000 - doms.settings.noteScale.value,\n\n            audioOffset: doms.settings.offset.value / 1000 + (doms.settings.useBrowserLatency.checked ? PhiChartRender.WAudio.globalLatency : 0),\n            speed: doms.settings.speed.value,\n\n            hitsound: doms.settings.hitsound.checked,\n            hitsoundVolume: doms.settings.hitsoundVolume.value,\n\n            challengeMode: doms.settings.challengeMode.checked,\n            autoPlay: doms.settings.autoPlay.checked,\n            debug: doms.settings.debug.checked,\n            shader: doms.settings.prprExtra.checked\n        },\n        watermark: 'github/MisaLiu/phi-chart-render ' + GIT_VERSION + (import.meta.env.MODE === 'development' ? ' [Develop Mode]' : '')\n    });\n\n    document.body.appendChild(GlobalGame.render.view);\n    GlobalGame.render.view.classList.add('canvas-game');\n\n    GlobalGame.on('start', () => console.log('Game started!'));\n    GlobalGame.on('pause', () => {\n        console.log('Game paused!');\n        qs('.game-paused').style.display = 'block';\n    });\n    GlobalGame.on('end', (game) => {\n        console.log('Game ended!');\n        showGameResultPopup(game);\n    });\n\n    if (doms.settings.plyndb.checked) GlobalGame.on('tick', PlayLikeYouNeverDidBefore);\n\n    GlobalGame.createSprites();\n    GlobalGame.start();\n\n    // eruda.hide();\n\n    if (import.meta.env.MODE === 'development') {\n        window._game = GlobalGame;\n        window.globalThis.__PIXI_APP__ = GlobalGame.render;\n    }\n\n    doms.fileSelect.style.display = 'none';\n});\n\ndoms.errorWindow.closeBtn.addEventListener('click', () => {\n    doms.errorWindow.window.style.display = 'none';\n});\n\nwindow.addEventListener('resize', () => {\n    calcHeightPercent();\n});\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.addEventListener('load', async () => {\n        try {\n            const progressTracker = new ProgressTracker();\n            const shouldSkipConfig = getSearchString('skip_config') === 'true';\n            const urlParams = new URLSearchParams(window.location.search);\n            const chartUrlParam = urlParams.get('chart_url');\n            // 获取URL输入框DOM\n            const chartUrlInput = document.getElementById('chart-url-input');\n\n            // 隐藏除进度外的元素\n            toggleSkipConfigElements(false);\n\n\n            // 定义所有需要加载的资源\n            const allResources = [\n                // 图片资源\n                ...[{\n                    name: 'tap',\n                    url: './assets/Tap.png',\n                    type: 'image'\n                },\n                {\n                    name: 'tapHL',\n                    url: './assets/TapHL.png',\n                    type: 'image'\n                },\n                {\n                    name: 'drag',\n                    url: './assets/Drag.png',\n                    type: 'image'\n                },\n                {\n                    name: 'dragHL',\n                    url: './assets/DragHL.png',\n                    type: 'image'\n                },\n                {\n                    name: 'flick',\n                    url: './assets/Flick.png',\n                    type: 'image'\n                },\n                {\n                    name: 'flickHL',\n                    url: './assets/FlickHL.png',\n                    type: 'image'\n                },\n                {\n                    name: 'holdHead',\n                    url: './assets/HoldHead.png',\n                    type: 'image'\n                },\n                {\n                    name: 'holdHeadHL',\n                    url: './assets/HoldHeadHL.png',\n                    type: 'image'\n                },\n                {\n                    name: 'holdBody',\n                    url: './assets/Hold.png',\n                    type: 'image'\n                },\n                {\n                    name: 'holdBodyHL',\n                    url: './assets/HoldHL.png',\n                    type: 'image'\n                },\n                {\n                    name: 'holdEnd',\n                    url: './assets/HoldEnd.png',\n                    type: 'image'\n                },\n                {\n                    name: 'judgeline',\n                    url: './assets/JudgeLine.png',\n                    type: 'image'\n                },\n                {\n                    name: 'clickRaw',\n                    url: './assets/clickRaw128.png',\n                    type: 'image'\n                },\n                {\n                    name: 'pauseButton',\n                    url: './assets/pauseButton.png',\n                    type: 'image'\n                }\n                ],\n                // 音效资源\n                ...[{\n                    name: 'tap',\n                    url: './assets/sounds/Hitsound-Tap.ogg',\n                    type: 'sound',\n                    options: {\n                        loop: false,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'drag',\n                    url: './assets/sounds/Hitsound-Drag.ogg',\n                    type: 'sound',\n                    options: {\n                        loop: false,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'flick',\n                    url: './assets/sounds/Hitsound-Flick.ogg',\n                    type: 'sound',\n                    options: {\n                        loop: false,\n                        noTimer: true\n                    }\n                }\n                ],\n                // 结果音乐资源\n                ...[{\n                    name: 'ez',\n                    url: './assets/sounds/result/ez.ogg',\n                    type: 'resultMusic',\n                    options: {\n                        loop: true,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'hd',\n                    url: './assets/sounds/result/hd.ogg',\n                    type: 'resultMusic',\n                    options: {\n                        loop: true,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'in',\n                    url: './assets/sounds/result/in.ogg',\n                    type: 'resultMusic',\n                    options: {\n                        loop: true,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'at',\n                    url: './assets/sounds/result/at.ogg',\n                    type: 'resultMusic',\n                    options: {\n                        loop: true,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'sp',\n                    url: './assets/sounds/result/sp.ogg',\n                    type: 'resultMusic',\n                    options: {\n                        loop: true,\n                        noTimer: true\n                    }\n                },\n                {\n                    name: 'spGlitch',\n                    url: './assets/sounds/result/sp_glitch.ogg',\n                    type: 'resultMusic',\n                    options: {\n                        loop: true,\n                        noTimer: true\n                    }\n                }\n                ],\n                //字体文件资源\n                ...[\n                    {\n                        name: 'MiSans',\n                        url: './fonts/MiSans-Regular.ttf',\n                        type: 'font'\n                    },\n                    {\n                        name: 'A-OTF Shin Go Pr6N H',\n                        url: './fonts/A-OTF_Shin_Go_Pr6N_H.ttf',\n                        type: 'font'\n                    }\n                ]\n            ];\n            // 并发加载所有资源（每个文件独立处理）\n            const resourceLoadPromises = allResources.map(resource =>\n                (async () => {\n                    try {\n                        doms.loadingStatus.innerText = `Loading assets ...`;\n                        // 添加文件到进度跟踪器\n                        // progressTracker.addFile(resource.name, resource.url);\n                        // 获取文件内容\n                        const res = await requestFile(\n                            resource.url,\n                            progressTracker,\n                            resource.name + '(' + resource.type + ')'\n                        );\n\n\n                        // 根据资源类型处理\n                        switch (resource.type) {\n                            case 'image':\n                                const imgBitmap = await createImageBitmap(res);\n                                const texture = await Texture.from(imgBitmap);\n                                Texture.addToCache(texture, resource.name);\n                                assets.textures[resource.name] = texture;\n\n                                // 特殊处理 clickRaw\n                                if (resource.name === 'clickRaw') {\n                                    const _clickTextures = [];\n                                    for (let i = 0; i < Math.floor(texture.height / texture.width); i++) {\n                                        const rectangle = new Rectangle(0, i * texture.width, texture.width, texture.width);\n                                        const subTexture = new Texture(texture.baseTexture, rectangle);\n                                        Texture.addToCache(subTexture, `${resource.name}${i}`);\n                                        subTexture.defaultAnchor.set(0.5);\n                                        _clickTextures.push(subTexture);\n                                    }\n                                    assets.textures[resource.name] = _clickTextures;\n                                }\n                                doms.loadingStatus.innerText = `Loaded ${resource.type === 'image' ? 'asset' :\n                                    resource.type === 'sound' ? 'hitsound' : 'result music'} ${resource.name} ...`;\n                                break;\n\n                            case 'sound':\n                                const sound = await loadAudio(res, resource.options.loop, resource.options.noTimer);\n                                if (!assets.sounds) assets.sounds = {};\n                                assets.sounds[resource.name] = sound;\n                                doms.loadingStatus.innerText = `Loaded ${resource.type === 'image' ? 'asset' :\n                                    resource.type === 'sound' ? 'hitsound' : 'result music'} ${resource.name} ...`;\n                                break;\n\n                            case 'resultMusic':\n                                const resultMusic = await loadAudio(res, resource.options.loop, resource.options.noTimer);\n                                if (!assets.sounds.result) assets.sounds.result = {};\n                                assets.sounds.result[resource.name] = resultMusic;\n                                doms.loadingStatus.innerText = `Loaded ${resource.type === 'image' ? 'asset' :\n                                    resource.type === 'sound' ? 'hitsound' : 'result music'} ${resource.name} ...`;\n                                break;\n                            case 'font': {\n                                try {\n                                    const arrayBuffer = await res.arrayBuffer();\n                                    // 创建字体对象\n                                    // debugger;\n                                    const fontFace = new FontFace(resource.name, arrayBuffer);\n                                    // 添加到文档字体集\n                                    document.fonts.add(fontFace);\n                                    // 加载字体\n                                    await fontFace.load(null, 30000);\n                                    console.log(`Font ${resource.name} loaded successfully`);\n                                    doms.loadingStatus.innerText = `Loaded font ${resource.name} ...`;\n                                } catch (e) {\n                                    console.error(`Failed to load font ${resource.name}:`, e);\n                                    doms.loadingStatus.innerText = `Failed to load font ${resource.name}: ${e.message}`;\n                                }\n                                break;\n                            }\n                        }\n                    } catch (e) {\n                        console.error(`Failed getting resource ${resource.name}:`, e);\n                    }\n                })()\n            );\n\n            await Promise.all(resourceLoadPromises);\n            progressTracker.all_complete();\n            document.body.classList.add('font-loaded');\n\n            doms.loadingStatus.innerText = 'All done!';\n            doms.chartPackFileReadProgress.innerText = 'No chart pack file selected';\n            doms.chartPackFile.disabled = false;\n            doms.skinPackFile.disabled = false;\n\n            calcHeightPercent();\n            // 新增：解析URL参数并自动加载\n\n\n\n            // 新增：加载完成检查函数\n            const waitForFilesLoaded = () => {\n                return new Promise(resolve => {\n                    const checkInterval = setInterval(() => {\n                        if (doms.file.chart.childNodes.length > 0 &&\n                            doms.file.music.childNodes.length > 0) {\n                            clearInterval(checkInterval);\n                            resolve();\n                        }\n                    }, 100);\n                });\n            };\n\n            if (chartUrlParam) {\n                try {\n                    let chartUrl;\n\n                    // 尝试作为base64解码\n                    try {\n                        chartUrl = atob(chartUrlParam);\n                        // 验证解码后是否是有效URL\n                        if (!isValidUrl(chartUrl)) {\n                            throw new Error('Decoded string is not a valid URL');\n                        }\n                    } catch (e) {\n                        // 如果不是base64，直接使用原始值\n                        chartUrl = chartUrlParam;\n                    }\n\n                    // 填入输入框\n                    chartUrlInput.value = chartUrl;\n\n                    // 显示加载状态\n                    doms.chartPackFileReadProgress.innerText = 'Loading chart from URL...';\n\n                    // 下载并加载图表文件\n                    const response = await fetch(chartUrl);\n                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n                    const blob = await response.blob();\n                    const filename = chartUrl.split('/').pop() || 'chart.zip';\n                    const file = new File([blob], filename, {\n                        type: blob.type,\n                        lastModified: new Date().getTime()\n                    });\n\n                    // 加载图表文件\n                    await loadChartFiles([file]);\n\n                    // 等待文件加载完成\n                    await waitForFilesLoaded();\n\n                    // 更新状态\n                    doms.chartPackFileReadProgress.innerText = `Loaded chart from ${chartUrl}`;\n                    // 检查是否需要跳过配置直接开始\n                    if (shouldSkipConfig) {\n                        console.log('skip_config enabled, starting game automatically');\n\n                        // 确保文件选择完成\n                        if (doms.file.chart.childNodes.length > 0 &&\n                            doms.file.music.childNodes.length > 0) {\n\n                            // 自动选择第一个图表和音乐\n                            doms.file.chart.value = doms.file.chart.options[0].value;\n                            doms.file.music.value = doms.file.music.options[0].value;\n\n                            // 触发输入事件更新选择\n                            doms.file.chart.dispatchEvent(new Event('input'));\n                            doms.file.music.dispatchEvent(new Event('input'));\n\n                            // 添加短暂延迟确保UI更新\n                            setTimeout(() => {\n                                // 模拟点击开始按钮\n                                toggleSkipConfigElements(true);\n                                doms.startBtn.click();\n\n                                // 自动切换到全屏\n                                if (document.documentElement.requestFullscreen) {\n                                    document.getElementById('fullscreen').click().catch(e => console.error('Fullscreen error:', e));\n                                }\n                            }, 500);\n                        }\n                    }\n                } catch (e) {\n                    doms.chartPackFileReadProgress.innerText = 'Failed to load from URL: ' + e.message;\n                    console.error('URL load error:', e);\n                }\n            }\n\n\n\n            // 添加URL加载按钮事件\n            document.getElementById('load-url-btn').addEventListener('click', async () => {\n                const url = chartUrlInput.value;\n                if (!url) {\n                    alert('Please enter a URL');\n                    return;\n                }\n\n                try {\n                    doms.chartPackFileReadProgress.innerText = 'Downloading file from URL...';\n\n                    const response = await fetch(url);\n                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n                    const blob = await response.blob();\n                    const filename = url.split('/').pop() || 'chart.zip';\n                    const file = new File([blob], filename, {\n                        type: blob.type,\n                        lastModified: new Date().getTime()\n                    });\n\n                    loadChartFiles([file]);\n                } catch (e) {\n                    doms.chartPackFileReadProgress.innerText = 'Failed to download: ' + e.message;\n                    console.error('URL load error:', e);\n                }\n            });\n            toggleSkipConfigElements(true);\n            // 支持按回车键触发加载\n            chartUrlInput.addEventListener('keypress', (e) => {\n                if (e.key === 'Enter') {\n                    document.getElementById('load-url-btn').click();\n                }\n            });\n\n\n            // URL验证辅助函数\n            function isValidUrl(string) {\n                try {\n                    new URL(string);\n                    return true;\n                } catch (_) {\n                    return false;\n                }\n            }\n            doms.settings.testInputDelay.testTimes = 0;\n            doms.settings.testInputDelay.testDelays = 0;\n\n            doms.settings.testInputDelay.addEventListener('touchstart', (e) => {\n                let getTime = () => performance ? performance.now() : Date.now();\n                doms.settings.testInputDelay.testTimes += 1;\n                doms.settings.testInputDelay.testDelays += (getTime() - e.timeStamp);\n                doms.settings.testInputDelay.innerText = 'Tap on this button to test input delay...' + (Math.round((doms.settings.testInputDelay.testDelays / doms.settings.testInputDelay.testTimes) * 1000) / 1000) + 'ms';\n            });\n\n            doms.playResult.scoreBar.addEventListener('click', () => doms.playResult.accBar.classList.toggle('show'));\n\n            {\n                let listTabs = document.querySelectorAll('div.tab div.bar > *');\n                let listTabContents = document.querySelectorAll('div.tab div.content > *[id^=\"tab-\"]');\n\n                for (const tab of listTabs) {\n                    tab.addEventListener('click', switchTab);\n                }\n\n                for (let i = 0; i < listTabContents.length; i++) {\n                    let content = listTabContents[i];\n                    if (i === 0) content.style.display = 'block';\n                    else content.style.display = 'none';\n                }\n            }\n\n            if (import.meta.env.MODE === 'production') {\n                fetch('https://www.googletagmanager.com/gtag/js?id=G-PW9YT2TVFV')\n                    .then(res => res.text())\n                    .then(res => {\n                        eval(res);\n                        window.dataLayer = window.dataLayer || [];\n                        window.gtag = function () {\n                            dataLayer.push(arguments);\n                        };\n                        gtag('js', new Date());\n                        gtag('config', 'G-PW9YT2TVFV');\n                    })\n                    .catch(e => {\n                        console.error('Failed to load Google Analytics');\n                        console.error(e);\n                    });\n            }\n\n            initConsoleEasterEgg();\n\n            // 修改 requestFile 函数以支持进度跟踪\n            function requestFile(url, progressTracker, name) {\n                return new Promise((res, rej) => {\n                    let xhr = new XMLHttpRequest();\n                    xhr.responseType = 'blob';\n\n                    // 添加进度跟踪\n                    progressTracker.addFile(name, url);\n\n                    xhr.onprogress = (event) => {\n                        if (event.lengthComputable) {\n                            progressTracker.updateProgress(name, event.loaded, event.total);\n                        }\n                    };\n\n                    xhr.onload = () => {\n                        if (xhr.status === 200) {\n                            progressTracker.complete(name);\n                            res(xhr.response);\n                        } else {\n                            progressTracker.error(name);\n                            rej(new Error(`HTTP error! status: ${xhr.status}`));\n                        }\n                    };\n\n                    xhr.onerror = (e) => {\n                        progressTracker.error(name);\n                        rej(e);\n                    };\n\n                    xhr.open('GET', url);\n                    xhr.send();\n                });\n            }\n        } catch (error) {\n            alert(error.message);\n        }\n    });\n\n});\n\n\nfunction readArrayBuffer(file) {\n    return new Promise((res, rej) => {\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n            res(reader.result);\n        };\n\n        reader.onerror = (e) => {\n            rej(e);\n        };\n\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadAudio(file, loop = false, noTimer = false) {\n    return new Promise(async (res, rej) => {\n        try {\n            let arrayBuffer = await readArrayBuffer(file);\n            let audio = await PhiChartRender.WAudio.from(arrayBuffer, loop, noTimer);\n            res(audio);\n        } catch (e) {\n            rej(e);\n        }\n    });\n}\n\nfunction CsvReader(_text) {\n    let firstRow = [];\n    let result = [];\n\n    _text.split(/[\\r\\n]+/).forEach((row, rowIndex) => {\n        row.split(',').forEach((text, columnIndex) => {\n            if (rowIndex <= 0) {\n                firstRow.push(/([A-Za-z0-9]+)/.exec(text)[1]);\n            } else {\n                if (!result[rowIndex - 1]) result[rowIndex - 1] = {};\n                result[rowIndex - 1][firstRow[columnIndex]] = text;\n            }\n        });\n    });\n\n    return result;\n}\n\nfunction SettingsReader(_text) {\n    let rows = (_text + '').split(/[\\r\\n]+/);\n    let rowReg = /^([a-zA-Z]+):\\s(.+)$/;\n    let result = {};\n\n    for (const row of rows) {\n        let rowRegResult = rowReg.exec(row);\n\n        if (!rowRegResult || rowRegResult.length < 3) continue;\n\n        let infoKey = rowRegResult[1];\n        let infoValue = rowRegResult[2];\n\n        switch (infoKey) {\n            case 'Name': {\n                result['Name'] = infoValue;\n                break;\n            }\n            case 'Level': {\n                result['Level'] = infoValue;\n                break;\n            }\n            case 'Charter': {\n                result['Designer'] = infoValue;\n                break;\n            }\n            case 'Chart': {\n                result['Chart'] = infoValue;\n                break;\n            }\n            case 'Song': {\n                result['Music'] = infoValue;\n                break;\n            }\n            case 'Picture': {\n                result['Image'] = infoValue;\n                break;\n            }\n            default: {\n                result[infoKey] = infoValue;\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction blurImage(_texture, radius = 10) {\n    let canvas = document.createElement('canvas');\n    let ctx = canvas.getContext('2d');\n    let texture;\n\n    if (_texture.baseTexture) texture = _texture.baseTexture.resource.source;\n    else texture = _texture;\n\n    canvas.width = texture.width;\n    canvas.height = texture.height;\n\n    ctx.drawImage(texture, 0, 0);\n\n    StackBlur(canvas, 0, 0, texture.width, texture.height, radius);\n    return new Promise((res, rej) => {\n        createImageBitmap(canvas)\n            .then(result => res(result))\n            .catch(e => rej(e))\n    });\n}\n\nfunction resizeImage(_texture, quality = 1) {\n    let canvas = document.createElement('canvas');\n    let texture;\n    let pica = Pica({\n        features: ['all']\n    });\n\n    if (_texture.baseTexture) texture = _texture.baseTexture.resource.source;\n    else texture = _texture;\n\n    switch (quality) {\n        case 0: {\n            canvas.width = 480;\n            canvas.height = texture.height * (480 / texture.width);\n            break;\n        }\n        case 1: {\n            canvas.width = 720;\n            canvas.height = texture.height * (720 / texture.width);\n            break;\n        }\n        case 2: {\n            canvas.width = 1080;\n            canvas.height = texture.height * (1080 / texture.width);\n            break;\n        }\n        default: {\n            canvas.width = texture.width;\n            canvas.height = texture.height;\n        }\n    }\n\n    return (new Promise(async (res, rej) => {\n        res(await createImageBitmap(await pica.resize(texture, canvas)));\n    }));\n}\n\nfunction calcHeightPercent() {\n    let realWidth = document.documentElement.clientHeight / 9 * 16 < document.documentElement.clientWidth ? document.documentElement.clientHeight / 9 * 16 : document.documentElement.clientWidth;\n\n    document.body.style.setProperty('--height-percent', document.documentElement.clientHeight / 1080);\n    document.body.style.setProperty('--width-offset', (document.documentElement.clientWidth - realWidth) / 2 + 'px');\n}\n\nfunction pauseGame() {\n    if (!GlobalGame) return;\n\n    GlobalGame.pause();\n\n    if (GlobalGame._isPaused) {\n        qs('.game-paused').style.display = 'block';\n    } else {\n        console.log('Game unpaused!');\n        qs('.game-paused').style.display = 'none';\n    }\n}\n\nfunction restartGame() {\n    if (!GlobalGame) return;\n\n    GlobalGame.restart();\n\n    for (const name in assets.sounds.result) {\n        let sound = assets.sounds.result[name];\n        sound.stop();\n    }\n\n    qs('.game-paused').style.display = 'none';\n    qs('.play-result').classList.remove('show');\n    doms.playResult.accBar.classList.remove('show');\n}\n\nfunction exitGame() {\n    if (!GlobalGame) return;\n\n    GlobalGame.destroy(true);\n    GlobalGame = undefined;\n\n    if (import.meta.env.MODE === 'development') {\n        window._game = undefined;\n        window.globalThis.__PIXI_APP__ = undefined;\n    }\n\n    for (const name in assets.sounds.result) {\n        let sound = assets.sounds.result[name];\n        sound.stop();\n    }\n\n    qs('.game-paused').style.display = 'none';\n    qs('.play-result').classList.remove('show');\n    doms.playResult.accBar.classList.remove('show');\n\n    doms.fileSelect.style.display = 'block';\n}\n\nwindow.pauseGame = pauseGame;\nwindow.restartGame = restartGame;\nwindow.exitGame = exitGame;\n\nfunction showGameResultPopup(game) {\n    let chart = game.chart;\n    let judge = game.judgement;\n\n    qs('.play-result .song-info .title').innerHTML = (chart.info.name || 'Untitled');\n    qs('.play-result .song-info .subtitle.artist').innerHTML = (chart.info.artist || 'Unknown');\n    qs('.play-result .song-info .subtitle.diff').innerHTML = (chart.info.difficult || 'SP Lv.?');\n    if (game._settings.challengeMode) qs('.play-result .song-info .subtitle.diff').innerHTML += ' (challenge)';\n    if (Number((game._settings.speed).toFixed(2)) !== 1) qs('.play-result .song-info .subtitle.diff').innerHTML += ' (x' + (game._settings.speed).toFixed(2) + ')';\n\n    if (judge.score.judgeLevel == 6) qs('.play-result .judge-icon').innerText = 'φ';\n    else if (judge.score.judgeLevel == 5) qs('.play-result .judge-icon').innerText = 'V';\n    else if (judge.score.judgeLevel == 4) qs('.play-result .judge-icon').innerText = 'S';\n    else if (judge.score.judgeLevel == 3) qs('.play-result .judge-icon').innerText = 'A';\n    else if (judge.score.judgeLevel == 2) qs('.play-result .judge-icon').innerText = 'B';\n    else if (judge.score.judgeLevel == 1) qs('.play-result .judge-icon').innerText = 'C';\n    else qs('.play-result .judge-icon').innerText = 'False';\n    const judgeIcon = document.querySelector('.judge-icon');\n\n    // 重置样式（确保不影响其他结果）\n    judgeIcon.style.color = '';\n    judgeIcon.style.textShadow = '';\n    if (judge.score.APType == 2) {\n        qs('.play-result .extra-info').innerText = 'All Perfect';\n        judgeIcon.style.color = '#EBCF0E';\n        judgeIcon.style.textShadow = '0px 0px 20px #EBCF0E';\n    } else if (judge.score.APType == 1) {\n        qs('.play-result .extra-info').innerText = 'Full Combo';\n        judgeIcon.style.color = '#2E86FA';\n        judgeIcon.style.textShadow = '0px 0px 20px #2E86FA';\n    } else qs('.play-result .extra-info').innerText = '';\n    if (judge.score._autoPlay) {\n        qs('.play-result .extra-info').innerText = 'Auto Play';\n    }\n\n    qs('.play-result .info-bar.score .score').innerText = fillZero((judge.score.score).toFixed(0));\n    qs('.play-result .info-bar.score .acc').innerText = 'Accuracy ' + (judge.score.acc * 100).toFixed(2) + '%';\n\n    qs('.play-result .info-bar.detail .detail-single .value.perfect').innerText = judge.score.perfect;\n    qs('.play-result .info-bar.detail .detail-single .value.good').innerText = judge.score.good;\n    qs('.play-result .info-bar.detail .detail-single .value.bad').innerText = judge.score.bad;\n    qs('.play-result .info-bar.detail .detail-single .value.miss').innerText = judge.score.miss;\n    qs('.play-result .info-bar.detail .max-combo').innerText = 'Max Combo ' + judge.score.maxCombo;\n\n    {\n        qs('.play-result .info-bar.acc-bar .judge-histogram').innerHTML = '';\n\n        let noteJudgeTime = (!game._settings.challengeMode ? 180 : 90) / 1000;\n        let noteTimeHigestCount = 0;\n        let accHistogramValue = {};\n\n        game.chart.notes.forEach((note) => {\n            if (note.isFake) return;\n            if (isNaN(note.scoreTime)) return;\n\n            accHistogramValue[Math.ceil((note.scoreTime / noteJudgeTime) * 50)] = accHistogramValue[Math.ceil((note.scoreTime / noteJudgeTime) * 50)] ? accHistogramValue[Math.ceil((note.scoreTime / noteJudgeTime) * 50)] + 1 : 1;\n        });\n\n        for (const acc in accHistogramValue) {\n            if (accHistogramValue[acc] > noteTimeHigestCount) noteTimeHigestCount = accHistogramValue[acc];\n        }\n        for (const acc in accHistogramValue) {\n            let value = document.createElement('div');\n            value.style.opacity = (accHistogramValue[acc] / noteTimeHigestCount);\n            value.style.setProperty('--pos', (Number(acc) + 50) + '%');\n\n            if (!game._settings.challengeMode) {\n                if (-(80 / 360 * 100) <= acc && acc <= (80 / 360 * 100)) value.style.background = '#FFECA0';\n                else if (-(160 / 360 * 100) <= acc && acc <= (160 / 360 * 100)) value.style.background = '#B4E1FF';\n                else value.style.background = '#6c4343';\n            } else {\n                if (-(40 / 180 * 100) <= acc && acc <= (40 / 180 * 100)) value.style.background = '#FFECA0';\n                else if (-(75 / 180 * 100) <= acc && acc <= (75 / 180 * 100)) value.style.background = '#B4E1FF';\n                else value.style.background = '#6c4343';\n            }\n\n\n            qs('.play-result .info-bar.acc-bar .judge-histogram').appendChild(value);\n        }\n\n        let center = document.createElement('div');\n        center.className = 'center';\n        qs('.play-result .info-bar.acc-bar .judge-histogram').appendChild(center);\n    }\n\n    {\n        let diffType = chart.info.difficult ? /([a-zA-Z]+)\\s[lL][vV]\\.?(.+)/.exec(chart.info.difficult) : null;\n        diffType = (diffType && diffType.length >= 1 ? diffType[1] : 'IN');\n\n        switch ((diffType ? diffType.toLowerCase() : 'in')) {\n            case 'ez': {\n                assets.sounds.result.ez.stop();\n                assets.sounds.result.ez.play();\n                break;\n            }\n            case 'hd': {\n                assets.sounds.result.hd.stop();\n                assets.sounds.result.hd.play();\n                break;\n            }\n            case 'at': {\n                assets.sounds.result.at.stop();\n                assets.sounds.result.at.play();\n                break;\n            }\n            case 'sp': {\n                if (judge.score.levelPassed) {\n                    assets.sounds.result.spGlitch.stop();\n                    assets.sounds.result.spGlitch.play();\n                } else {\n                    assets.sounds.result.sp.stop();\n                    assets.sounds.result.sp.play();\n                }\n\n                break;\n            }\n            case 'in':\n            default: {\n                assets.sounds.result.in.stop();\n                assets.sounds.result.in.play();\n                break;\n            }\n        }\n    }\n\n    qs('.play-result').classList.add('show');\n\n    function fillZero(num) {\n        let result = num + '';\n        while (result.length < 7) {\n            result = '0' + result;\n        }\n        return result;\n    }\n}\n\nfunction switchTab(e) {\n    let targetTab = e.target;\n    let targetTabContent = targetTab.dataset.tabId;\n\n    if (!document.querySelector('div.tab div.content > *#tab-' + targetTabContent)) return;\n\n    for (const tab of document.querySelectorAll('div.tab div.bar > *')) {\n        tab.classList.remove('active');\n    }\n\n    for (const content of document.querySelectorAll('div.tab div.content > *[id^=\"tab-\"]')) {\n        content.style.display = 'none';\n    }\n\n    targetTab.classList.add('active');\n    document.querySelector('div.tab div.content > *#tab-' + targetTabContent).style.display = 'block';\n}\n\nasync function loadChartFiles(_files) {\n    return new Promise(async (resolve) => {\n        let fileList = [..._files];\n        let processedCount = 0;\n        const totalFiles = fileList.length;\n\n        const processFile = async (file) => {\n            try {\n                if (!file) return;\n\n                let fileFormatSplit = file.name.split('.');\n                let fileFormat = fileFormatSplit[fileFormatSplit.length - 1];\n                file.format = fileFormat;\n\n                doms.chartPackFileReadProgress.innerText = `Loading files: ${file.name} (${processedCount + 1}/${totalFiles})`;\n\n                if (file.name === 'info.csv') {\n                    let rawText = await readText(file);\n                    let infos = CsvReader(rawText);\n                    files.infos.push(...infos);\n                    files.all[file.name] = infos;\n                } else if (file.name === 'line.csv') {\n                    let rawText = await readText(file);\n                    let lines = CsvReader(rawText);\n                    files.lines.push(...lines);\n                    files.all[file.name] = lines;\n                } else if (file.name === 'extra.json') {\n                    if (files.effects instanceof Array) {\n                        console.warn('Already loaded an extra.json, overwriting previous');\n                        files.effects = null;\n                    }\n                    let rawText = await readText(file);\n                    let effects = PhiChartRender.Effect.from(JSON.parse(rawText));\n                    files.effects = effects;\n                    files.all[file.name] = effects;\n                } else if (file.name === 'Settings.txt' || file.name === 'info.txt') {\n                    let rawText = await readText(file);\n                    let info = SettingsReader(rawText);\n                    files.infos.push(info);\n                    files.all[file.name] = info;\n                } else {\n                    try {\n                        // 尝试解压ZIP文件\n                        let zipFiles = await JSZip.loadAsync(file, {\n                            createFolders: false\n                        });\n                        for (const name in zipFiles.files) {\n                            if (zipFiles.files[name].dir) continue;\n                            let zipFile = zipFiles.files[name];\n                            let newFile = new File(\n                                [await zipFile.async('blob')],\n                                name, {\n                                type: '',\n                                lastModified: zipFile.date\n                            }\n                            );\n                            fileList.push(newFile);\n                        }\n                    } catch (zipError) {\n                        // 如果不是ZIP，尝试加载为图表文件\n                        try {\n                            let chartRaw = await readText(file);\n                            let chart = typeof chartRaw === 'string' ? JSON.parse(chartRaw) : chartRaw;\n                            chart = PhiChartRender.Chart.from(chart);\n                            files.charts[file.name] = chart;\n                            files.all[file.name] = chart;\n                            doms.file.chart.appendChild(createSelectOption(file));\n                        } catch (chartError) {\n                            // 如果不是图表，尝试加载为图片\n                            try {\n                                let imgBitmap = await createImageBitmap(file);\n                                let texture = await Texture.from(imgBitmap);\n                                Texture.addToCache(texture, file.name);\n                                files.images[file.name] = texture;\n                                files.all[file.name] = texture;\n                                doms.file.bg.appendChild(createSelectOption(file));\n                            } catch (imageError) {\n                                // 如果不是图片，尝试加载为音频\n                                try {\n                                    let audio = await loadAudio(file, false, false);\n                                    files.musics[file.name] = audio;\n                                    files.all[file.name] = audio;\n                                    doms.file.music.appendChild(createSelectOption(file));\n                                } catch (audioError) {\n                                    // 如果不是音频，尝试加载为着色器\n                                    try {\n                                        let shaderRaw = await readText(file);\n                                        let shader = PhiChartRender.Shader.from(shaderRaw, file.name);\n                                        files.shaders[file.name] = shader;\n                                        files.all[file.name] = shader;\n                                    } catch (shaderError) {\n                                        console.error('Unsupported file:', file.name);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } catch (e) {\n                console.error(`Error processing file ${file.name}:`, e);\n            } finally {\n                processedCount++;\n\n                // 检查是否所有文件处理完成\n                if (processedCount === fileList.length) {\n                    // 更新UI状态\n                    if (doms.file.chart.childNodes.length >= 1 &&\n                        doms.file.music.childNodes.length >= 1) {\n                        doms.file.chart.dispatchEvent(new Event('input'));\n                        doms.startBtn.disabled = false;\n                    }\n\n                    doms.chartPackFileReadProgress.innerText = 'All done!';\n                    resolve();\n                }\n            }\n        };\n\n        // 处理所有文件\n        for (let i = 0; i < fileList.length; i++) {\n            await processFile(fileList[i]);\n        }\n    });\n\n    function readText(file) {\n        return new Promise((res, rej) => {\n            let reader = new FileReader();\n            reader.onloadend = () => res(reader.result);\n            reader.onerror = (e) => rej(e);\n            reader.readAsText(file);\n        });\n    }\n\n    function createSelectOption(file) {\n        let option = document.createElement('option');\n        option.innerText = option.value = file.name;\n        return option;\n    }\n}\n\nasync function initConsoleEasterEgg() {\n    try {\n        let url = await getImageBase64('./icons/64.png');\n        console.log('%c ', 'padding:32px;background:url(' + url + ') center center no-repeat;');\n    } catch (e) { }\n\n    console.log('%cphi-chart-render%c' + GIT_VERSION, 'padding:8px;background-color:#1C1C1C;color:#FFF', 'padding:8px;background-color:#1E90FF;color:#FFF;');\n\n    try {\n        let url = await getImageBase64('./icons/github.png');\n        console.log('%chttps://github.com/MisaLiu/phi-chart-render', 'padding:4px;padding-left:22px;background:url(' + url + ') left center no-repeat;background-color:#1C1C1C;background-size:contain;color:#FFF;');\n    } catch (e) {\n        console.log('%cGitHub: https://github.com/MisaLiu/phi-chart-render', 'padding:4px;background-color:#1C1C1C;color:#FFF;');\n    }\n\n    console.groupCollapsed('❤️ Support me');\n    try {\n        let url = await getImageBase64('./icons/patreon.png');\n        console.log('%chttps://patreon.com/HIMlaoS_Misa', 'padding:4px;padding-left:22px;background:url(' + url + ') left center no-repeat;background-color:#f3455c;background-size:contain;color:#FFF;');\n    } catch (e) {\n        console.log('%Patreon: https://patreon.com/HIMlaoS_Misa', 'padding:4px;background-color:#f3455c;color:#FFF;');\n    }\n\n    try {\n        let url = await getImageBase64('./icons/afdian.png');\n        console.log('%chttps://afdian.net/@MisaLiu', 'padding:4px;padding-left:22px;background:url(' + url + ') left center no-repeat;background-color:#946CE6;background-size:contain;color:#FFF;');\n    } catch (e) {\n        console.log('%爱发电: https://afdian.net/@MisaLiu', 'padding:4px;background-color:#946CE6;color:#FFF;');\n    }\n\n    console.groupEnd();\n\n    function getImageBase64(url) {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then(res => res.blob())\n                .then(res => {\n                    let reader = new FileReader();\n                    reader.onload = () => {\n                        resolve(reader.result);\n                    };\n                    reader.onerror = (e) => {\n                        reject(e);\n                    };\n                    reader.readAsDataURL(res);\n                });\n        });\n    }\n}\n\nfunction PlayLikeYouNeverDidBefore(game, currentTime) {\n    let currentSpeed = 1 + 0.5 * Math.sin(1.5708 * (currentTime % 2));\n    game.chart.music.speed = currentSpeed;\n    game.chart.sprites.info.songName.text = game.chart.info.name + ' (x' + Math.round(currentSpeed * 100) / 100 + ')';\n}\n\n\n// 将全屏和游戏控制函数暴露到全局\nwindow.fullscreen = fullscreen;\nwindow.pauseGame = pauseGame;\nwindow.restartGame = restartGame;\nwindow.exitGame = exitGame;\n\nexport {\n    loadChartFiles\n}"],"names":["bool","defaultValue","number","min","max","text","i","clientX","clientY","identifier","button","type","id","x","y","currentTime","moveSpeed","params","name","canvas","passiveIfSupported","stage","showInputPoint","inputs","idx","point","length","size","notesCount","showAPStatus","isChallengeMode","autoPlay","isEnded","judgelines","judgeline","num","result","input","cosr","sinr","hw","ctx","verify.bool","verify.number","particle","currentTimeProgress","inputPoint","note","anim","baseScale","currentParticleCount","timeBetween","timeBetweenReal","notePosition","pauseButton","chart","effects","judgement","functions","processors","sprites","render","settings","bpm","effect","isStart","_progress","progress","keyCode","isHoldCtrl","isHoldShift","skipTime","fillZero","calcedNoteCount","callback","PIXISettings","_params","verify.text","bgCover","shaderName","shader","shaderNameReal","removeCanvas","withChartSprites","shouldResetFakeJudgeLine","bgScaleWidth","bgScaleHeight","bgScale","width","height","noteScale","resolution","calcBetweenTime","event","events","valueCalculator","Easings","easingsOffset","timePercentEnd","timePercentStart","bezier","easeFunction","easePercent","verifyNum","easePercentStart","easePercentEnd","_bpmList","_events","bpmList","bpmIndex","bpmLength","nextBpmIndex","nextBpm","forceLinear","timeIndex","timeCount","nextTime","a","b","newEvents","lastEvent","withEndTime","eventLayer","noSpeedEventsLayerCount","sameTimeSpeedEventAlreadyExist","currentFloorPosition","floorPositions","eventLayerIndex","eventIndex","eventTime","floorPositionIndex","currentEvent","nextEvent","time","floorPosition","currentValue","texture","zipFiles","debug","lineInfoContainer","lineId","linePosBlock","newPosX","newPosY","valueType","sorter","originValue","multiHL","head","body","end","noteInfoContainer","noteId","notePosBlock","_yOffset","yOffset","originX","_originY","originY","realX","realY","_holdLength","holdLength","inclineValue","noteCtrlScale","sprite","area","startX","endX","startY","endY","_chart","rawChart","notes","sameTimeNoteCount","_judgeline","index","judgelineNotes","e","rawNote","rawNoteIndex","noteIndex","pushNote","noteStartSpeedEvent","newChart","Easing","pos","chartSimple","eventName","_command","commandIndex","command","currentBeatRealTime","bpmChangedBeat","bpmChangedTime","array","noNoteSetsVisibleTime","eventCountIndex","eventCountLength","currentEventValue","visibleBeat","newEvent","noteEndSpeedEvent","_notes","judgelineIndex","_eventLayer","_event","inclineEvents","parentLineId","parentLine","_calcBetweenTime","NumberReg","isNumberRequired","startNum","endNum","NotFloatNum","nextTimePercent","currentNum","startText","endText","currentText","lastTextIndex","currentTextIndex","extraTextIndex","_noteControls","valueName","noteControls","controlIndex","control","nextControl","separateNoteControl","arrangeSameValueControls","controls","xBetween","valueBetween","easingFunc","currentX","currentPercent","startValue","endValue","_chartInfo","_chartLineTexture","chartInfo","chartMD5","Convert.RePhiEdit","Convert.Official","Convert.PhiEdit","infos","isReaded","lineInfo","textures","uiStage","speed","bgDim","multiNoteHL","linesWithZIndex","oldScaleY","oldEvents","newEvents2","oldEvent","lastNewEvent","newStartTime","newEndTime","lastNewEvent2","duration1","duration2","gain","osc","AudioContext","realTime","delta","offset","duration","value","src","loop","volume","onend","res","rej","startOffset","buffer","track","audio","withTimer","playedBeforeSeek","arrayBuffer","mp3Tags","uintArray","offsetAfterTag","Mp3FileHeads","Mp3FileHead","tags","printWarn","msg","frameTag","vbrTag","sampleRate","tag","effectList","rawEffects","_effect","_values","_timedValues","values","_value","arr","prevValue","verifyBool","json","Reader.PrprEffectReader","screenSize","vars","_currentValue","_shaderText","shaderText","defaultValues","uniforms","uniform","v","gl","doms","downloadId","resUrls","verifyText","urls","fileName","settingsFile","downloadFile","song","bg","url","onProgressChange","xhr","selector","show","children","child","searchStrings","singleString","stringValue","container","element","wrapper","progressElement","loaded","total","tracker","now","elapsed","detailsElement","bytes","decimals","k","dm","sizes","response","blob","filename","file","loadSuccessCount","fileFormatSplit","fileFormat","newFile","imgBitmap","textureName","audioName","_clickTextures","rectangle","info","bgBlur","lines","line","PhiChartRender.Game","PhiChartRender.WAudio","game","string","progressTracker","resource","subTexture","sound","resultMusic","fontFace","resolve","checkInterval","chartUrl","getTime","listTabs","listTabContents","tab","content","error","reader","noTimer","_text","firstRow","row","rowIndex","columnIndex","rows","rowReg","rowRegResult","infoKey","infoValue","_texture","radius","StackBlur","quality","pica","realWidth","judge","judgeIcon","noteJudgeTime","noteTimeHigestCount","accHistogramValue","acc","center","diffType","targetTab","targetTabContent","_files","fileList","processedCount","totalFiles","processFile","rawText","readText","PhiChartRender.Effect","zipFile","chartRaw","PhiChartRender.Chart","createSelectOption","shaderRaw","PhiChartRender.Shader","option","getImageBase64","reject","currentSpeed"],"mappings":"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"}